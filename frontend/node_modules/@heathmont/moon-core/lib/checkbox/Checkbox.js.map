{"version":3,"sources":["../../src/checkbox/Checkbox.tsx"],"names":["BORDER_WIDTH","CheckboxHiddenInput","styled","input","attrs","type","theme","backgroundColor","color","piccolo","backgroundSize","opacity","transform","trunks","transitionProperty","willChange","borderColor","cursor","CheckboxStyledInput","figure","position","display","boxSizing","width","space","height","border","borderRadius","transitionDuration","content","top","left","transitionTimingFunction","backgroundImage","goten","backgroundRepeat","backgroundPosition","CheckboxLabel","label","flexDirection","alignItems","gap","small","variant","padding","gohan","CheckboxCaption","span","Checkbox","ref","disabled","ariaLabel","id","inputProps"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { inlineSvg, rem, hideVisually } from '@heathmont/moon-utils';\n\nimport { CheckboxIcon } from './private/icon';\n\ntype Variants = 'option';\n\nconst BORDER_WIDTH = 2;\n\n// Hide checkbox visually but remain accessible to screen readers.\nexport const CheckboxHiddenInput = styled.input.attrs({ type: 'checkbox' })(\n  ({ theme }) => ({\n    ...hideVisually(),\n    '&:checked + figure::after': {\n      backgroundColor: theme.color.piccolo[100],\n      backgroundSize: rem(10),\n    },\n    '&:hover:enabled, &:focus:enabled': {\n      /* Show the Pseudo Checkbox Circle */\n      '& + figure::before': {\n        opacity: 0.2,\n        transform: 'scale(2)',\n        backgroundColor: theme.color.trunks[100],\n        transitionProperty: 'background-color, transform, opacity',\n        willChange: 'transform, opacity',\n      },\n      '&:checked + figure::before': {\n        opacity: 0.1,\n        backgroundColor: theme.color.piccolo[100] /* [1] */,\n      },\n      /* Adjust the Pseudo Checkbox */\n      '&:not(:checked) + figure::after': {\n        borderColor: theme.color.trunks[100],\n      },\n    },\n    '&:disabled ~ *': {\n      opacity: '0.5',\n      cursor: 'not-allowed',\n    },\n  }),\n);\n\nexport const CheckboxStyledInput: React.FC<any> = styled.figure(\n  ({ theme }) => ({\n    position: 'relative',\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    width: rem(theme.space.default),\n    height: rem(theme.space.default),\n    border: `${rem(BORDER_WIDTH)} solid ${theme.color.trunks[100]}`,\n    borderRadius: rem(2),\n    transitionDuration: `${theme.transitionDuration.default}s`,\n    /* Common styles for the Pseudo Checkbox Circle and \"check\" */\n    '&::before, &::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: rem(theme.space.default),\n      height: rem(theme.space.default),\n      top: rem(-BORDER_WIDTH),\n      left: rem(-BORDER_WIDTH),\n      transitionTimingFunction: 'ease',\n    },\n    /* Show the Pseudo Checkbox Circle */\n    '&::before': {\n      transitionDuration: `${theme.transitionDuration.default}s`,\n      borderRadius: '50%',\n    },\n    /* Add the \"check\" to the Pseudo Checkbox */\n    '&::after': {\n      display: 'inline-block',\n      backgroundImage: inlineSvg(\n        <CheckboxIcon color={theme.color.goten[100]} />,\n      ),\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      borderRadius: rem(2),\n      backgroundColor: 'transparent',\n      backgroundSize: 0,\n      transitionProperty: 'border-color',\n    },\n  }),\n);\n\ninterface CheckboxLabelProps {\n  variant?: Variants;\n}\n\nexport const CheckboxLabel = styled.label<CheckboxLabelProps>(\n  ({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: rem(theme.space.small),\n  }),\n  ({ variant, theme }) => {\n    if (variant === 'option') {\n      return {\n        padding: rem(20),\n        '&:hover': {\n          backgroundColor: theme.color.gohan[100],\n        },\n      };\n    }\n    return {\n      width: 'fit-content',\n    };\n  },\n);\n\nexport const CheckboxCaption = styled.span(({ theme }) => ({\n  color: theme.color.trunks[100],\n}));\n\nexport interface CheckboxProps {\n  disabled?: boolean;\n  ariaLabel?: string;\n  label?: JSX.Element | string;\n  id?: string;\n  variant?: Variants;\n  checked?: boolean;\n  onClick?: any;\n}\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({\n    disabled, ariaLabel, label, id, variant, ...inputProps\n  }, ref) => (\n      <CheckboxLabel htmlFor={id} variant={variant}>\n        <CheckboxHiddenInput\n          disabled={disabled}\n          aria-label={ariaLabel}\n          id={id}\n          ref={ref}\n          {...inputProps}\n        />\n        <CheckboxStyledInput />\n        {label && <CheckboxCaption>{label}</CheckboxCaption>}\n      </CheckboxLabel>\n  ),\n);\n\nexport default Checkbox;\n"],"file":"Checkbox.js"}