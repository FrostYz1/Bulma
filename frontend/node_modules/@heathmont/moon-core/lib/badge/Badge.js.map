{"version":3,"sources":["../../src/badge/Badge.tsx"],"names":["StyledBadge","styled","span","theme","fontWeight","radius","display","alignItems","semibold","textTransform","borderRadius","largest","letterSpacing","size","padding","fontSize","lineHeight","color","backgroundColor","goten","defaultProps","IconRightWrapper","IconLeftWrapper","Badge","children","iconLeft","iconRight"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAWA,IAAMA,WAAW,GAAGC,6BAAOC,IAAV;AAAA;AAAA;AAAA,GACf;AAAA,wBAAGC,KAAH;AAAA,MAAYC,UAAZ,cAAYA,UAAZ;AAAA,MAAwBC,MAAxB,cAAwBA,MAAxB;AAAA,SAAwC;AACtCC,IAAAA,OAAO,EAAE,MAD6B;AAEtCC,IAAAA,UAAU,EAAE,QAF0B;AAGtCH,IAAAA,UAAU,EAAEA,UAAU,CAACI,QAHe;AAItCC,IAAAA,aAAa,EAAE,WAJuB;AAKtCC,IAAAA,YAAY,EAAE,oBAAIL,MAAM,CAACM,OAAX,CALwB;AAMtCC,IAAAA,aAAa,EAAE,oBAAI,CAAJ,CANuB,CAMf;;AANe,GAAxC;AAAA,CADe,EASf;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SAAe;AACbC,IAAAA,OAAO,EAAED,IAAI,KAAK,OAAT,eAAwB,oBAAI,CAAJ,CAAxB,gBAAwC,oBAAI,CAAJ,CAAxC,CADI;AAEbE,IAAAA,QAAQ,EAAEF,IAAI,KAAK,OAAT,GAAmB,oBAAI,CAAJ,CAAnB,GAA4B,oBAAI,EAAJ,CAFzB;AAGbG,IAAAA,UAAU,EAAEH,IAAI,KAAK,OAAT,GAAmB,oBAAI,EAAJ,CAAnB,GAA6B,oBAAI,EAAJ;AAH5B,GAAf;AAAA,CATe;AAcf;AACA;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,MAAUC,eAAV,SAAUA,eAAV;AAAA,MAA2Bf,KAA3B,SAA2BA,KAA3B;AAAA,SAAwC;AACtCc,IAAAA,KAAK,EAAEA,KAAK,GAAG,uBAAO,OAAP,EAAgBA,KAAhB,EAAuBd,KAAvB,CAAH,GAAmCA,KAAK,CAACc,KAAN,CAAYE,KAAZ,CAAkB,GAAlB,CADT;AAEtCD,IAAAA,eAAe,EAAE,uBAAO,OAAP,EAAgBA,eAAhB,EAAiCf,KAAjC;AAFqB,GAAxC;AAAA,CAfe,CAAjB;;AAqBAH,WAAW,CAACoB,YAAZ,GAA2B;AACzBH,EAAAA,KAAK,EAAE,WADkB;AAEzBC,EAAAA,eAAe,EAAE;AAFQ,CAA3B;;AAKA,IAAMG,gBAAgB,GAAGpB,6BAAOC,IAAV;AAAA;AAAA;AAAA,0BACL,oBAAI,CAAJ,CADK,CAAtB;;AAIA,IAAMoB,eAAe,GAAGrB,6BAAOC,IAAV;AAAA;AAAA;AAAA,2BACH,oBAAI,CAAJ,CADG,CAArB;;AAIA,IAAMqB,KAA2B,GAAG,SAA9BA,KAA8B;AAAA,MAClCC,QADkC,SAClCA,QADkC;AAAA,MAElCP,KAFkC,SAElCA,KAFkC;AAAA,MAGlCC,eAHkC,SAGlCA,eAHkC;AAAA,MAIlCO,QAJkC,SAIlCA,QAJkC;AAAA,MAKlCC,SALkC,SAKlCA,SALkC;AAAA,MAMlCb,IANkC,SAMlCA,IANkC;AAAA,sBAQhC,gCAAC,WAAD;AACE,IAAA,eAAe,EAAEK,eADnB;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,QAAQ,EAAEQ,QAHZ;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,IAAI,EAAEb;AALR,KAOGY,QAAQ,iBAAI,gCAAC,eAAD;AAAiB,IAAA,IAAI,EAAEZ;AAAvB,KAA8BY,QAA9B,CAPf,EAQGD,QARH,EASGE,SAAS,iBACR,gCAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEb;AAAxB,KAA+Ba,SAA/B,CAVJ,CARgC;AAAA,CAApC;AAuBA;AACA;AACA;AACA;AACA;;;eAEeH,K","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { rem, themed } from '@heathmont/moon-utils';\nimport { ColorProps } from '@heathmont/moon-themes';\n\nexport type BadgeProps = {\n  color?: ColorProps;\n  backgroundColor?: ColorProps;\n  iconLeft?: React.ReactElement;\n  iconRight?: React.ReactElement;\n  size?: 'small';\n};\n\nconst StyledBadge = styled.span<BadgeProps>(\n  ({ theme: { fontWeight, radius } }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    fontWeight: fontWeight.semibold,\n    textTransform: 'uppercase',\n    borderRadius: rem(radius.largest),\n    letterSpacing: rem(1), // TODO\n  }),\n  ({ size }) => ({\n    padding: size === 'small' ? `0 ${rem(4)}` : `0 ${rem(8)}`,\n    fontSize: size === 'small' ? rem(8) : rem(10),\n    lineHeight: size === 'small' ? rem(12) : rem(16),\n  }),\n  /* If a color or backgroundColor is set, override the modifier styles. */\n  ({ color, backgroundColor, theme }) => ({\n    color: color ? themed('color', color)(theme) : theme.color.goten[100],\n    backgroundColor: themed('color', backgroundColor)(theme),\n  }),\n);\n\nStyledBadge.defaultProps = {\n  color: 'goten.100',\n  backgroundColor: 'piccolo.100',\n};\n\nconst IconRightWrapper = styled.span<BadgeProps>`\n  margin-left: ${rem(8)};\n`;\n\nconst IconLeftWrapper = styled.span<BadgeProps>`\n  margin-right: ${rem(8)};\n`;\n\nconst Badge: React.FC<BadgeProps> = ({\n  children,\n  color,\n  backgroundColor,\n  iconLeft,\n  iconRight,\n  size,\n}) => (\n    <StyledBadge\n      backgroundColor={backgroundColor}\n      color={color}\n      iconLeft={iconLeft}\n      iconRight={iconRight}\n      size={size}\n    >\n      {iconLeft && <IconLeftWrapper size={size}>{iconLeft}</IconLeftWrapper>}\n      {children}\n      {iconRight && (\n        <IconRightWrapper size={size}>{iconRight}</IconRightWrapper>\n      )}\n    </StyledBadge>\n);\n\n/*\ndefault\ncolor - goten\nbackgroundColor - piccolo.100\n*/\n\nexport default Badge;\n"],"file":"Badge.js"}