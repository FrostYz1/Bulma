import React from 'react';
import { create } from 'react-test-renderer';
import 'jest-styled-components';
import { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';
import Text from '../Text';

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: sportsbetDark
  }, component);
};

describe('Text', function () {
  describe('Elements', function () {
    test('renders as <p> if no "as" prop provided', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, null, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('renders as an element if "as" prop provided', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        as: "span"
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
  });
  describe('Sizes', function () {
    test('renders default font size', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, null, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('10rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 10
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('12rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 12
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('14rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 14
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('16rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 16
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('18rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 18
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('20rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 20
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('24rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 24
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('32rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 32
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('48rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 48
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('56rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 56
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('64rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 64
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    test('72rem size renders properly', function () {
      var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
        size: 72
      }, "Text")));
      expect(text).toMatchSnapshot();
    });
    describe('Colors', function () {
      test('renders default color', function () {
        var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, null, "Text")));
        expect(text).toMatchSnapshot();
      });
      test('renders with a color', function () {
        var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
          color: "piccolo.100"
        }, "Text")));
        expect(text).toMatchSnapshot();
      });
    });
    describe('Boldness', function () {
      test('renders default boldness', function () {
        var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, null, "Text")));
        expect(text).toMatchSnapshot();
      });
      test('renders with semibold font weight', function () {
        var text = create(renderWithTheme( /*#__PURE__*/React.createElement(Text, {
          isBold: true
        }, "Text")));
        expect(text).toMatchSnapshot();
      });
    });
  });
});
//# sourceMappingURL=text.test.js.map