function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { create } from 'react-test-renderer';
import { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';
import 'jest-styled-components';
import Checkbox from '../Checkbox';

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: sportsbetDark
  }, component);
};

var testProps = {
  label: 'I agree to the Terms & Conditions'
};
describe('Checkbox', function () {
  test('renders by default', function () {
    var checkbox = create(renderWithTheme( /*#__PURE__*/React.createElement(Checkbox, _extends({
      id: "Checkbox-Test1"
    }, testProps))));
    expect(checkbox).toMatchSnapshot();
  });
  test('renders as disabled', function () {
    var checkbox = create(renderWithTheme( /*#__PURE__*/React.createElement(Checkbox, _extends({
      id: "Checkbox-Test2",
      disabled: true
    }, testProps))));
    expect(checkbox).toMatchSnapshot();
  });
  test('renders as checked', function () {
    var checkbox = create(renderWithTheme( /*#__PURE__*/React.createElement(Checkbox, _extends({
      id: "Checkbox-Test3",
      checked: true
    }, testProps))));
    expect(checkbox).toMatchSnapshot();
  });
  test('renders with hidden aria-label', function () {
    var checkbox = create(renderWithTheme( /*#__PURE__*/React.createElement(Checkbox, {
      id: "Checkbox-Test4",
      ariaLabel: "This label is hidden"
    })));
    expect(checkbox).toMatchSnapshot();
  });
  test('renders label with HTML', function () {
    var checkbox = create(renderWithTheme( /*#__PURE__*/React.createElement(Checkbox, {
      id: "Checkbox-Test5",
      caption: /*#__PURE__*/React.createElement("span", null, "This is a label with a ", /*#__PURE__*/React.createElement("a", {
        href: "#test"
      }, "link"), ".")
    })));
    expect(checkbox).toMatchSnapshot();
  });
});
//# sourceMappingURL=checkbox.test.js.map