"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.StyledPopup = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

var _Styles = require("./Styles");

var _settings = require("./settings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var StyledPopup = _styledComponents["default"].div.withConfig({
  displayName: "Popup__StyledPopup",
  componentId: "sc-1lsi3ri-0"
})(function (_ref) {
  var _ref2;

  var _ref$theme = _ref.theme,
      base = _ref$theme.base,
      breakpoint = _ref$theme.breakpoint,
      color = _ref$theme.color,
      space = _ref$theme.space,
      zIndex = _ref$theme.zIndex;
  return _ref2 = {
    background: 'transparent',
    position: 'relative',
    padding: 0,
    borderRadius: (0, _moonUtils.rem)(_settings.popupConfig.borderRadius),
    fontSize: (0, _moonUtils.rem)(base.fontSize),
    lineHeight: (0, _moonUtils.rem)(24)
  }, _defineProperty(_ref2, '&.popup-open', {
    zIndex: zIndex.dialog
  }), _defineProperty(_ref2, (0, _moonUtils.mq)(breakpoint.medium, 'max-width'), _defineProperty({}, '&.popup-open', {
    position: 'fixed',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    background: color.goten[100],
    padding: (0, _moonUtils.rem)(space["default"])
  })), _ref2;
});

exports.StyledPopup = StyledPopup;

var Popup = function Popup(_ref3) {
  var children = _ref3.children,
      closeButton = _ref3.closeButton,
      closePopup = _ref3.closePopup,
      isOpen = _ref3.isOpen,
      title = _ref3.title;
  var ref = (0, _react.useRef)(null);
  var escapeListener = (0, _react.useCallback)(function (e) {
    if (e.key === 'Escape') {
      closePopup();
    }
  }, []);
  var clickListener = (0, _react.useCallback)(function (e) {
    e.stopPropagation();

    if (ref.current && !ref.current.contains(e.target)) {
      closePopup();
    }
  }, [ref.current]);
  (0, _react.useEffect)(function () {
    // Attach the listeners on component mount.
    document.addEventListener('click', clickListener);
    document.addEventListener('keyup', escapeListener); // Detach the listeners on component unmount.

    return function () {
      document.removeEventListener('click', clickListener);
      document.removeEventListener('keyup', escapeListener);
    };
  }, []);
  return /*#__PURE__*/_react["default"].createElement(StyledPopup, {
    className: isOpen ? 'popup-open' : '',
    ref: ref
  }, /*#__PURE__*/_react["default"].createElement(_Styles.FlexWrapper, null, title, !!closeButton && isOpen ? /*#__PURE__*/_react["default"].createElement(_Styles.ModalClose, {
    onClick: closePopup
  }, closeButton) : null), isOpen && children && /*#__PURE__*/_react["default"].createElement(_Styles.FlexWrapper, null, children));
};

var _default = Popup;
exports["default"] = _default;
//# sourceMappingURL=Popup.js.map