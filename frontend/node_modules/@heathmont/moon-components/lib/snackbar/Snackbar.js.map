{"version":3,"sources":["../../src/snackbar/Snackbar.tsx"],"names":["SnackbarWrapper","styled","div","theme","color","space","zIndex","breakpoint","position","justifyContent","maxWidth","minWidth","bgColor","width","left","transform","dialog","marginBottom","medium","margin","large","bottom","top","padding","backgroundColor","bulma","borderRadius","display","flexDirection","alignItems","marginLeft","MessageWrapper","p","fontSize","lineHeight","hit","IconWrapper","marginRight","Snackbar","message","action","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { rem, mq, themed } from '@heathmont/moon-utils';\nimport styled from 'styled-components';\n\nimport IconError from '../private/icons/IconError';\nimport IconWarning from '../private/icons/IconWarning';\nimport IconBannerInfo from '../private/icons/IconBannerInfo';\nimport IconSnackbarSuccess from '../private/icons/IconSnackbarSuccess';\n\ntype SnackbarWrapperProps = {\n  justifyContent?: 'flex-start' | 'center' | 'flex-end';\n  position?: 'bottom' | 'top' | 'inline';\n  maxWidth?: string;\n  minWidth?: string;\n  bgColor?: string;\n};\n\ntype SnackbarProps = SnackbarWrapperProps & {\n  message: any;\n  alwaysVisible?: boolean;\n  action?: any;\n  timeout?: number; // ms\n  status?: 'error' | 'warning' | 'info' | 'success';\n  onClose?: any;\n};\n\nconst SnackbarWrapper = styled.div<SnackbarWrapperProps>(\n  ({\n    theme,\n    theme: { color, space, zIndex, breakpoint },\n    position,\n    justifyContent,\n    maxWidth,\n    minWidth,\n    bgColor,\n  }) => [\n    { width: 'fit-content' },\n    (position === 'bottom' || position === 'top') && {\n      position: 'fixed',\n      left: '50%',\n      transform: 'translate(-50%, 0)',\n      zIndex: zIndex.dialog,\n      marginBottom: space.default,\n      minWidth: minWidth || rem(180),\n      maxWidth: maxWidth || `calc(100vw - ${space.default * 2}px)`,\n      [mq(breakpoint.medium)]: {\n        margin: space.default,\n      },\n      [mq(breakpoint.large)]: {\n        maxWidth: maxWidth || '20vw',\n        width: 'fit-content',\n        left: 0,\n        transform: 'none',\n      },\n    },\n    position === 'bottom' && {\n      bottom: 0,\n    },\n    position === 'top' && {\n      top: '10%',\n    },\n    justifyContent && {\n      justifyContent,\n    },\n    {\n      padding: space.default,\n      backgroundColor: bgColor\n        ? themed('color', bgColor)(theme)\n        : color.bulma[100],\n      borderRadius: rem(12),\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      '& > * + *': {\n        marginLeft: space.default,\n      },\n    },\n  ]\n);\n\nconst MessageWrapper = styled.p(({ theme }) => [\n  {\n    fontSize: rem(14),\n    lineHeight: 1.25,\n    color: theme.color.hit[100],\n    margin: 0,\n  },\n]);\n\nconst IconWrapper = styled.div({\n  marginRight: rem(8),\n});\n\nconst Snackbar: React.FC<SnackbarProps> = ({\n  message,\n  action,\n  position = 'bottom',\n  status,\n  justifyContent,\n  maxWidth,\n  minWidth,\n  bgColor,\n}) => (\n  <SnackbarWrapper\n    position={position}\n    justifyContent={justifyContent}\n    maxWidth={maxWidth}\n    minWidth={minWidth}\n    bgColor={bgColor}\n  >\n    {status === 'error' && (\n      <IconWrapper>\n        <IconError fontSize=\"1.5rem\" />\n      </IconWrapper>\n    )}\n    {status === 'warning' && (\n      <IconWrapper>\n        <IconWarning fontSize=\"1.5rem\" color=\"krillin.100\" />\n      </IconWrapper>\n    )}\n    {status === 'info' && (\n      <IconWrapper>\n        <IconBannerInfo fontSize=\"1.5rem\" color=\"krillin.100\" />\n      </IconWrapper>\n    )}\n    {status === 'success' && (\n      <IconWrapper>\n        <IconSnackbarSuccess fontSize=\"1.5rem\" color=\"krillin.100\" />\n      </IconWrapper>\n    )}\n    {message && <MessageWrapper>{message}</MessageWrapper>}\n    {action && action}\n  </SnackbarWrapper>\n);\n\nexport type { SnackbarProps };\n\nexport default Snackbar;\n"],"file":"Snackbar.js"}