"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Component
 */
var Link = _styledComponents["default"].a.withConfig({
  displayName: "Link",
  componentId: "n1sjvn-0"
})(function (_ref) {
  var secondary = _ref.secondary,
      optional = _ref.optional,
      _ref$theme = _ref.theme,
      color = _ref$theme.color,
      opacity = _ref$theme.opacity;
  return [_objectSpread({
    display: 'inline-block',
    padding: 0,
    font: 'inherit',
    color: color.piccolo[100],
    backgroundColor: 'transparent',
    border: 0,
    cursor: 'pointer',
    textDecoration: 'none',
    '&:hover, &:focus, &:active': {
      color: color.piccolo[80]
    }
  }, (0, _moonUtils.disabled)(opacity.disabled)), secondary && {
    color: color.trunks[100]
  }, optional && {
    color: color.trunks[100],
    '&:hover, &:focus, &:active, &.active': {
      color: color.bulma[100]
    }
  }];
});

var _default = Link;
exports["default"] = _default;
//# sourceMappingURL=Link.js.map