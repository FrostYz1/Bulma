{"version":3,"sources":["../../src/stack/Stack.ts"],"names":["Stack","styled","div","theme","space"],"mappings":";;;;;;;AAAA;;AACA;;AAGA;;;;AAeA,IAAMA,KAAK,GAAGC,6BAAOC,GAAV;AAAA;AAAA;AAAA,GAA0B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,wBAAUC,KAAV;AAAA,MAAUA,KAAV,2BAAkB,SAAlB;AAAA,SACnC,4BAAW,uBAAO,OAAP,EAAgBA,KAAhB,EAAuBD,KAAvB,CAAX,CADmC;AAAA,CAA1B,CAAX;;eAGeH,K","sourcesContent":["import styled, { CSSObject } from 'styled-components';\nimport { themed } from '@heathmont/moon-utils';\nimport { SpaceProps } from '@heathmont/moon-themes';\n\nimport stackMixin from '../stackMixin/stackMixin';\n\ntype StackSpace = CSSObject['marginTop'] | CSSObject['gridGap'];\n\nexport type StackProps = {\n  /**\n   * Excepts a string value, number or a theme key.\n   *\n   * Theme keys are returned as a `rem`-based unit.\n   *\n   * e.g. `<Stack space=\"large\" />` returns `space.large` as a rem unit.\n   */\n  space?: SpaceProps | StackSpace;\n};\n\nconst Stack = styled.div<StackProps>(({ theme, space = 'default' }) =>\n  stackMixin(themed('space', space)(theme)));\n\nexport default Stack;\n"],"file":"Stack.js"}