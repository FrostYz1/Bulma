{"version":3,"sources":["../../../src/select/__tests__/select.test.tsx"],"names":["renderWithTheme","component","sportsbetDark","TestOptions","describe","test","select","expect","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD;AAAA,sBACtB,gCAAC,yBAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,KAAsCD,SAAtC,CADsB;AAAA,CAAxB;;AAIA,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,sBAClB,gCAAC,iBAAD,CAAO,QAAP,qBACE;AAAQ,IAAA,KAAK,EAAC;AAAd,wBADF,eAEE;AAAQ,IAAA,KAAK,EAAC;AAAd,mBAFF,eAGE;AAAQ,IAAA,KAAK,EAAC;AAAd,mBAHF,eAIE;AAAQ,IAAA,KAAK,EAAC;AAAd,oBAJF,CADkB;AAAA,CAApB;;AASAC,QAAQ,CAAC,QAAD,EAAW,YAAM;AACvBC,EAAAA,IAAI,CAAC,qCAAD,EAAwC,YAAM;AAChD,QAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD,qBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,GAVG,CAAJ;AAYAJ,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCC,IAAAA,IAAI,CAAC,iBAAD,EAAoB,YAAM;AAC5B,UAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD;AAAQ,QAAA,KAAK,EAAC;AAAd,sBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,MAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,KAVG,CAAJ;AAYAJ,IAAAA,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCC,MAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAM;AACrC,YAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD;AAAQ,UAAA,KAAK,EAAC,eAAd;AAA8B,UAAA,IAAI;AAAlC,wBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,QAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,OAVG,CAAJ;AAYAH,MAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAM;AACrC,YAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD;AAAQ,UAAA,KAAK,EAAC,eAAd;AAA8B,UAAA,IAAI,MAAlC;AAAmC,UAAA,SAAS,EAAE;AAA9C,wBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,QAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,OAVG,CAAJ;AAWD,KAxBO,CAAR;AAyBD,GAtCO,CAAR;AAwCAJ,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,IAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAM;AACrC,UAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD;AAAQ,QAAA,QAAQ;AAAhB,sBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,MAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,KAVG,CAAJ;AAWD,GAZO,CAAR;AAcAJ,EAAAA,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtCC,IAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAM;AACrC,UAAMC,MAAM,GAAG,+BACbN,eAAe,eACb,gCAAC,kBAAD;AAAQ,QAAA,SAAS;AAAjB,sBACE,gCAAC,WAAD,OADF,CADa,CADF,CAAf;AAQAO,MAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,eAAf;AACD,KAVG,CAAJ;AAWD,GAZO,CAAR;AAaD,CAhFO,CAAR","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport Select from '../Select';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\nconst TestOptions = () => (\n  <React.Fragment>\n    <option value=\"\">Select an option</option>\n    <option value=\"never-gonna\">Never gonna</option>\n    <option value=\"give-you-up\">give you up</option>\n    <option value=\"let-you-down\">let you down</option>\n  </React.Fragment>\n);\n\ndescribe('Select', () => {\n  test('renders a select input with options', () => {\n    const select = create(\n      renderWithTheme(\n        <Select>\n          <TestOptions />\n        </Select>,\n      ),\n    );\n\n    expect(select).toMatchSnapshot();\n  });\n\n  describe('renders with label', () => {\n    test('above the input', () => {\n      const select = create(\n        renderWithTheme(\n          <Select label=\"Example label\">\n            <TestOptions />\n          </Select>,\n        ),\n      );\n\n      expect(select).toMatchSnapshot();\n    });\n\n    describe('as a flex layout', () => {\n      test('evenly spaced by default', () => {\n        const select = create(\n          renderWithTheme(\n            <Select label=\"Example label\" flex>\n              <TestOptions />\n            </Select>,\n          ),\n        );\n\n        expect(select).toMatchSnapshot();\n      });\n\n      test('with adjusted input size', () => {\n        const select = create(\n          renderWithTheme(\n            <Select label=\"Example label\" flex inputGrow={2}>\n              <TestOptions />\n            </Select>,\n          ),\n        );\n\n        expect(select).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('renders as disabled', () => {\n    test('for default select input', () => {\n      const select = create(\n        renderWithTheme(\n          <Select disabled>\n            <TestOptions />\n          </Select>,\n        ),\n      );\n\n      expect(select).toMatchSnapshot();\n    });\n  });\n\n  describe('renders as full-width', () => {\n    test('for default select input', () => {\n      const select = create(\n        renderWithTheme(\n          <Select fullWidth>\n            <TestOptions />\n          </Select>,\n        ),\n      );\n\n      expect(select).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"select.test.js"}