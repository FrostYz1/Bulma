function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import styled from 'styled-components';
import rem from 'polished/lib/helpers/rem';
import { mq } from '@heathmont/moon-utils';
/* Layout
  =========================================== */

export var DialogContainer = styled.div.withConfig({
  displayName: "layout__DialogContainer",
  componentId: "dksgof-0"
})(function (_ref) {
  var _ref$theme = _ref.theme,
      color = _ref$theme.color,
      radius = _ref$theme.radius,
      space = _ref$theme.space;
  return {
    position: 'relative',
    outline: 'none',
    borderRadius: rem(radius.small),
    color: color.bulma[100],
    background: color.goku[100],
    boxShadow: "0 ".concat(rem(space["default"]), " ").concat(rem(space.large), " rgba(0, 0, 0, 0.5)")
  };
});
/**
 * 1. As bottom margins/paddings are ignored in `overflow: scroll;`, create the
 *    padding with a pseudo element.
 */

export var DialogMain = styled.main.withConfig({
  displayName: "layout__DialogMain",
  componentId: "dksgof-1"
})(function (_ref2) {
  var _ref2$theme = _ref2.theme,
      space = _ref2$theme.space,
      breakpoint = _ref2$theme.breakpoint;
  return _defineProperty({
    padding: rem(20)
  }, mq(breakpoint.medium), {
    paddingTop: rem(space.xlarge),
    paddingLeft: rem(space.large),
    paddingRight: rem(space.large),
    paddingBottom: rem(space.large)
  });
});
//# sourceMappingURL=layout.js.map