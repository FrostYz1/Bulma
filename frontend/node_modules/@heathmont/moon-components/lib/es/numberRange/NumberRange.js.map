{"version":3,"sources":["../../../src/numberRange/NumberRange.tsx"],"names":["React","styled","rem","TextInput","Text","Stack","Container","div","theme","color","space","radius","boxShadow","background","gohan","padding","borderRadius","marginBottom","NumberRange","text","lteLabel","gteLabel","lteError","gteError","lteDisabled","gteDisabled","value","onChange","maxWidth","String","gte","e","Number","target","lte"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { rem } from '@heathmont/moon-utils';\n\nimport TextInput from '../textInput/TextInput';\nimport Text from '../text/Text';\nimport Stack from '../stack/Stack';\n\ntype Value = {\n  lte: number;\n  gte: number;\n};\n\ntype Props = {\n  value: Value;\n  onChange: (value: Value) => void;\n  text: string;\n  lteLabel: string;\n  lteDisabled: boolean;\n  lteError?: boolean | string;\n\n  gteLabel: string;\n  gteDisabled: boolean;\n  gteError?: boolean | string;\n  maxWidth?: string | number;\n};\n\nconst Container = styled.div(\n  ({\n    theme: {\n      color, space, radius, boxShadow,\n    },\n  }) => ({\n    background: color.gohan[100],\n    padding: rem(space.default),\n    borderRadius: rem(radius.default),\n    boxShadow,\n    '& > :first-child': {\n      marginBottom: rem(12),\n    },\n  }),\n);\n\nconst NumberRange: React.FC<Props> = ({\n  text = 'Enter a minimum, maximum or range limit',\n  lteLabel = 'Max',\n  gteLabel = 'Min',\n  lteError = false,\n  gteError = false,\n  lteDisabled = false,\n  gteDisabled = false,\n  value,\n  onChange,\n  maxWidth = 248,\n}) => (\n    <Container style={{ maxWidth }}>\n      <Text color=\"trunks.100\" size={12}>\n        {text}\n      </Text>\n      <Stack>\n        <TextInput\n          type=\"number\"\n          label={gteLabel}\n          value={String(value.gte)}\n          disabled={gteDisabled}\n          onChange={(e) =>\n            onChange({\n              gte: Number(e.target.value),\n              lte: value.lte,\n            })\n          }\n          error={gteError}\n        />\n        <TextInput\n          type=\"number\"\n          label={lteLabel}\n          value={String(value.lte)}\n          disabled={lteDisabled}\n          onChange={(e) =>\n            onChange({\n              lte: Number(e.target.value),\n              gte: value.gte,\n            })\n          }\n          error={lteError}\n        />\n      </Stack>\n    </Container>\n);\n\nexport default NumberRange;\n"],"file":"NumberRange.js"}