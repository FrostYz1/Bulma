function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import styled from 'styled-components';
import { inlineSvg, mq, rem } from '@heathmont/moon-utils';
import { Input } from '../../private/input/input';
import { inputColors, inputSpacingX, inputLineHeight, inputBorderWidth, inputIconPosition } from '../../private/input/settings';
import IconChevronDown from '../../private/icons/IconChevronDown';
var selectIconSize = 10; // px

var selectIconOffset = function selectIconOffset(theme) {
  return selectIconSize + inputSpacingX(theme) * 2;
};

/**
 * Styles
 */
export var SelectElement = styled(Input.withComponent('select')).withConfig({
  displayName: "element__SelectElement",
  componentId: "sc-1jc6zq6-0"
})(function (_ref) {
  var fullWidth = _ref.fullWidth,
      dir = _ref.dir,
      theme = _ref.theme;
  return [{
    color: inputColors('label')(theme),
    backgroundImage: inlineSvg( /*#__PURE__*/React.createElement(IconChevronDown, {
      color: inputColors('icon')(theme)
    })),
    paddingRight: rem(selectIconOffset(theme)),
    backgroundSize: rem(selectIconSize),
    borderRadius: rem(theme.radius.largest),
    '&:hover:enabled, &:focus:enabled': {
      cursor: 'pointer'
    },

    /**
     * Addresses a Firefox bug where line-height includes the border-width
     * on Select elements
     * https://bugzilla.mozilla.org/show_bug.cgi?id=1560824
     */
    '@supports (-moz-appearance:none)': {
      lineHeight: rem(inputLineHeight - inputBorderWidth(theme) * 2)
    }
  }, !fullWidth && _defineProperty({}, mq(theme.breakpoint.small), {
    width: 'auto'
  }), dir === 'rtl' && {
    backgroundPosition: "left ".concat(rem(inputIconPosition(theme)), " center")
  }];
});
//# sourceMappingURL=element.js.map