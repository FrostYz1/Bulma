{"version":3,"sources":["../../../../src/checkboxMultiselect/__tests__/CheckboxMultiselect.test.tsx"],"names":["React","act","create","sportsbetDark","ThemeProvider","CheckboxMultiselect","renderWithTheme","component","describe","test","checkboxMultiselect","label","value","id","expect","toMatchSnapshot","onChangeMock","jest","fn","beforeAll","input","root","findAllByType","props","onChange","target","checked","toHaveBeenCalledWith","count","countItems","findAll","el","toBeDefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { act, create, ReactTestRenderer } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport CheckboxMultiselect from '../CheckboxMultiselect';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('CheckboxMultiselect', () => {\n  test('renders by default', () => {\n    const checkboxMultiselect = create(\n      renderWithTheme(\n        <CheckboxMultiselect\n          onChange={() => {}}\n          value={[]}\n          options={[\n            { label: 'Game 1', value: 1, id: '1' },\n            { label: 'Game 2', value: 2, id: '2' },\n            { label: 'Game 3', value: 3, id: '3' },\n          ]}\n        />,\n      ),\n    );\n\n    expect(checkboxMultiselect).toMatchSnapshot();\n  });\n\n  test('renders with pre-selected value', () => {\n    const checkboxMultiselect = create(\n      renderWithTheme(\n        <CheckboxMultiselect\n          onChange={() => {}}\n          value={[1, 2]}\n          options={[\n            { label: 'Game 1', value: 1, id: '1' },\n            { label: 'Game 2', value: 2, id: '2' },\n            { label: 'Game 3', value: 3, id: '3' },\n          ]}\n        />,\n      ),\n    );\n\n    expect(checkboxMultiselect).toMatchSnapshot();\n  });\n\n  describe('when renders with onChange handler', () => {\n    const onChangeMock = jest.fn();\n    let checkboxMultiselect: ReactTestRenderer;\n\n    beforeAll(() => {\n      checkboxMultiselect = create(\n        renderWithTheme(\n          <CheckboxMultiselect\n            onChange={onChangeMock}\n            value={[]}\n            options={[\n              { label: 'Game 1', value: 1, id: '1' },\n              { label: 'Game 2', value: 2, id: '2' },\n              { label: 'Game 3', value: 3, id: '3' },\n            ]}\n          />,\n        ),\n      );\n    });\n\n    describe('and then clicking on the first option', () => {\n      beforeAll(() => {\n        const input = checkboxMultiselect.root.findAllByType('input')[0];\n        act(() => input.props.onChange({ target: { checked: true } }));\n      });\n\n      test('calls onChange handler with selected option', () => {\n        expect(onChangeMock).toHaveBeenCalledWith([1]);\n      });\n    });\n  });\n\n  test('renders with item count', () => {\n    const checkboxMultiselect = create(\n      renderWithTheme(\n        <CheckboxMultiselect\n          onChange={() => {}}\n          value={[]}\n          options={[\n            {\n              label: 'Game 1', value: 1, id: '1', count: 1,\n            },\n            {\n              label: 'Game 2', value: 2, id: '2', count: 5,\n            },\n          ]}\n        />,\n      ),\n    );\n\n    const countItems = checkboxMultiselect.root.findAll(\n      (el) => el.props['test-id'] === 'select-count',\n    );\n    expect(countItems).toBeDefined();\n  });\n});\n"],"file":"CheckboxMultiselect.test.js"}