function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { IconChevronRight } from '@heathmont/moon-assets';
import { rem } from '@heathmont/moon-utils';
import React, { useState } from 'react';
import styled from 'styled-components';
var ToggleWrapper = styled.div.withConfig({
  displayName: "Toggle__ToggleWrapper",
  componentId: "sc-1ecvw80-0"
})({
  position: 'relative'
});
var Header = styled.div.withConfig({
  displayName: "Toggle__Header",
  componentId: "sc-1ecvw80-1"
})({
  position: 'relative',
  paddingLeft: rem(36)
});
var Body = styled.div.withConfig({
  displayName: "Toggle__Body",
  componentId: "sc-1ecvw80-2"
})({
  paddingLeft: rem(36)
});
var Switch = styled.button.withConfig({
  displayName: "Toggle__Switch",
  componentId: "sc-1ecvw80-3"
})(function (_ref) {
  var open = _ref.open,
      theme = _ref.theme;
  return {
    background: 'none',
    border: 'none',
    padding: rem(2),
    transform: "translateY(-50%) rotate(".concat(open ? '90deg' : '0', ")"),
    transition: "transform ".concat(theme.transitionDuration["default"], "s ease"),
    position: 'absolute',
    left: 0,
    top: '50%',
    cursor: 'pointer',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  };
});

var Toggle = function Toggle(props) {
  var header = props.header,
      children = props.children;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  return /*#__PURE__*/React.createElement(ToggleWrapper, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Switch, {
    open: open,
    onClick: function onClick() {
      return setOpen(!open);
    }
  }, /*#__PURE__*/React.createElement(IconChevronRight, {
    color: "trunks.100"
  })), header), open && /*#__PURE__*/React.createElement(Body, null, children));
};

export default Toggle;
//# sourceMappingURL=Toggle.js.map