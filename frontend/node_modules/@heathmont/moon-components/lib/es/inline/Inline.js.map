{"version":3,"sources":["../../../src/inline/Inline.ts"],"names":["styled","themed","inlineMixin","Inline","div","fontSize","justifyContent","space","theme"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAGA,OAAOC,WAAP,MAAwB,4BAAxB;AAmBA,IAAMC,MAAM,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,GACV;AAAA,MACEC,QADF,QACEA,QADF;AAAA,MACYC,cADZ,QACYA,cADZ;AAAA,wBAC4BC,KAD5B;AAAA,MAC4BA,KAD5B,2BACoC,SADpC;AAAA,MAC+CC,KAD/C,QAC+CA,KAD/C;AAAA,yCAGKN,WAAW,CAACD,MAAM,CAAC,OAAD,EAAUM,KAAV,CAAN,CAAuBC,KAAvB,CAAD,EAAgCF,cAAhC,CAHhB;AAIED,IAAAA,QAAQ,EAARA;AAJF;AAAA,CADU,CAAZ;AASA,eAAeF,MAAf","sourcesContent":["import styled, { CSSObject } from 'styled-components';\nimport { themed } from '@heathmont/moon-utils';\nimport { SpaceProps } from '@heathmont/moon-themes';\n\nimport inlineMixin from '../inlineMixin/inlineMixin';\n\nimport type { JustifyContent } from '../inlineMixin/inlineMixin';\n\ntype InlineSpace = CSSObject['marginLeft'];\n\nexport type InlineProps = {\n  fontSize?: CSSObject['fontSize'];\n  /**\n   * Excepts a string value, number or a theme key.\n   *\n   * Theme keys are returned as a `rem`-based unit.\n   *\n   * e.g. `<Stack space=\"large\" />` returns `space.large` as a rem unit.\n   */\n  space?: SpaceProps | InlineSpace;\n  justifyContent?: JustifyContent;\n};\n\nconst Inline = styled.div<InlineProps>(\n  ({\n    fontSize, justifyContent, space = 'default', theme,\n  }) => ({\n    ...inlineMixin(themed('space', space)(theme), justifyContent),\n    fontSize,\n  }),\n);\n\nexport default Inline;\n"],"file":"Inline.js"}