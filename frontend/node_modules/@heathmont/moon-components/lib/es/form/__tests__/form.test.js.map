{"version":3,"sources":["../../../../src/form/__tests__/form.test.tsx"],"names":["React","create","sportsbetDark","ThemeProvider","Form","FormItem","FormError","FormCombo","FormComboInput","FormComboButton","TextInput","renderWithTheme","component","TestFormItems","describe","test","form","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport Form from '../Form';\nimport FormItem from '../../formItem/FormItem';\nimport FormError from '../../formError/FormError';\nimport FormCombo from '../../formCombo/FormCombo';\nimport FormComboInput from '../../formComboInput/FormComboInput';\nimport FormComboButton from '../../formComboButton/FormComboButton';\nimport TextInput from '../../textInput/TextInput';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\nconst TestFormItems = () => (\n  <React.Fragment>\n    <FormItem>\n      <label htmlFor=\"testInput1\">\n        Name\n        <input id=\"testInput1\" type=\"text\" placeholder=\"e.g. John Appleseed\" />\n      </label>\n    </FormItem>\n    <FormItem>\n      <label htmlFor=\"testInput1\">\n        Password\n        <input id=\"testInput1\" type=\"password\" />\n      </label>\n      <FormError>Please enter a valid password.</FormError>\n    </FormItem>\n    <FormItem>\n      <label htmlFor=\"testInput2\">\n        <input id=\"testInput2\" type=\"checkbox\" name=\"terms\" value=\"terms\" />I\n        agree to the terms and conditions.\n      </label>\n    </FormItem>\n    <FormItem>\n      <button type=\"submit\" value=\"submit\">\n        Sign up\n      </button>\n    </FormItem>\n  </React.Fragment>\n);\n\ndescribe('Form', () => {\n  test('renders correctly', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"Sign up\">\n          <TestFormItems />\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n\n  test('renders with HTML form attributes', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"Sign up\" action=\"#\" method=\"post\" autocomplete=\"on\">\n          <TestFormItems />\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n\n  test('renders with custom maxWidth', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"Sign up\" maxWidth=\"30rem\">\n          <TestFormItems />\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n\n  test('renders with custom fullWidth', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"Sign up\" fullWidth>\n          <TestFormItems />\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n\n  test('renders a form combo', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"2FA\" maxWidth=\"25rem\">\n          <FormItem>\n            <FormCombo>\n              <FormComboInput>\n                {/* We apply styles to specific childen */}\n                <TextInput\n                  label=\"Enable Two Factor Authentication\"\n                  placeholder=\"Enter code\"\n                />\n              </FormComboInput>\n              <FormComboButton>\n                {/* We don't apply any styles to specific childen */}\n                <button type=\"submit\">Submit</button>\n              </FormComboButton>\n            </FormCombo>\n          </FormItem>\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n\n  test('renders a form combo without a label', () => {\n    const form = create(\n      renderWithTheme(\n        <Form legend=\"2FA\" maxWidth=\"25rem\">\n          <FormItem>\n            <FormCombo>\n              <FormComboInput>\n                {/* We apply styles to specific childen */}\n                <TextInput placeholder=\"Enter code\" />\n              </FormComboInput>\n              <FormComboButton>\n                {/* We don't apply any styles to specific childen */}\n                <button type=\"submit\">Submit</button>\n              </FormComboButton>\n            </FormCombo>\n          </FormItem>\n        </Form>,\n      ),\n    );\n\n    expect(form).toMatchSnapshot();\n  });\n});\n"],"file":"form.test.js"}