{"version":3,"sources":["../../../../src/avatar/__tests__/avatar.test.tsx"],"names":["React","create","sportsbetDark","ThemeProvider","renderWithTheme","component","Avatar","describe","test","avatar","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\nimport Avatar from '../Avatar';\n\ndescribe('Avatar', () => {\n  test('renders correctly', () => {\n    const avatar = create(renderWithTheme(<Avatar />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with user image', () => {\n    const avatar = create(renderWithTheme(<Avatar imageUrl=\"image-url\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with user name as a string', () => {\n    const avatar = create(renderWithTheme(<Avatar name=\"JS\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with user name as a JSX Element', () => {\n    const avatar = create(renderWithTheme(<Avatar name={<span>JS</span>} />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with background color', () => {\n    const avatar = create(renderWithTheme(<Avatar backgroundColor=\"red\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with xsmall size', () => {\n    const avatar = create(renderWithTheme(<Avatar size=\"xsmall\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with small size', () => {\n    const avatar = create(renderWithTheme(<Avatar size=\"small\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with medium size', () => {\n    const avatar = create(renderWithTheme(<Avatar size=\"medium\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n\n  test('renders correctly with large size', () => {\n    const avatar = create(renderWithTheme(<Avatar size=\"large\" />));\n\n    expect(avatar).toMatchSnapshot();\n  });\n});\n"],"file":"avatar.test.js"}