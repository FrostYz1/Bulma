{"version":3,"sources":["../../../../src/listPlain/__tests___/lists.test.tsx"],"names":["React","styled","create","listPlain","listPlainItem","listInline","listInlineItem","Example","div","css","describe","test","list","expect","toMatchSnapshot"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,wBAAP;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,IAAMC,OAAO,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,GAAkC;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,SAAaA,GAAb;AAAA,CAAlC,CAAb;;;;;aA0DkCH,c;;;;;aAHAA,c;;;;;aAHAA,c;;;;;aADFD,U;;;;;aAJEC,c;;;;;aAHAA,c;;;;;aAHAA,c;;;;;aADFD,U;;;;;aAfED,a;;;;;aAHAA,a;;;;;aAHAA,a;;;;;aADFD,S;;;;;aAJEC,a;;;;;aAHAA,a;;;;;aAHAA,a;;;;;aADFD,S;;AALhCO,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBA,EAAAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1BC,IAAAA,IAAI,CAAC,kCAAD,EAAqC,YAAM;AAC7C,UAAMC,IAAI,GAAGV,MAAM,eACjB,8CACE;AAAS,QAAA,EAAE,EAAC;AAAZ,sBACE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBADF,eAIE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAJF,eAOE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAPF,CADF,eAYE;AAAS,QAAA,EAAE,EAAC;AAAZ,sBACE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBADF,eAIE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAJF,eAOE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAPF,CAZF,CADiB,CAAnB;AA2BAW,MAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,KA7BG,CAAJ;AA8BD,GA/BO,CAAR;AAiCAJ,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BC,IAAAA,IAAI,CAAC,sBAAD,EAAyB,YAAM;AACjC,UAAMC,IAAI,GAAGV,MAAM,eACjB,8CACE;AAAS,QAAA,EAAE,EAAC;AAAZ,sBACE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBADF,eAIE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAJF,eAOE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAPF,CADF,eAYE;AAAS,QAAA,EAAE,EAAC;AAAZ,sBACE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBADF,eAIE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAJF,eAOE;AAAS,QAAA,EAAE,EAAC;AAAZ,kBAPF,CAZF,CADiB,CAAnB;AA2BAW,MAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,KA7BG,CAAJ;AA8BD,GA/BO,CAAR;AAgCD,CAlEO,CAAR","sourcesContent":["import React from 'react';\nimport styled, { CSSObject } from 'styled-components';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\n\nimport listPlain from '../listPlain';\nimport listPlainItem from '../../listPlainItem/listPlainItem';\nimport listInline from '../../listInline/listInline';\nimport listInlineItem from '../../listInlineItem/listInlineItem';\n\nconst Example = styled.div<{ css: CSSObject }>(({ css }) => css);\n\ndescribe('Lists', () => {\n  describe('listPlain', () => {\n    test('resets list-style-type correctly', () => {\n      const list = create(\n        <div>\n          <Example as=\"ul\" css={listPlain}>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 1\n            </Example>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 2\n            </Example>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 3\n            </Example>\n          </Example>\n          <Example as=\"ol\" css={listPlain}>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 1\n            </Example>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 2\n            </Example>\n            <Example as=\"li\" css={listPlainItem}>\n              Item 3\n            </Example>\n          </Example>\n        </div>,\n      );\n\n      expect(list).toMatchSnapshot();\n    });\n  });\n\n  describe('listInline', () => {\n    test('renders lists inline', () => {\n      const list = create(\n        <div>\n          <Example as=\"ul\" css={listInline}>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 1\n            </Example>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 2\n            </Example>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 3\n            </Example>\n          </Example>\n          <Example as=\"ol\" css={listInline}>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 1\n            </Example>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 2\n            </Example>\n            <Example as=\"li\" css={listInlineItem}>\n              Item 3\n            </Example>\n          </Example>\n        </div>,\n      );\n\n      expect(list).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"lists.test.js"}