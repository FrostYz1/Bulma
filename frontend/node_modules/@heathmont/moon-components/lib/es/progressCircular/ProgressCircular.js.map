{"version":3,"sources":["../../../src/progressCircular/ProgressCircular.tsx"],"names":["React","useTheme","Path","getPathRatio","value","minValue","maxValue","boundedValue","Math","min","max","ProgressCircular","strokeWidth","props","VIEWBOX_WIDTH","VIEWBOX_HEIGHT","PATH_RADIUS","color","pathRatio","width","height","verticalAlign","stroke","goku","piccolo","transition"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAmB;AACtC,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,KAAT,EAAgBC,QAAhB,CAAT,EAAoCC,QAApC,CAArB;AACA,SAAO,CAACC,YAAY,GAAGF,QAAhB,KAA6BC,QAAQ,GAAGD,QAAxC,CAAP;AACD,CALD;;AAcA,IAAMM,gBAAoD,GAAG,SAAvDA,gBAAuD,OAIvD;AAAA,MAHJP,KAGI,QAHJA,KAGI;AAAA,8BAFJQ,WAEI;AAAA,MAFJA,WAEI,iCAFU,EAEV;AAAA,MADDC,KACC;;AACJ,MAAMC,aAAa,GAAG,GAAtB;AACA,MAAMC,cAAc,GAAG,GAAvB;AACA,MAAMC,WAAW,GAAG,CAACD,cAAc,GAAGH,WAAlB,IAAiC,CAArD;;AAEA,kBAAkBX,QAAQ,EAA1B;AAAA,MAAQgB,KAAR,aAAQA,KAAR;;AAEA,MAAMC,SAAS,GAAGf,YAAY,CAACC,KAAD,CAA9B;AAEA,sBACE;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,aAAa,EAAE;AAHV,KADT;AAME,IAAA,OAAO,gBAASP,aAAT,cAA0BC,cAA1B;AANT,KAOMF,KAPN,gBASE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,UAAU,EAAEG,WAFd;AAGE,IAAA,WAAW,EAAEJ,WAHf;AAIE,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAEL,KAAK,CAACM,IAAN,CAAW,EAAX;AAAV;AAJT,IATF,eAeE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,UAAU,EAAEF,WAFd;AAGE,IAAA,WAAW,EAAEJ,WAHf;AAIE,IAAA,KAAK,EAAE;AACLU,MAAAA,MAAM,EAAEL,KAAK,CAACO,OAAN,CAAc,GAAd,CADH;AAELC,MAAAA,UAAU,EAAErB,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB;AAF9B;AAJT,IAfF,CADF;AA2BD,CAxCD;;AA0CA,eAAeO,gBAAf","sourcesContent":["import React from 'react';\nimport { useTheme } from '@heathmont/moon-themes';\n\nimport Path from './Path';\n\nconst getPathRatio = (value: number) => {\n  const minValue = 0;\n  const maxValue = 100;\n  const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n  return (boundedValue - minValue) / (maxValue - minValue);\n};\n\nexport type CircularProgressbarProps = {\n  value: number;\n  fontSize?: any;\n  strokeWidth?: number;\n  className?: string;\n};\n\nconst ProgressCircular: React.FC<CircularProgressbarProps> = ({\n  value,\n  strokeWidth = 12,\n  ...props\n}) => {\n  const VIEWBOX_WIDTH = 100;\n  const VIEWBOX_HEIGHT = 100;\n  const PATH_RADIUS = (VIEWBOX_HEIGHT - strokeWidth) / 2;\n\n  const { color } = useTheme();\n\n  const pathRatio = getPathRatio(value);\n\n  return (\n    <svg\n      style={{\n        width: '1em',\n        height: '1em',\n        verticalAlign: 'middle',\n      }}\n      viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n      {...props}\n    >\n      <Path\n        dashRatio={1}\n        pathRadius={PATH_RADIUS}\n        strokeWidth={strokeWidth}\n        style={{ stroke: color.goku[80] }}\n      />\n      <Path\n        dashRatio={pathRatio}\n        pathRadius={PATH_RADIUS}\n        strokeWidth={strokeWidth}\n        style={{\n          stroke: color.piccolo[100],\n          transition: value === 0 ? 'none' : 'stroke-dashoffset 0.5s ease 0s',\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default ProgressCircular;\n"],"file":"ProgressCircular.js"}