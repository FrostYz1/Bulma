{"version":3,"sources":["../../../src/progressCircular/Path.tsx"],"names":["React","VIEWBOX_CENTER_X","VIEWBOX_CENTER_Y","getPathDescription","pathRadius","center","x","y","getDashStyle","dashRatio","circumference","Math","PI","gapLength","strokeDasharray","strokeDashoffset","Path","strokeWidth","style"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,EAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,EAAzB;;AAeP,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,UADyB;AAAA,MAEzBC,MAFyB,uEAEJ;AAAEC,IAAAA,CAAC,EAAEL,gBAAL;AAAuBM,IAAAA,CAAC,EAAEL;AAA1B,GAFI;AAAA,6BAIjBG,MAAM,CAACC,CAJU,cAILD,MAAM,CAACE,CAJF,0BAKdH,UALc,uBAMjBA,UANiB,cAMHA,UANG,sBAMmB,IAAIA,UANvB,uBAOjBA,UAPiB,cAOHA,UAPG,uBAOoB,IAAIA,UAPxB;AAAA,CAA3B;;AAUA,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJL,UAII,QAJJA,UAII;AACJ,MAAMM,aAAa,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAV,GAAcR,UAApC;AACA,MAAMS,SAAS,GAAG,CAAC,IAAIJ,SAAL,IAAkBC,aAApC;AAEA,SAAO;AACLI,IAAAA,eAAe,YAAKJ,aAAL,gBAAwBA,aAAxB,OADV;AAELK,IAAAA,gBAAgB,YAAKF,SAAL;AAFX,GAAP;AAID,CAdD;;AAgBA,IAAMG,IAAyB,GAAG,SAA5BA,IAA4B;AAAA,MAChCP,SADgC,SAChCA,SADgC;AAAA,MAEhCL,UAFgC,SAEhCA,UAFgC;AAAA,MAGhCa,WAHgC,SAGhCA,WAHgC;AAAA,MAIhCC,KAJgC,SAIhCA,KAJgC;AAAA,MAKhCb,MALgC,SAKhCA,MALgC;AAAA,sBAO9B;AACE,IAAA,KAAK,kCAAOa,KAAP,GAAiBV,YAAY,CAAC;AAAEJ,MAAAA,UAAU,EAAVA,UAAF;AAAcK,MAAAA,SAAS,EAATA;AAAd,KAAD,CAA7B,CADP;AAEE,IAAA,CAAC,EAAEN,kBAAkB,CAACC,UAAD,EAAaC,MAAb,CAFvB;AAGE,IAAA,WAAW,EAAEY,WAHf;AAIE,IAAA,WAAW,EAAE;AAJf,IAP8B;AAAA,CAAlC;;AAeA,eAAeD,IAAf","sourcesContent":["import React from 'react';\n\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n\ntype Coordinate = {\n  x: number;\n  y: number;\n};\n\ntype PathProps = {\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  center?: Coordinate;\n  style?: object;\n};\n\nconst getPathDescription = (\n  pathRadius: number,\n  center: Coordinate = { x: VIEWBOX_CENTER_X, y: VIEWBOX_CENTER_Y },\n): string => `\n      M ${center.x},${center.y}\n      m 0,-${pathRadius}\n      a ${pathRadius},${pathRadius} 0 1 1 0,${2 * pathRadius}\n      a ${pathRadius},${pathRadius} 0 1 1 0,-${2 * pathRadius}\n    `;\n\nconst getDashStyle = ({\n  dashRatio,\n  pathRadius,\n}: {\n  dashRatio: number;\n  pathRadius: number;\n}) => {\n  const circumference = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * circumference;\n\n  return {\n    strokeDasharray: `${circumference}px ${circumference}px`,\n    strokeDashoffset: `${gapLength}px`,\n  };\n};\n\nconst Path: React.FC<PathProps> = ({\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n  center,\n}) => (\n    <path\n      style={{ ...style, ...getDashStyle({ pathRadius, dashRatio }) }}\n      d={getPathDescription(pathRadius, center)}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n);\n\nexport default Path;\n"],"file":"Path.js"}