var _excluded = ["query", "placeholder", "onSubmit", "onChange", "results", "loadingMessage"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { SearchForm } from './private/components/Form';
import { SearchInput, SearchInputIcon } from './private/components/Input';
import { SearchResults } from './private/components/SearchResults';

var Search = function Search(_ref) {
  var query = _ref.query,
      placeholder = _ref.placeholder,
      onSubmit = _ref.onSubmit,
      onChange = _ref.onChange,
      results = _ref.results,
      loadingMessage = _ref.loadingMessage,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(SearchForm, {
    onSubmit: onSubmit
  }, /*#__PURE__*/React.createElement(SearchInput, _extends({
    value: query,
    placeholder: placeholder,
    type: "text",
    autoComplete: "off",
    required: true,
    onChange: onChange
  }, props)), /*#__PURE__*/React.createElement(SearchInputIcon, null), (results || loadingMessage) && /*#__PURE__*/React.createElement(SearchResults, {
    loadingMessage: loadingMessage,
    results: results
  }), /*#__PURE__*/React.createElement("input", {
    type: "submit",
    hidden: true
  }));
};

export default Search;
//# sourceMappingURL=Search.js.map