{"version":3,"sources":["../../../src/withHorizontalScroll/withHorizontalScroll.ts"],"names":["React","scrollIntoView","smoothScrollIntoView","THRESHOLD","findLastVisibleIndex","childRefs","reversedIndex","slice","reverse","findIndex","child","getAttribute","count","length","finalIndex","findFirstVisibleIndex","scrollToIndex","itemRef","scrollIntoViewSmoothly","containerRef","block","inline","behavior","boundary","scrollLeftToStep","scrollStep","itemRefs","firstVisibleIndex","actualScrollForIndex","scrollRightToStep","lastVisibleIndex","lastIndex","showHideIndicator","setLeftIndicator","setRightIndicator","setFirstVisibleIndex","setLastVisibleIndex","withHorizontalScroll","options","useState","leftIndicator","rightIndicator","useRef","scrollInContainer","useEffect","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","target","setAttribute","removeAttribute","root","current","threshold","item","observe","document","documentElement","style","element","push","index","canScrollLeft","canScrollRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport smoothScrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nexport const THRESHOLD = 0.75;\n\ntype Options = {\n  scrollStep?: number;\n  scrollInContainer?: boolean;\n};\n\nconst findLastVisibleIndex = (childRefs: any[]): any => {\n  const reversedIndex = childRefs\n    // \"reverse\" mutates existing array, that's why we copy it via \"slice\"\n    .slice()\n    .reverse()\n    .findIndex((child) => child.getAttribute('visible'));\n  const count = childRefs.length - 1;\n  const finalIndex = reversedIndex >= 0 ? count - reversedIndex : reversedIndex;\n  return finalIndex;\n};\n\nconst findFirstVisibleIndex = (childRefs: any[]): any => {\n  return childRefs.findIndex((child) => child.getAttribute('visible'));\n};\n\nconst scrollToIndex = (\n  itemRef: HTMLElement,\n  scrollIntoViewSmoothly: any,\n  containerRef?: any\n) => {\n  if (itemRef) {\n    scrollIntoViewSmoothly(itemRef, {\n      block: 'nearest',\n      inline: 'nearest',\n      behavior: 'smooth',\n      boundary: containerRef,\n    });\n  }\n};\n\nconst scrollLeftToStep = (\n  scrollStep: number,\n  itemRefs: HTMLElement[],\n  scrollIntoViewSmoothly: any,\n  containerRef?: any,\n) => {\n  const firstVisibleIndex = findFirstVisibleIndex(itemRefs);\n  const actualScrollForIndex =\n    firstVisibleIndex < scrollStep ? 0 : firstVisibleIndex - scrollStep;\n  scrollToIndex(\n    itemRefs[actualScrollForIndex],\n    scrollIntoViewSmoothly,\n    containerRef\n  );\n};\n\nconst scrollRightToStep = (\n  scrollStep: number,\n  itemRefs: HTMLElement[],\n  scrollIntoViewSmoothly: any,\n  containerRef?: any,\n) => {\n  const lastVisibleIndex = findLastVisibleIndex(itemRefs);\n  const lastIndex = itemRefs.length - 1;\n  const actualScrollForIndex =\n    lastIndex - lastVisibleIndex < scrollStep\n      ? lastIndex\n      : lastVisibleIndex + scrollStep;\n  scrollToIndex(\n    itemRefs[actualScrollForIndex],\n    scrollIntoViewSmoothly,\n    containerRef\n  );\n};\n\nconst showHideIndicator = (\n  itemRefs: HTMLElement[],\n  setLeftIndicator: (isShow: boolean) => void,\n  setRightIndicator: (isShow: boolean) => void,\n  setFirstVisibleIndex: (index: number) => void,\n  setLastVisibleIndex: (index: number) => void\n) => {\n  const firstVisibleIndex = findFirstVisibleIndex(itemRefs);\n  const lastVisibleIndex = findLastVisibleIndex(itemRefs);\n  setFirstVisibleIndex(firstVisibleIndex);\n  setLastVisibleIndex(lastVisibleIndex);\n  if (lastVisibleIndex === -1 && firstVisibleIndex === -1) {\n    setLeftIndicator(false);\n    setRightIndicator(false);\n  }\n  lastVisibleIndex < itemRefs.length - 1\n    ? setRightIndicator(true)\n    : setRightIndicator(false);\n  firstVisibleIndex > 0 ? setLeftIndicator(true) : setLeftIndicator(false);\n};\n\nexport const withHorizontalScroll = (options: Options): any => {\n  const [leftIndicator, setLeftIndicator] = React.useState(false);\n  const [rightIndicator, setRightIndicator] = React.useState(false);\n  const [firstVisibleIndex, setFirstVisibleIndex] = React.useState(-1);\n  const [lastVisibleIndex, setLastVisibleIndex] = React.useState(-1);\n  const containerRef = React.useRef(null);\n\n  const { scrollStep, scrollInContainer } = options;\n  const itemRefs: HTMLElement[] = [];\n  let scrollIntoViewSmoothly: any = scrollIntoView;\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries: any) => {\n        entries.forEach((entry: any) => {\n          entry.intersectionRatio >= THRESHOLD\n            ? entry.target.setAttribute('visible', 'true')\n            : entry.target.removeAttribute('visible');\n          showHideIndicator(\n            itemRefs,\n            setLeftIndicator,\n            setRightIndicator,\n            setFirstVisibleIndex,\n            setLastVisibleIndex\n          );\n        });\n      },\n      {\n        root: containerRef.current,\n        threshold: THRESHOLD,\n      }\n    );\n\n    itemRefs.forEach((item) => {\n      observer.observe(item);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (document) {\n      scrollIntoViewSmoothly =\n        'scrollBehavior' in document.documentElement.style\n          ? scrollIntoView\n          : smoothScrollIntoView;\n    }\n  });\n\n  const itemRef = (element: HTMLElement) => {\n    if (!element) {\n      return;\n    }\n    itemRefs.push(element);\n  };\n\n  return {\n    itemRef,\n    containerRef,\n    firstVisibleIndex,\n    lastVisibleIndex,\n    scrollLeftToStep: () =>\n      scrollLeftToStep(\n        scrollStep || 0,\n        itemRefs,\n        scrollIntoViewSmoothly,\n        scrollInContainer && containerRef && containerRef.current\n      ),\n    scrollRightToStep: () =>\n      scrollRightToStep(\n        scrollStep || 0,\n        itemRefs,\n        scrollIntoViewSmoothly,\n        scrollInContainer && containerRef && containerRef.current\n      ),\n    scrollToIndex: (index: number) =>\n      scrollToIndex(\n        itemRefs[index],\n        scrollIntoViewSmoothly,\n        scrollInContainer && containerRef && containerRef.current\n      ),\n    canScrollLeft: leftIndicator,\n    canScrollRight: rightIndicator,\n  };\n};\n\nexport default withHorizontalScroll;\n"],"file":"withHorizontalScroll.js"}