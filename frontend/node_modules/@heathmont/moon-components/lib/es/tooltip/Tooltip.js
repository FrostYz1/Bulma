var _excluded = ["onClose", "active", "id", "children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import styled, { css } from 'styled-components';
import { rem } from '@heathmont/moon-utils';
import IconClose from '../private/icons/IconClose';
import Toggle from '../toggle/Toggle';
import { slideUpFade } from './animation';
/**
 * Types
 */

/**
 * Settings
 */
var tooltipSpace = '--tooltip-space';
var tooltipIconSize = '0.8rem';
var tooltipIconOffset = "calc(var(".concat(tooltipSpace, ") + ").concat(tooltipIconSize, ")");
var tooltipAnimation = css(["animation:", " ", "s ease-in-out;animation-fill-mode:forwards;"], slideUpFade, function (_ref) {
  var theme = _ref.theme;
  return theme.transitionDuration["default"];
});
/**
 * Styles
 */

var TooltipBubble = styled.div.withConfig({
  displayName: "Tooltip__TooltipBubble",
  componentId: "al2zmf-0"
})(function (_ref2) {
  var _ref3;

  var active = _ref2.active,
      _ref2$align = _ref2.align,
      align = _ref2$align === void 0 ? 'left' : _ref2$align,
      error = _ref2.error,
      _ref2$theme = _ref2.theme,
      border = _ref2$theme.border,
      boxShadow = _ref2$theme.boxShadow,
      color = _ref2$theme.color,
      radius = _ref2$theme.radius,
      space = _ref2$theme.space,
      zIndex = _ref2$theme.zIndex;
  return [(_ref3 = {}, _defineProperty(_ref3, tooltipSpace, rem(space.small)), _defineProperty(_ref3, align, 0), _defineProperty(_ref3, "border", border), _defineProperty(_ref3, "boxShadow", boxShadow), _defineProperty(_ref3, "zIndex", zIndex.toggle), _defineProperty(_ref3, "position", 'absolute'), _defineProperty(_ref3, "maxWidth", '100%'), _defineProperty(_ref3, "padding", "var(".concat(tooltipSpace, ")")), _defineProperty(_ref3, "marginTop", "var(".concat(tooltipSpace, ")")), _defineProperty(_ref3, "backgroundColor", !error ? color.goku[100] : color.chiChi[100]), _defineProperty(_ref3, "borderColor", color.beerus[100]), _defineProperty(_ref3, "borderRadius", rem(radius.small)), _defineProperty(_ref3, "color", !error ? color.bulma[100] : color.goten[100]), _defineProperty(_ref3, "willChange", 'transform'), _defineProperty(_ref3, "".concat(IconClose), {
    color: color.trunks[100]
  }), _ref3), tooltipAnimation, active && {
    animationDirection: 'reverse'
  }];
});
var TooltipCaption = styled.div.withConfig({
  displayName: "Tooltip__TooltipCaption",
  componentId: "al2zmf-1"
})(function (_ref4) {
  var onClose = _ref4.onClose;
  return [{
    position: 'relative'
  }, typeof onClose === 'function' && {
    paddingRight: tooltipIconOffset
  }];
});
var tooltipToggle = {
  display: 'inline-flex',
  position: 'absolute',
  top: '50%',
  transform: 'translateY(-50%)',
  right: 0,
  fontSize: tooltipIconSize
};
/**
 * Component
 */

var Tooltip = function Tooltip(_ref5) {
  var onClose = _ref5.onClose,
      active = _ref5.active,
      id = _ref5.id,
      children = _ref5.children,
      props = _objectWithoutProperties(_ref5, _excluded);

  return /*#__PURE__*/React.createElement("div", {
    "aria-hidden": !active,
    role: "tooltip",
    id: id,
    style: {
      position: 'relative'
    }
  }, /*#__PURE__*/React.createElement(TooltipBubble, _extends({
    active: active
  }, props), /*#__PURE__*/React.createElement(TooltipCaption, {
    onClose: onClose
  }, children, typeof onClose === 'function' && /*#__PURE__*/React.createElement(Toggle, {
    topRight: false,
    style: tooltipToggle
  }, /*#__PURE__*/React.createElement(IconClose, {
    onClick: onClose,
    fontSize: "inherit"
  })))));
};

export default Tooltip;
//# sourceMappingURL=Tooltip.js.map