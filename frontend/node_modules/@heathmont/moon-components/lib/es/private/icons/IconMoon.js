function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M21.017 15.137a8.357 8.357 0 01-7.644 4.902 8.367 8.367 0 01-8.344-8.402 8.357 8.357 0 014.954-7.61 8.292 8.292 0 00-.759 3.443 8.374 8.374 0 008.345 8.402 8.293 8.293 0 003.448-.735zM3.548 6.005a.5.5 0 10.003-1 .5.5 0 00-.003 1zM14.044 7.041a1 1 0 10.007-2 1 1 0 00-.007 2zM18.53 11.056a.5.5 0 10.004-1 .5.5 0 00-.003 1zM3.003 19.003a1 1 0 10.007-2 1 1 0 00-.007 2z",
    fill: "#8697A2"
  }));
};

var IconMoon = styled(Svg).withConfig({
  displayName: "IconMoon",
  componentId: "sc-1v1mxhq-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [{
    verticalAlign: 'middle'
  }, backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconMoon;
//# sourceMappingURL=IconMoon.js.map