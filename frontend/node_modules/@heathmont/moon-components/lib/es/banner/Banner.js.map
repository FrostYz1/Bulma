{"version":3,"sources":["../../../src/banner/Banner.tsx"],"names":["React","rem","styled","IconBannerInfo","IconCloseSmall","IconError","IconWarning","BannerWrapper","div","theme","color","space","minWidth","width","padding","backgroundColor","hit","borderRadius","display","flexDirection","justifyContent","marginLeft","alignItems","fontSize","lineHeight","margin","IconWrapper","marginRight","IconCloseWrapper","goku","radius","largest","cursor","height","Banner","message","onClose","status","isCloseable","useState","visible","setVisible","closeBanner"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { rem } from '@heathmont/moon-utils';\nimport styled from 'styled-components';\n\nimport IconBannerInfo from '../private/icons/IconBannerInfo';\nimport IconCloseSmall from '../private/icons/IconCloseSmall';\nimport IconError from '../private/icons/IconError';\nimport IconWarning from '../private/icons/IconWarning';\n\ntype BannerProps = {\n  message: any;\n  status: 'error' | 'warning' | 'info';\n  onClose?: any;\n  isCloseable?: boolean;\n};\n\nconst BannerWrapper = styled.div<any>(({ theme: { color, space } }) => ({\n  minWidth: rem(280),\n  width: '100%',\n  padding: `${space.default}px ${rem(12)}`,\n  backgroundColor: color.hit[100],\n  borderRadius: rem(12),\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'left',\n  '& > * + *': {\n    marginLeft: rem(12),\n  },\n  alignItems: 'center',\n  'P,  SPAN': {\n    fontSize: rem(14),\n    lineHeight: rem(20),\n    margin: 0,\n  },\n}));\n\nconst IconWrapper = styled.div({\n  marginRight: rem(8),\n});\n\nconst IconCloseWrapper = styled.div(({ theme }) => ({\n  backgroundColor: theme.color.goku[100],\n  borderRadius: rem(theme.radius.largest),\n  marginLeft: 'auto',\n  cursor: 'pointer',\n  width: rem(24),\n  height: rem(24),\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n}));\n\nconst Banner: React.FC<BannerProps> = ({\n  message,\n  onClose,\n  status,\n  isCloseable = false,\n}) => {\n  const [visible, setVisible] = React.useState(true);\n\n  const closeBanner = () => setVisible(false);\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <BannerWrapper>\n      {status === 'error' && (\n        <IconWrapper>\n          <IconError fontSize=\"1.5rem\" />\n        </IconWrapper>\n      )}\n      {status === 'warning' && (\n        <IconWrapper>\n          <IconWarning fontSize=\"1.5rem\" color=\"krillin.100\" />\n        </IconWrapper>\n      )}\n      {status === 'info' && (\n        <IconWrapper>\n          <IconBannerInfo fontSize=\"1.5rem\" color=\"krillin.100\" />\n        </IconWrapper>\n      )}\n      {message && message}\n      {isCloseable && (\n        <IconCloseWrapper\n          onClick={() => {\n            if (onClose && typeof onClose === 'function') {\n              onClose();\n            }\n            closeBanner();\n          }}\n        >\n          <IconCloseSmall fontSize=\"1rem\" color=\"trunks.100\" />\n        </IconCloseWrapper>\n      )}\n    </BannerWrapper>\n  );\n};\n\nexport type { BannerProps };\n\nexport default Banner;\n"],"file":"Banner.js"}