{"version":3,"sources":["../../../src/card/Card.ts"],"names":["React","styled","padding","inlineSvg","rem","cardGradientSizes","backgroundSvg","backgroundIcon","isValidElement","backgroundImage","cloneElement","color","Card","div","active","flex","template","theme","border","radius","space","display","minHeight","medium","position","borderRadius","borderColor","piccolo","flexDirection","flexWrap","justifyContent","alignItems","front","backgroundColor","gohan","backgroundRepeat","backgroundBlendMode","backgroundSize","backgroundPosition","outline","goku","beerus","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,uBAA/B;AAEA,SAASC,iBAAT,QAAkC,SAAlC,C,CAEA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,cAAD;AAAA,SACpBA,cAAc,IACXP,KAAK,CAACQ,cAAN,CAAqBD,cAArB,CADH,IAC2C;AACzC;AACAE,IAAAA,eAAe,EAAEN,SAAS,CACxBH,KAAK,CAACU,YAAN,CAAmBH,cAAnB,EAA8D;AAC5D;AACR;AACA;AACA;AACA;AACQI,MAAAA,KAAK,EAAE;AANqD,KAA9D,CADwB;AAFe,GAFvB;AAAA,CAAtB;;AAuBA;AACA;AACA;AACA,IAAMC,IAAI,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,GACR;AAAA,MACEC,MADF,QACEA,MADF;AAAA,MAEEP,cAFF,QAEEA,cAFF;AAAA,MAGEQ,IAHF,QAGEA,IAHF;AAAA,MAIEC,QAJF,QAIEA,QAJF;AAAA,wBAKEC,KALF;AAAA,MAMIC,MANJ,cAMIA,MANJ;AAAA,MAMYP,KANZ,cAMYA,KANZ;AAAA,MAMmBQ,MANnB,cAMmBA,MANnB;AAAA,MAM2BC,KAN3B,cAM2BA,KAN3B;AAAA,SAQM;AAEFC,IAAAA,OAAO,EAAE,OAFP;AAGFC,IAAAA,SAAS,EAAElB,GAAG,CAAC,GAAD;AAHZ,KAICF,OAAO,CAACE,GAAG,CAACgB,KAAK,WAAN,CAAJ,EAAqBhB,GAAG,CAACgB,KAAK,CAACG,MAAP,CAAxB,CAJR;AAKFC,IAAAA,QAAQ,EAAE,UALR;AAMFC,IAAAA,YAAY,EAAErB,GAAG,CAACe,MAAM,WAAP,CANf;AAOFD,IAAAA,MAAM,EAANA,MAPE;AAQFQ,IAAAA,WAAW,EAAE;AARX,MAUJZ,MAAM,IAAI;AACRY,IAAAA,WAAW,EAAEf,KAAK,CAACgB,OAAN,CAAc,GAAd;AADL,GAVN,EAaJZ,IAAI,IAAI;AACNM,IAAAA,OAAO,EAAE,MADH;AAENO,IAAAA,aAAa,EAAE,QAFT;AAGNC,IAAAA,QAAQ,EAAE,MAHJ;AAINC,IAAAA,cAAc,EAAE,eAJV;AAKNC,IAAAA,UAAU,EAAE;AALN,GAbJ,EAoBJf,QAAQ,IACH;AACDgB,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,eAAe,EAAEtB,KAAK,CAACuB,KAAN,CAAY,GAAZ;AAAnB,KADK,EAEL3B,cAAc;AACZ4B,MAAAA,gBAAgB,EAAE,WADN;AAEZC,MAAAA,mBAAmB,EAAE;AAFT,OAGT9B,aAAa,CAACC,cAAD,CAHJ;AAIZ8B,MAAAA,cAAc,sBAAehC,iBAAf,CAJF;AAKZiC,MAAAA,kBAAkB,yBAAkBlC,GAAG,CAACgB,KAAK,WAAN,CAArB;AALN,MAFT,CADN;AAWDmB,IAAAA,OAAO,EAAE;AACPN,MAAAA,eAAe,EAAEtB,KAAK,CAAC6B,IAAN,CAAW,GAAX,CADV;AAEPd,MAAAA,WAAW,EAAEf,KAAK,CAAC8B,MAAN,CAAa,GAAb;AAFN;AAXR,IAeDzB,QAfC,CArBD,CARN;AAAA,CADQ,CAAV;AAiDAJ,IAAI,CAAC8B,YAAL,GAAoB;AAClB1B,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAIA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport padding from 'polished/lib/shorthands/padding';\nimport { inlineSvg, rem } from '@heathmont/moon-utils';\n\nimport { cardGradientSizes } from './utils';\n\n// type CardBackgroundIcon = InlineSVGProps | false | undefined;\n\nconst backgroundSvg = (backgroundIcon: any) =>\n  backgroundIcon\n  && React.isValidElement(backgroundIcon) && {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    backgroundImage: inlineSvg(\n      React.cloneElement(backgroundIcon as React.ReactElement<any>, {\n        /**\n         * By setting the icon to white with `0.05` opacity, we can use\n         * background-blend-mode to exclude it from the background, whatever\n         * the color may be.\n         */\n        color: 'rgba(255, 255, 255, 0.05)',\n      }),\n    ),\n  };\n\nexport type CardProps = {\n  backgroundIcon?: any;\n  template: 'front' | 'outline';\n  flex?: boolean;\n  active?: boolean;\n};\n\n/**\n * Component\n */\nconst Card = styled.div<CardProps>(\n  ({\n    active,\n    backgroundIcon,\n    flex,\n    template,\n    theme: {\n      border, color, radius, space,\n    },\n  }) => [\n    {\n      display: 'block',\n      minHeight: rem(168),\n      ...padding(rem(space.default), rem(space.medium)),\n      position: 'relative',\n      borderRadius: rem(radius.default),\n      border,\n      borderColor: 'transparent',\n    },\n    active && {\n      borderColor: color.piccolo[100],\n    },\n    flex && {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      alignItems: 'alignContent',\n    },\n    template\n      && {\n        front: [\n          { backgroundColor: color.gohan[100] },\n          backgroundIcon && {\n            backgroundRepeat: 'no-repeat',\n            backgroundBlendMode: 'exclusion',\n            ...backgroundSvg(backgroundIcon),\n            backgroundSize: `auto 50%, ${cardGradientSizes}`,\n            backgroundPosition: `center right ${rem(space.default)}`,\n          },\n        ],\n        outline: {\n          backgroundColor: color.goku[100],\n          borderColor: color.beerus[100],\n        },\n      }[template],\n  ],\n);\n\nCard.defaultProps = {\n  template: 'front',\n};\n\nexport default Card;\n"],"file":"Card.js"}