var _excluded = ["children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint-disable no-console */
import React from 'react';
import { create } from 'react-test-renderer';
import 'jest-styled-components';
import { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';
import TabLink from '../TabLink';

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: sportsbetDark
  }, component);
};

var TestLink = function TestLink(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("a", _extends({
    id: "test-link"
  }, props), children);
};

describe('Nav - TabLink', function () {
  test('renders as an anchor by default', function () {
    var tabLink = create(renderWithTheme( /*#__PURE__*/React.createElement(TabLink, {
      href: "#"
    }, "Sample link")));
    expect(tabLink).toMatchSnapshot();
  });
  test('renders as active', function () {
    var tabLink = create(renderWithTheme( /*#__PURE__*/React.createElement(TabLink, {
      className: "active"
    }, "Sample link")));
    expect(tabLink).toMatchSnapshot();
  });
  test('renders as a component', function () {
    var tabLink = create(renderWithTheme( /*#__PURE__*/React.createElement(TabLink, {
      as: TestLink
    }, "Sample link")));
    expect(tabLink).toMatchSnapshot();
  });
  test('renders as active', function () {
    var tabLink = create(renderWithTheme( /*#__PURE__*/React.createElement(TabLink, {
      href: "#"
    }, "Sample link")));
    expect(tabLink).toMatchSnapshot();
  });
});
//# sourceMappingURL=tab-link.test.js.map