function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { rem, mq, themed } from '@heathmont/moon-utils';
import styled from 'styled-components';
import IconError from '../private/icons/IconError';
import IconWarning from '../private/icons/IconWarning';
import IconBannerInfo from '../private/icons/IconBannerInfo';
import IconSnackbarSuccess from '../private/icons/IconSnackbarSuccess';
var SnackbarWrapper = styled.div.withConfig({
  displayName: "Snackbar__SnackbarWrapper",
  componentId: "sc-3ukbar-0"
})(function (_ref) {
  var _ref2;

  var theme = _ref.theme,
      _ref$theme = _ref.theme,
      color = _ref$theme.color,
      space = _ref$theme.space,
      zIndex = _ref$theme.zIndex,
      breakpoint = _ref$theme.breakpoint,
      position = _ref.position,
      justifyContent = _ref.justifyContent,
      maxWidth = _ref.maxWidth,
      minWidth = _ref.minWidth,
      bgColor = _ref.bgColor;
  return [{
    width: 'fit-content'
  }, (position === 'bottom' || position === 'top') && (_ref2 = {
    position: 'fixed',
    left: '50%',
    transform: 'translate(-50%, 0)',
    zIndex: zIndex.dialog,
    marginBottom: space["default"],
    minWidth: minWidth || rem(180),
    maxWidth: maxWidth || "calc(100vw - ".concat(space["default"] * 2, "px)")
  }, _defineProperty(_ref2, mq(breakpoint.medium), {
    margin: space["default"]
  }), _defineProperty(_ref2, mq(breakpoint.large), {
    maxWidth: maxWidth || '20vw',
    width: 'fit-content',
    left: 0,
    transform: 'none'
  }), _ref2), position === 'bottom' && {
    bottom: 0
  }, position === 'top' && {
    top: '10%'
  }, justifyContent && {
    justifyContent: justifyContent
  }, {
    padding: space["default"],
    backgroundColor: bgColor ? themed('color', bgColor)(theme) : color.bulma[100],
    borderRadius: rem(12),
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    '& > * + *': {
      marginLeft: space["default"]
    }
  }];
});
var MessageWrapper = styled.p.withConfig({
  displayName: "Snackbar__MessageWrapper",
  componentId: "sc-3ukbar-1"
})(function (_ref3) {
  var theme = _ref3.theme;
  return [{
    fontSize: rem(14),
    lineHeight: 1.25,
    color: theme.color.hit[100],
    margin: 0
  }];
});
var IconWrapper = styled.div.withConfig({
  displayName: "Snackbar__IconWrapper",
  componentId: "sc-3ukbar-2"
})({
  marginRight: rem(8)
});

var Snackbar = function Snackbar(_ref4) {
  var message = _ref4.message,
      action = _ref4.action,
      _ref4$position = _ref4.position,
      position = _ref4$position === void 0 ? 'bottom' : _ref4$position,
      status = _ref4.status,
      justifyContent = _ref4.justifyContent,
      maxWidth = _ref4.maxWidth,
      minWidth = _ref4.minWidth,
      bgColor = _ref4.bgColor;
  return /*#__PURE__*/React.createElement(SnackbarWrapper, {
    position: position,
    justifyContent: justifyContent,
    maxWidth: maxWidth,
    minWidth: minWidth,
    bgColor: bgColor
  }, status === 'error' && /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(IconError, {
    fontSize: "1.5rem"
  })), status === 'warning' && /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(IconWarning, {
    fontSize: "1.5rem",
    color: "krillin.100"
  })), status === 'info' && /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(IconBannerInfo, {
    fontSize: "1.5rem",
    color: "krillin.100"
  })), status === 'success' && /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(IconSnackbarSuccess, {
    fontSize: "1.5rem",
    color: "krillin.100"
  })), message && /*#__PURE__*/React.createElement(MessageWrapper, null, message), action && action);
};

export default Snackbar;
//# sourceMappingURL=Snackbar.js.map