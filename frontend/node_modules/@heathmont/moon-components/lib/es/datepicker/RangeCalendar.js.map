{"version":3,"sources":["../../../src/datepicker/RangeCalendar.tsx"],"names":["React","addMonths","subMonths","endOfDay","format","isAfter","isSameDay","startOfDay","isValid","getMonthDays","Picker","getWeekDayLabels","getDatesFromRange","getPlaceholder","RangeCalendar","initialStartDate","startDate","initialEndDate","endDate","onDateChange","config","range","translations","hasClickedOutside","setIsOpen","setPlaceholder","useState","hoveredDate","undefined","cursorDate","Date","fallbackStartDate","fallbackEndDate","datesState","setDatesState","useEffect","apply","selectDay","selectedDate","newEndDate","newStartDate","setStartDate","setEndDate","reset","hoverDay","selectRange","newRange","nextMonth","prevMonth","firstMonth","date","weekStartsOn","nextMonthCurrentDate","secondMonth","labels","firstMonthLabel","monthLabelFormat","firstMonthYearLabel","yearLabelFormat","secondMonthLabel","secondMonthYearLabel","weekDayLabels"],"mappings":"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","sourcesContent":["import React from 'react';\nimport addMonths from 'date-fns/addMonths';\nimport subMonths from 'date-fns/subMonths';\nimport endOfDay from 'date-fns/endOfDay';\nimport format from 'date-fns/format';\nimport isAfter from 'date-fns/isAfter';\nimport isSameDay from 'date-fns/isSameDay';\nimport startOfDay from 'date-fns/startOfDay';\nimport isValid from 'date-fns/isValid';\n\nimport { getMonthDays } from './private/helpers/getMonthDays';\nimport { Picker } from './private/Picker';\nimport { getWeekDayLabels } from './private/helpers/getWeekDayLabels';\nimport { getDatesFromRange } from './private/helpers/getDatesFromRange';\nimport { getPlaceholder } from './private/helpers/getPlaceholder';\n\nimport type { DatesRange } from './private/helpers/getDatesFromRange';\n\nexport type DatepickerState = {\n  startDate?: Date;\n  endDate?: Date;\n  range?: DatesRange;\n  hoveredDate?: Date;\n  cursorDate: Date; // just to navigate between months\n};\n\nexport type WeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined;\n\nexport interface Translations {\n  placeholder: any;\n  apply: any;\n  reset: any;\n  lastMonth: any;\n  lastWeek: any;\n  last24hours: any;\n  yesterday: any;\n  today: any;\n  tomorrow: any;\n  thisWeek: any;\n  nextWeek: any;\n  thisMonth: any;\n  nextMonth: any;\n}\n\nexport interface Config {\n  format?: string;\n  monthLabelFormat?: string;\n  yearLabelFormat?: string;\n  weekStartsOn?: WeekStartsOn;\n  withHoursAndMinutes?: boolean;\n  onlyFuture?: boolean;\n  without24AndToday?: boolean;\n  locale?: any;\n  ranges?: DatesRange[];\n}\n\nexport interface DateRangePickerProps {\n  isOpenByDefault?: boolean;\n  format?: string;\n  startDate?: Date;\n  endDate?: Date;\n  range?: DatesRange;\n  hasClickedOutside?: boolean;\n  setIsOpen?: any;\n  setPlaceholder?: any;\n  onDateChange: ({\n    startDate,\n    endDate,\n    range,\n  }: {\n    startDate?: Date;\n    endDate?: Date;\n    range?: DatesRange;\n  }) => any;\n  config?: Config;\n  translations?: Translations;\n}\n\nconst RangeCalendar: React.FC<DateRangePickerProps> = ({\n  startDate: initialStartDate,\n  endDate: initialEndDate,\n  onDateChange,\n  config,\n  range,\n  translations,\n  hasClickedOutside,\n  setIsOpen,\n  setPlaceholder,\n}) => {\n  const [datesState, setDatesState] = React.useState<DatepickerState>({\n    startDate: initialStartDate,\n    endDate: initialEndDate,\n    range,\n    hoveredDate: undefined,\n    cursorDate: initialStartDate ? new Date(initialStartDate) : new Date(),\n    // get \"startDate\" and \"endDate\" if \"range\" is defined\n    ...getDatesFromRange({\n      range,\n      config,\n      fallbackStartDate: initialStartDate,\n      fallbackEndDate: initialEndDate,\n    }),\n  });\n\n  React.useEffect(() => {\n    if (hasClickedOutside) {\n      onDateChange({\n        startDate: datesState.startDate,\n        endDate: datesState.endDate,\n        range: datesState.range,\n      });\n      setPlaceholder(\n        getPlaceholder({\n          startDate: datesState.startDate,\n          endDate: datesState.endDate,\n          range: datesState.range,\n          config,\n          translations,\n        }),\n      );\n      setIsOpen(false);\n    }\n  });\n\n  const apply = () => {\n    onDateChange({\n      startDate: datesState.startDate,\n      endDate: datesState.endDate,\n      range: datesState.range,\n    });\n    setPlaceholder(\n      getPlaceholder({\n        startDate: datesState.startDate,\n        endDate: datesState.endDate,\n        range: datesState.range,\n        config,\n        translations,\n      }),\n    );\n    setIsOpen(false);\n  };\n\n  const selectDay = (selectedDate: Date) => {\n    if (\n      datesState.startDate\n      && !datesState.endDate\n      && (isSameDay(datesState.startDate, selectedDate)\n        || isAfter(selectedDate, datesState.startDate))\n    ) {\n      const newEndDate = endOfDay(selectedDate);\n      setDatesState({\n        ...datesState,\n        hoveredDate: undefined,\n        endDate: newEndDate,\n        range: '',\n      });\n    } else if (datesState.startDate && datesState.endDate) {\n      const newStartDate = startOfDay(selectedDate);\n      setDatesState({\n        ...datesState,\n        hoveredDate: undefined,\n        startDate: newStartDate,\n        endDate: undefined,\n        range: '',\n      });\n    } else {\n      const newStartDate = startOfDay(selectedDate);\n      setDatesState({\n        ...datesState,\n        hoveredDate: undefined,\n        startDate: newStartDate,\n        range: '',\n      });\n    }\n  };\n\n  const setStartDate = (startDate: Date) => {\n    if (isValid(startDate) && startDate) {\n      setDatesState({\n        ...datesState,\n        startDate,\n        range: '',\n      });\n    }\n  };\n\n  const setEndDate = (endDate: Date) => {\n    if (isValid(endDate) && endDate) {\n      setDatesState({\n        ...datesState,\n        endDate,\n        range: '',\n      });\n    }\n  };\n\n  const reset = () => {\n    setDatesState({\n      startDate: undefined,\n      endDate: undefined,\n      range: '',\n      hoveredDate: undefined,\n      cursorDate: new Date(),\n    });\n  };\n\n  // TODO - onClickOutsideHandler\n\n  const hoverDay = (hoveredDate: Date) => {\n    if (\n      datesState.startDate\n      && !datesState.endDate\n      && !isSameDay(hoveredDate, datesState.startDate)\n      && isAfter(hoveredDate, datesState.startDate)\n    ) {\n      setDatesState({\n        ...datesState,\n        hoveredDate,\n      });\n    }\n  };\n\n  const selectRange = (newRange: DatesRange) => {\n    const { startDate, endDate } = getDatesFromRange({\n      range: newRange,\n      fallbackStartDate: datesState.startDate,\n      fallbackEndDate: datesState.endDate,\n      config,\n    });\n    setDatesState({\n      ...datesState,\n      startDate,\n      endDate,\n      hoveredDate: undefined,\n      range: newRange,\n      cursorDate: startDate || datesState.cursorDate,\n    });\n  };\n\n  const nextMonth = () => {\n    setDatesState({\n      ...datesState,\n      cursorDate: addMonths(datesState.cursorDate, 2),\n    });\n  };\n\n  const prevMonth = () => {\n    setDatesState({\n      ...datesState,\n      cursorDate: subMonths(datesState.cursorDate, 2),\n    });\n  };\n\n  const firstMonth = getMonthDays({\n    date: datesState.cursorDate,\n    weekStartsOn: config && config.weekStartsOn,\n  });\n\n  const nextMonthCurrentDate = addMonths(datesState.cursorDate, 1);\n  const secondMonth = getMonthDays({\n    date: nextMonthCurrentDate,\n    weekStartsOn: config && config.weekStartsOn,\n  });\n\n  const labels = {\n    firstMonthLabel: format(\n      datesState.cursorDate,\n      (config && config.monthLabelFormat) || 'MMMM',\n      config,\n    ),\n    firstMonthYearLabel: format(\n      datesState.cursorDate,\n      (config && config.yearLabelFormat) || 'yyyy',\n      config,\n    ),\n    secondMonthLabel: format(\n      nextMonthCurrentDate,\n      (config && config.monthLabelFormat) || 'MMMM',\n      config,\n    ),\n    secondMonthYearLabel: format(\n      nextMonthCurrentDate,\n      (config && config.yearLabelFormat) || 'yyyy',\n      config,\n    ),\n    weekDayLabels: config && getWeekDayLabels(config),\n  };\n\n  return (\n    <Picker\n      datesState={datesState}\n      labels={labels}\n      translations={translations}\n      config={config}\n      onDayClick={selectDay}\n      firstMonth={firstMonth}\n      secondMonth={secondMonth}\n      onDayMouseEnter={hoverDay}\n      selectRange={selectRange}\n      nextMonth={nextMonth}\n      prevMonth={prevMonth}\n      setStartDate={setStartDate}\n      setEndDate={setEndDate}\n      onDateChange={onDateChange}\n      apply={apply}\n      reset={reset}\n    />\n  );\n};\n\nexport default RangeCalendar;\n"],"file":"RangeCalendar.js"}