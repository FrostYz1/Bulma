import React from 'react';
import styled from 'styled-components';
import format from 'date-fns/format';
import { rem } from '@heathmont/moon-utils';
var DayStyled = styled.div.withConfig({
  displayName: "Day__DayStyled",
  componentId: "sc-173weuh-0"
})(function (_ref) {
  var theme = _ref.theme,
      isInRange = _ref.isInRange,
      isInRangePreview = _ref.isInRangePreview,
      isStartEdge = _ref.isStartEdge,
      isEndEdge = _ref.isEndEdge,
      isToday = _ref.isToday;
  return [{
    height: rem(32),
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontWeight: 500,
    fontSize: rem(10),
    color: theme.color.bulma[100],
    userSelect: 'none',
    cursor: 'pointer',
    boxSizing: 'border-box',
    border: '1px solid transparent',
    // to prevent jumping on hover
    '&:hover': {
      border: "1px solid ".concat(theme.color.trunks[100]),
      borderRadius: rem(theme.radius.largest)
    }
  }, (isInRange || isInRangePreview) && {
    backgroundColor: theme.color.goku[80]
  }, (isStartEdge || isEndEdge) && {
    background: theme.color.piccolo[100],
    borderRadius: rem(theme.radius.largest),
    color: theme.color.goten[100]
  }, isToday && {
    fontWeight: 'bold'
  }];
});
var DayWrapper = styled.div.withConfig({
  displayName: "Day__DayWrapper",
  componentId: "sc-173weuh-1"
})(function (_ref2) {
  var theme = _ref2.theme,
      isStartEdge = _ref2.isStartEdge,
      isEndEdge = _ref2.isEndEdge,
      isInRangePreview = _ref2.isInRangePreview;
  return [isStartEdge && {
    backgroundColor: theme.color.goku[80],
    borderTopLeftRadius: rem(theme.radius.largest),
    borderBottomLeftRadius: rem(theme.radius.largest)
  }, isEndEdge && {
    backgroundColor: theme.color.goku[80],
    borderTopRightRadius: rem(theme.radius.largest),
    borderBottomRightRadius: rem(theme.radius.largest)
  }, isInRangePreview && {
    backgroundColor: theme.color.goku[80],
    '&:hover': {
      borderTopRightRadius: rem(theme.radius.largest),
      borderBottomRightRadius: rem(theme.radius.largest)
    }
  }];
});
var EmptyCell = styled.div.withConfig({
  displayName: "Day__EmptyCell",
  componentId: "sc-173weuh-2"
})({
  height: rem(32)
});

var formatLabel = function formatLabel(date) {
  return format(date, 'd');
};

export var Day = function Day(_ref3) {
  var date = _ref3.date,
      isSameMonth = _ref3.isSameMonth,
      isStartEdge = _ref3.isStartEdge,
      isEndEdge = _ref3.isEndEdge,
      isInRange = _ref3.isInRange,
      isInRangePreview = _ref3.isInRangePreview,
      onDayClick = _ref3.onDayClick,
      _onMouseEnter = _ref3.onMouseEnter,
      isToday = _ref3.isToday;

  if (!isSameMonth) {
    return /*#__PURE__*/React.createElement(EmptyCell, null);
  }

  return /*#__PURE__*/React.createElement(DayWrapper, {
    isStartEdge: isStartEdge,
    isEndEdge: isEndEdge,
    isInRangePreview: isInRangePreview,
    isInRange: isInRange
  }, /*#__PURE__*/React.createElement(DayStyled, {
    isStartEdge: isStartEdge,
    isEndEdge: isEndEdge,
    isInRange: isInRange,
    isInRangePreview: isInRangePreview,
    isToday: isToday,
    onClick: function onClick() {
      return onDayClick(date);
    },
    onMouseEnter: function onMouseEnter() {
      return _onMouseEnter(date);
    }
  }, formatLabel(date)));
};
//# sourceMappingURL=Day.js.map