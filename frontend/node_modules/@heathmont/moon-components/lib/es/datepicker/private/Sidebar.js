function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import rem from 'polished/lib/helpers/rem';
import styled from 'styled-components';
import { mq } from '@heathmont/moon-utils';
import { getRanges } from './helpers/getRanges';
var SidebarList = styled.ul.withConfig({
  displayName: "Sidebar__SidebarList",
  componentId: "omhqqr-0"
})(function (_ref) {
  var _ref$theme = _ref.theme,
      color = _ref$theme.color,
      breakpoint = _ref$theme.breakpoint;
  return _defineProperty({
    gridArea: 'sidebar',
    background: color.goku[100],
    padding: 0,
    display: 'flex',
    flexDirection: 'row',
    flexWrap: 'wrap'
  }, mq(breakpoint.medium), {
    flexDirection: 'column',
    maxWidth: '100%' // maxWidth: rem(120),

  });
});
var RangeItem = styled.li.withConfig({
  displayName: "Sidebar__RangeItem",
  componentId: "omhqqr-1"
})(function (_ref3) {
  var _ref4;

  var theme = _ref3.theme,
      isSelected = _ref3.isSelected;
  return _ref4 = {
    position: 'relative',
    listStyle: 'none',
    padding: rem(8),
    boxSizing: 'border-box',
    cursor: 'pointer',
    fontSize: rem(14),
    lineHeight: rem(20),
    background: isSelected ? theme.color.goku[80] : theme.color.goku[100],
    color: theme.color.bulma[100]
  }, _defineProperty(_ref4, mq(theme.breakpoint.small), {
    paddingLeft: rem(16)
  }), _defineProperty(_ref4, '&:hover', {
    background: theme.color.goku[80]
  }), _defineProperty(_ref4, '&:hover:before', {
    content: "''",
    display: 'block',
    position: 'absolute',
    zIndex: 1,
    left: 0,
    top: 0,
    bottom: 0,
    width: rem(4),
    height: '100%',
    backgroundColor: theme.color.bulma[100],
    borderRadius: rem(4)
  }), _defineProperty(_ref4, '&:before', isSelected ? {
    content: "''",
    display: 'block',
    position: 'absolute',
    zIndex: 1,
    left: 0,
    top: 0,
    bottom: 0,
    width: rem(4),
    height: '100%',
    backgroundColor: theme.color.bulma[100],
    borderRadius: rem(4)
  } : ''), _ref4;
});
export var Sidebar = function Sidebar(_ref5) {
  var currentRange = _ref5.range,
      selectRange = _ref5.selectRange,
      translations = _ref5.translations,
      config = _ref5.config;
  var ranges = getRanges(config);
  return /*#__PURE__*/React.createElement(SidebarList, null, ranges.map(function (range) {
    return /*#__PURE__*/React.createElement(RangeItem, {
      key: range,
      isSelected: range === currentRange,
      onClick: function onClick() {
        return selectRange(range);
      }
    }, translations[range]);
  }));
};
//# sourceMappingURL=Sidebar.js.map