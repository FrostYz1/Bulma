{"version":3,"sources":["../../../../src/datepicker/private/InputsPanel.tsx"],"names":["React","styled","format","isValid","compareAsc","rem","mq","Button","TextInput","InputsPanelStyled","div","theme","gridArea","display","flexDirection","paddingTop","space","breakpoint","medium","marginTop","marginLeft","StyledTextInput","maxWidth","InputsPanel","startDate","endDate","setStartDate","setEndDate","translations","apply","config","dateFormat","withHoursAndMinutes","useState","inputStartDate","setInputStartDate","inputEndDate","setInputEndDate","hasStartDateError","setStartDateError","hasEndDateError","setEndDateError","useEffect","isStartDayBefore","e","preventDefault","target","value","newStartDate","Date","isValidDate","newEndDate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport format from 'date-fns/format';\nimport isValid from 'date-fns/isValid';\nimport compareAsc from 'date-fns/compareAsc';\nimport rem from 'polished/lib/helpers/rem';\nimport { mq } from '@heathmont/moon-utils';\n\nimport Button from '../../button/Button';\nimport TextInput from '../../textInput/TextInput';\nimport { Config, Translations } from '../RangeCalendar';\n\nconst InputsPanelStyled = styled.div(({ theme }) => ({\n  gridArea: 'inputs',\n  display: 'flex',\n  flexDirection: 'column',\n  paddingTop: rem(theme.space.default),\n  [mq(theme.breakpoint.medium, 'max-width')]: {\n    '& > * + *': {\n      marginTop: rem(theme.space.default),\n    },\n  },\n  [mq(theme.breakpoint.medium)]: {\n    flexDirection: 'row',\n    '& > * + *': {\n      marginLeft: rem(theme.space.default),\n    },\n  },\n}));\n\nconst StyledTextInput = styled(TextInput)(({ theme: { breakpoint } }) => ({\n  [mq(breakpoint.medium)]: {\n    maxWidth: rem(228),\n  },\n}));\n\ntype InputsPanelProps = {\n  startDate: Date;\n  endDate: Date;\n  setStartDate: any;\n  setEndDate: any;\n  onDateChange: any;\n  translations: Translations;\n  apply: any;\n  reset: any;\n  config: Config;\n};\n\nexport const InputsPanel: React.FC<InputsPanelProps> = ({\n  startDate,\n  endDate,\n  setStartDate,\n  setEndDate,\n  translations,\n  apply,\n  config,\n  // reset,\n}) => {\n  const dateFormat = config.withHoursAndMinutes\n    ? \"yyyy-MM-dd'T'HH:mm\"\n    : 'yyyy-MM-dd';\n  const [inputStartDate, setInputStartDate] = React.useState(\n    startDate ? format(startDate, dateFormat) : '',\n  );\n  const [inputEndDate, setInputEndDate] = React.useState(\n    endDate ? format(endDate, dateFormat) : '',\n  );\n  const [hasStartDateError, setStartDateError] = React.useState('');\n  const [hasEndDateError, setEndDateError] = React.useState(false);\n  React.useEffect(() => {\n    setInputStartDate(startDate ? format(startDate, dateFormat) : '');\n    setInputEndDate(endDate ? format(endDate, dateFormat) : '');\n    const isStartDayBefore = compareAsc(startDate, endDate) === -1;\n    if (isStartDayBefore) {\n      setStartDateError('');\n      setEndDateError(false);\n    }\n    if (startDate && !endDate) {\n      setInputEndDate('');\n      setStartDateError('');\n      setEndDateError(true);\n    }\n  }, [startDate, endDate]);\n\n  return (\n    <InputsPanelStyled>\n      {/* <Button type=\"button\" variant=\"tertiary\" onClick={reset}>\n        {translations.reset}\n      </Button> */}\n      <StyledTextInput\n        error={hasStartDateError}\n        type={config.withHoursAndMinutes ? 'datetime-local' : 'date'}\n        value={inputStartDate}\n        onChange={(e) => {\n          e.preventDefault();\n          setInputStartDate(e.target.value);\n          const newStartDate = new Date(e.target.value);\n          const isValidDate = isValid(newStartDate);\n          if (!isValidDate) {\n            setStartDateError('Not valid date');\n            return;\n          }\n          if (isValidDate && endDate) {\n            const isStartDayBefore = compareAsc(newStartDate, endDate) === -1;\n            if (isStartDayBefore) {\n              setStartDate(newStartDate);\n              setStartDateError('');\n              setEndDateError(false);\n            } else {\n              setStartDateError('Should before');\n            }\n          }\n        }}\n      />\n      <StyledTextInput\n        error={hasEndDateError}\n        type={config.withHoursAndMinutes ? 'datetime-local' : 'date'}\n        value={inputEndDate}\n        onChange={(e) => {\n          e.preventDefault();\n          setInputEndDate(e.target.value);\n          const newEndDate = new Date(e.target.value);\n          const isValidDate = isValid(newEndDate);\n          if (!isValidDate) {\n            setEndDateError(true);\n            return;\n          }\n          if (isValidDate && startDate) {\n            const isStartDayBefore = compareAsc(startDate, newEndDate) === -1;\n            if (isStartDayBefore) {\n              setEndDate(newEndDate);\n              setStartDateError('');\n              setEndDateError(false);\n            } else {\n              setEndDateError(true);\n            }\n          }\n        }}\n      />\n\n      <Button\n        variant=\"primary\"\n        type=\"button\"\n        onClick={apply}\n        disabled={!!hasStartDateError || !!hasEndDateError}\n      >\n        {translations.apply}\n      </Button>\n    </InputsPanelStyled>\n  );\n};\n"],"file":"InputsPanel.js"}