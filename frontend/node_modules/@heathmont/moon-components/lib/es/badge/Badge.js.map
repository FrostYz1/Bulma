{"version":3,"sources":["../../../src/badge/Badge.ts"],"names":["styled","rem","themed","Badge","span","theme","fontWeight","radius","display","semibold","textTransform","borderRadius","largest","letterSpacing","size","padding","fontSize","lineHeight","color","backgroundColor","defaultProps"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,uBAA5B;AASA,IAAMC,KAAK,GAAGH,MAAM,CAACI,IAAV;AAAA;AAAA;AAAA,GACT;AAAA,wBAAGC,KAAH;AAAA,MAAYC,UAAZ,cAAYA,UAAZ;AAAA,MAAwBC,MAAxB,cAAwBA,MAAxB;AAAA,SAAwC;AACtCC,IAAAA,OAAO,EAAE,MAD6B;AAEtCF,IAAAA,UAAU,EAAEA,UAAU,CAACG,QAFe;AAGtCC,IAAAA,aAAa,EAAE,WAHuB;AAItCC,IAAAA,YAAY,EAAEV,GAAG,CAACM,MAAM,CAACK,OAAR,CAJqB;AAKtCC,IAAAA,aAAa,EAAEZ,GAAG,CAAC,CAAD;AALoB,GAAxC;AAAA,CADS,EAQT;AAAA,MAAGa,IAAH,SAAGA,IAAH;AAAA,SAAe;AACbC,IAAAA,OAAO,EAAED,IAAI,KAAK,OAAT,eAAwBb,GAAG,CAAC,CAAD,CAA3B,gBAAwCA,GAAG,CAAC,CAAD,CAA3C,CADI;AAEbe,IAAAA,QAAQ,EAAEF,IAAI,KAAK,OAAT,GAAmBb,GAAG,CAAC,EAAD,CAAtB,GAA6BA,GAAG,CAAC,CAAD,CAF7B;AAGbgB,IAAAA,UAAU,EAAEH,IAAI,KAAK,OAAT,GAAmBb,GAAG,CAAC,EAAD,CAAtB,GAA6BA,GAAG,CAAC,EAAD;AAH/B,GAAf;AAAA,CARS;AAaT;AACA;AAAA,MAAGiB,KAAH,SAAGA,KAAH;AAAA,MAAUC,eAAV,SAAUA,eAAV;AAAA,MAA2Bd,KAA3B,SAA2BA,KAA3B;AAAA,SAAwC;AACtCa,IAAAA,KAAK,EAAEhB,MAAM,CAAC,OAAD,EAAUgB,KAAV,CAAN,CAAuBb,KAAvB,CAD+B;AAEtCc,IAAAA,eAAe,EAAEjB,MAAM,CAAC,OAAD,EAAUiB,eAAV,CAAN,CAAiCd,KAAjC;AAFqB,GAAxC;AAAA,CAdS,CAAX;AAoBAF,KAAK,CAACiB,YAAN,GAAqB;AACnBN,EAAAA,IAAI,EAAE;AADa,CAArB;AAIA,eAAeX,KAAf","sourcesContent":["import styled from 'styled-components';\nimport { rem, themed } from '@heathmont/moon-utils';\nimport { ColorProps } from '@heathmont/moon-themes';\n\nexport type BadgeProps = {\n  color?: ColorProps;\n  backgroundColor?: ColorProps;\n  size?: 'xsmall' | 'small';\n};\n\nconst Badge = styled.span<BadgeProps>(\n  ({ theme: { fontWeight, radius } }) => ({\n    display: 'flex',\n    fontWeight: fontWeight.semibold,\n    textTransform: 'uppercase',\n    borderRadius: rem(radius.largest),\n    letterSpacing: rem(1),\n  }),\n  ({ size }) => ({\n    padding: size === 'small' ? `0 ${rem(8)}` : `0 ${rem(4)}`,\n    fontSize: size === 'small' ? rem(10) : rem(8),\n    lineHeight: size === 'small' ? rem(16) : rem(12),\n  }),\n  /* If a color or backgroundColor is set, override styles. */\n  ({ color, backgroundColor, theme }) => ({\n    color: themed('color', color)(theme),\n    backgroundColor: themed('color', backgroundColor)(theme),\n  })\n);\n\nBadge.defaultProps = {\n  size: 'xsmall',\n};\n\nexport default Badge;\n"],"file":"Badge.js"}