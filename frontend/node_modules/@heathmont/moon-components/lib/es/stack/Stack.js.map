{"version":3,"sources":["../../../src/stack/Stack.ts"],"names":["styled","themed","stackMixin","Stack","div","theme","space"],"mappings":"AAAA,OAAOA,MAAP,MAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AAGA,OAAOC,UAAP,MAAuB,0BAAvB;AAeA,IAAMC,KAAK,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,GAA0B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,wBAAUC,KAAV;AAAA,MAAUA,KAAV,2BAAkB,SAAlB;AAAA,SACnCJ,UAAU,CAACD,MAAM,CAAC,OAAD,EAAUK,KAAV,CAAN,CAAuBD,KAAvB,CAAD,CADyB;AAAA,CAA1B,CAAX;AAGA,eAAeF,KAAf","sourcesContent":["import styled, { CSSObject } from 'styled-components';\nimport { themed } from '@heathmont/moon-utils';\nimport { SpaceProps } from '@heathmont/moon-themes';\n\nimport stackMixin from '../stackMixin/stackMixin';\n\ntype StackSpace = CSSObject['marginTop'] | CSSObject['gridGap'];\n\nexport type StackProps = {\n  /**\n   * Excepts a string value, number or a theme key.\n   *\n   * Theme keys are returned as a `rem`-based unit.\n   *\n   * e.g. `<Stack space=\"large\" />` returns `space.large` as a rem unit.\n   */\n  space?: SpaceProps | StackSpace;\n};\n\nconst Stack = styled.div<StackProps>(({ theme, space = 'default' }) =>\n  stackMixin(themed('space', space)(theme)));\n\nexport default Stack;\n"],"file":"Stack.js"}