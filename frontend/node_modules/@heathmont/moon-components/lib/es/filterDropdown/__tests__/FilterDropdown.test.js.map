{"version":3,"sources":["../../../../src/filterDropdown/__tests__/FilterDropdown.test.tsx"],"names":["React","act","create","sportsbetDark","ThemeProvider","FilterDropdown","renderWithTheme","component","describe","test","filterDropdown","expect","toMatchSnapshot","onSearchChangeMock","jest","fn","beforeAll","searchInput","root","findByType","props","onChange","target","value","toHaveBeenCalledWith"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA+C,qBAA/C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,wBAA7C;AACA,OAAO,wBAAP;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD;AAAA,sBACtB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ;AAAtB,KAAsCI,SAAtC,CADsB;AAAA,CAAxB;;AAIAC,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,IAAI,CAAC,oBAAD,EAAuB,YAAM;AAC/B,QAAMC,cAAc,GAAGR,MAAM,CAC3BI,eAAe,eACb,oBAAC,cAAD;AACE,MAAA,iBAAiB,EAAC,sBADpB;AAEE,MAAA,cAAc,EAAE,0BAAM,CAAE;AAF1B,MADa,CADY,CAA7B;AASAK,IAAAA,MAAM,CAACD,cAAD,CAAN,CAAuBE,eAAvB;AACD,GAXG,CAAJ;AAaAH,EAAAA,IAAI,CAAC,8BAAD,EAAiC,YAAM;AACzC,QAAMC,cAAc,GAAGR,MAAM,CAACI,eAAe,eAAC,oBAAC,cAAD,OAAD,CAAhB,CAA7B;AAEAK,IAAAA,MAAM,CAACD,cAAD,CAAN,CAAuBE,eAAvB;AACD,GAJG,CAAJ;AAMAJ,EAAAA,QAAQ,CAAC,0CAAD,EAA6C,YAAM;AACzD,QAAMK,kBAAkB,GAAGC,IAAI,CAACC,EAAL,EAA3B;AACA,QAAIL,cAAJ;AAEAM,IAAAA,SAAS,CAAC,YAAM;AACdN,MAAAA,cAAc,GAAGR,MAAM,CACrBI,eAAe,eACb,oBAAC,cAAD;AACE,QAAA,iBAAiB,EAAC,sBADpB;AAEE,QAAA,cAAc,EAAEO;AAFlB,QADa,CADM,CAAvB;AAQD,KATQ,CAAT;AAWAL,IAAAA,QAAQ,CAAC,gCAAD,EAAmC,YAAM;AAC/CQ,MAAAA,SAAS,CAAC,YAAM;AACd,YAAMC,WAAW,GAAGP,cAAc,CAACQ,IAAf,CAAoBC,UAApB,CAA+B,OAA/B,CAApB;AACAlB,QAAAA,GAAG,CAAC;AAAA,iBACFgB,WAAW,CAACG,KAAZ,CAAkBC,QAAlB,CAA2B;AAAEC,YAAAA,MAAM,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAV,WAA3B,CADE;AAAA,SAAD,CAAH;AAED,OAJQ,CAAT;AAMAd,MAAAA,IAAI,CAAC,yCAAD,EAA4C,YAAM;AACpDE,QAAAA,MAAM,CAACE,kBAAD,CAAN,CAA2BW,oBAA3B,CAAgD,aAAhD;AACD,OAFG,CAAJ;AAGD,KAVO,CAAR;AAWD,GA1BO,CAAR;AA2BD,CA/CO,CAAR","sourcesContent":["import React from 'react';\nimport { act, create, ReactTestRenderer } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport FilterDropdown from '../FilterDropdown';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('FilterDropdown', () => {\n  test('renders by default', () => {\n    const filterDropdown = create(\n      renderWithTheme(\n        <FilterDropdown\n          searchPlaceholder=\"Search for a name...\"\n          onSearchChange={() => {}}\n        />,\n      ),\n    );\n\n    expect(filterDropdown).toMatchSnapshot();\n  });\n\n  test('renders without search input', () => {\n    const filterDropdown = create(renderWithTheme(<FilterDropdown />));\n\n    expect(filterDropdown).toMatchSnapshot();\n  });\n\n  describe('when renders with onSearchChange handler', () => {\n    const onSearchChangeMock = jest.fn();\n    let filterDropdown: ReactTestRenderer;\n\n    beforeAll(() => {\n      filterDropdown = create(\n        renderWithTheme(\n          <FilterDropdown\n            searchPlaceholder=\"Search for a name...\"\n            onSearchChange={onSearchChangeMock}\n          />,\n        ),\n      );\n    });\n\n    describe('and then changing search input', () => {\n      beforeAll(() => {\n        const searchInput = filterDropdown.root.findByType('input');\n        act(() =>\n          searchInput.props.onChange({ target: { value: 'searchValue' } }));\n      });\n\n      test('calls onSearchChange handler with value', () => {\n        expect(onSearchChangeMock).toHaveBeenCalledWith('searchValue');\n      });\n    });\n  });\n});\n"],"file":"FilterDropdown.test.js"}