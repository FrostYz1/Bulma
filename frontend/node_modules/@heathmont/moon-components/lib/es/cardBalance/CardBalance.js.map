{"version":3,"sources":["../../../src/cardBalance/CardBalance.tsx"],"names":["React","styled","rem","Stack","Unit","abbr","cursor","textDecoration","fontSize","lineHeight","Title","p","margin","Text","color","theme","trunks","Balance","from","currency","value","unitTitle","unit","CardBalance","badge"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,uBAApB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;AAcA;AACA;AACA;AACA,IAAMC,IAAI,GAAGH,MAAM,CAACI,IAAV;AAAA;AAAA;AAAA,GAAe;AACvBC,EAAAA,MAAM,EAAE,MADe;AAEvBC,EAAAA,cAAc,EAAE,MAFO;AAGvBC,EAAAA,QAAQ,EAAEN,GAAG,CAAC,EAAD,CAHU;AAIvBO,EAAAA,UAAU,EAAEP,GAAG,CAAC,EAAD;AAJQ,CAAf,CAAV;AAOA,IAAMQ,KAAK,GAAGT,MAAM,CAACU,CAAV;AAAA;AAAA;AAAA,GAAY;AACrBC,EAAAA,MAAM,EAAE,CADa;AAErBJ,EAAAA,QAAQ,EAAEN,GAAG,CAAC,EAAD,CAFQ;AAGrBO,EAAAA,UAAU,EAAEP,GAAG,CAAC,EAAD;AAHM,CAAZ,CAAX;AAMA,IAAMW,IAAI,GAAGZ,MAAM,CAACU,CAAV;AAAA;AAAA;AAAA,GAAY;AAAA,MAAYG,KAAZ,QAAGC,KAAH,CAAYD,KAAZ;AAAA,SAA2B;AAC/CF,IAAAA,MAAM,EAAE,CADuC;AAE/CE,IAAAA,KAAK,EAAEA,KAAK,CAACE,MAAN,CAAa,GAAb,CAFwC;AAG/CR,IAAAA,QAAQ,EAAEN,GAAG,CAAC,EAAD,CAHkC;AAI/CO,IAAAA,UAAU,EAAEP,GAAG,CAAC,EAAD;AAJgC,GAA3B;AAAA,CAAZ,CAAV;;AAOA,IAAMe,OAAwC,GAAG,SAA3CA,OAA2C;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,sBAC7C,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,KAAK,EAAE;AAA3B,kBACE,oBAAC,IAAD,QAAOA,IAAI,CAACC,QAAZ,CADF,eAGE,oBAAC,KAAD,kBACMD,IAAI,CAACE,KADX,qBAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,IAAI,CAACG,SAAL,IAAkBH,IAAI,CAACC;AAApC,KAA+CD,IAAI,CAACI,IAApD,CAFF,CAHF,CAD6C;AAAA,CAAjD;AAWA;AACA;AACA;;;AACA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C;AAAA,MAAGL,IAAH,SAAGA,IAAH;AAAA,MAASM,KAAT,SAASA,KAAT;AAAA,SAC7CA,KAAK,gBACJ,oBAAC,KAAD,QACGA,KAAK,iBAAI,kCAAOA,KAAP,CADZ,eAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEN;AAAf,IAHF,CADI,gBAOJ,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA;AAAf,IAR4C;AAAA,CAAhD;;AAaA,eAAeK,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { rem } from '@heathmont/moon-utils';\n\nimport Stack from '../stack/Stack';\n\ntype BalanceType = {\n  currency: string;\n  value: string;\n  unit: string;\n  unitTitle?: string;\n};\n\ntype CardBalanceProps = {\n  from: BalanceType;\n  badge?: JSX.Element;\n};\n\n/**\n * Styles\n */\nconst Unit = styled.abbr({\n  cursor: 'help',\n  textDecoration: 'none',\n  fontSize: rem(16),\n  lineHeight: rem(24),\n});\n\nconst Title = styled.p({\n  margin: 0,\n  fontSize: rem(32),\n  lineHeight: rem(40),\n});\n\nconst Text = styled.p(({ theme: { color } }) => ({\n  margin: 0,\n  color: color.trunks[100],\n  fontSize: rem(16),\n  lineHeight: rem(24),\n}));\n\nconst Balance: React.FC<{ from: BalanceType }> = ({ from }) => (\n    <Stack as=\"section\" space={0}>\n      <Text>{from.currency}</Text>\n\n      <Title>\n        {`${from.value} `}\n        <Unit title={from.unitTitle || from.currency}>{from.unit}</Unit>\n      </Title>\n    </Stack>\n);\n\n/**\n * Component\n */\nconst CardBalance: React.FC<CardBalanceProps> = ({ from, badge }) =>\n  (badge ? (\n    <Stack>\n      {badge && <span>{badge}</span>}\n\n      <Balance from={from} />\n    </Stack>\n  ) : (\n    <Balance from={from} />\n  ));\n\nexport type { CardBalanceProps };\n\nexport default CardBalance;\n"],"file":"CardBalance.js"}