import React from 'react';
import { create } from 'react-test-renderer';
import 'jest-styled-components';
import { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';
import Link from '../Link';

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: sportsbetDark
  }, component);
};

describe('Link', function () {
  test('renders as a link by default', function () {
    var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
      href: "#test"
    }, "I look like a link")));
    expect(link).toMatchSnapshot();
  });
  test('renders as a button if prop as="button" was passed', function () {
    var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
      as: "button"
    }, "I look like a link, but really I'm a button")));
    expect(link).toMatchSnapshot();
  });
  test('renders as a anchor when `href` defined', function () {
    var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
      href: "#test"
    }, "I'm a link")));
    expect(link).toMatchSnapshot();
  });
  test('renders as a secondary', function () {
    var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
      href: "#test",
      secondary: true
    }, "I'm a secondary link")));
    expect(link).toMatchSnapshot();
  });
  test('renders as a optional', function () {
    var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
      href: "#test",
      optional: true
    }, "I'm an optiona; link")));
    expect(link).toMatchSnapshot();
  });
  describe('renders as disabled', function () {
    test('for anchor elements', function () {
      var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
        href: "#test",
        disabled: true
      }, "I'm a link")));
      expect(link).toMatchSnapshot();
    });
    test('for button elements', function () {
      var link = create(renderWithTheme( /*#__PURE__*/React.createElement(Link, {
        as: "button",
        disabled: true
      }, "I look like a link, but really I'm a button")));
      expect(link).toMatchSnapshot();
    });
  });
});
//# sourceMappingURL=link.test.js.map