{"version":3,"sources":["../../../../src/link/__tests__/link.test.tsx"],"names":["React","create","sportsbetDark","ThemeProvider","Link","renderWithTheme","component","describe","test","link","expect","toMatchSnapshot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,wBAAP;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,wBAA7C;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD;AAAA,sBACtB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ;AAAtB,KAAsCI,SAAtC,CADsB;AAAA,CAAxB;;AAIAC,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,IAAI,CAAC,8BAAD,EAAiC,YAAM;AACzC,QAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eAAC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,4BAAD,CADE,CAAnB;AAIAK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GANG,CAAJ;AAQAH,EAAAA,IAAI,CAAC,oDAAD,EAAuD,YAAM;AAC/D,QAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eACb,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT,qDADa,CADE,CAAnB;AAMAK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GARG,CAAJ;AAUAH,EAAAA,IAAI,CAAC,yCAAD,EAA4C,YAAM;AACpD,QAAMC,IAAI,GAAGR,MAAM,CAACI,eAAe,eAAC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,oBAAD,CAAhB,CAAnB;AAEAK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAJG,CAAJ;AAMAH,EAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAM;AACnC,QAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eACb,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,SAAS;AAA5B,8BADa,CADE,CAAnB;AAQAK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAVG,CAAJ;AAYAH,EAAAA,IAAI,CAAC,uBAAD,EAA0B,YAAM;AAClC,QAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eACb,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,QAAQ;AAA3B,8BADa,CADE,CAAnB;AAQAK,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAVG,CAAJ;AAYAJ,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,IAAAA,IAAI,CAAC,qBAAD,EAAwB,YAAM;AAChC,UAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eACb,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ;AAA3B,sBADa,CADE,CAAnB;AAQAK,MAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,KAVG,CAAJ;AAYAH,IAAAA,IAAI,CAAC,qBAAD,EAAwB,YAAM;AAChC,UAAMC,IAAI,GAAGR,MAAM,CACjBI,eAAe,eACb,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,QAAQ;AAA1B,uDADa,CADE,CAAnB;AAQAK,MAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,KAVG,CAAJ;AAWD,GAxBO,CAAR;AAyBD,CA1EO,CAAR","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\n\nimport Link from '../Link';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('Link', () => {\n  test('renders as a link by default', () => {\n    const link = create(\n      renderWithTheme(<Link href=\"#test\">I look like a link</Link>),\n    );\n\n    expect(link).toMatchSnapshot();\n  });\n\n  test('renders as a button if prop as=\"button\" was passed', () => {\n    const link = create(\n      renderWithTheme(\n        <Link as=\"button\">I look like a link, but really I'm a button</Link>,\n      ),\n    );\n\n    expect(link).toMatchSnapshot();\n  });\n\n  test('renders as a anchor when `href` defined', () => {\n    const link = create(renderWithTheme(<Link href=\"#test\">I'm a link</Link>));\n\n    expect(link).toMatchSnapshot();\n  });\n\n  test('renders as a secondary', () => {\n    const link = create(\n      renderWithTheme(\n        <Link href=\"#test\" secondary>\n          I'm a secondary link\n        </Link>,\n      ),\n    );\n\n    expect(link).toMatchSnapshot();\n  });\n\n  test('renders as a optional', () => {\n    const link = create(\n      renderWithTheme(\n        <Link href=\"#test\" optional>\n          I'm an optiona; link\n        </Link>,\n      ),\n    );\n\n    expect(link).toMatchSnapshot();\n  });\n\n  describe('renders as disabled', () => {\n    test('for anchor elements', () => {\n      const link = create(\n        renderWithTheme(\n          <Link href=\"#test\" disabled>\n            I'm a link\n          </Link>,\n        ),\n      );\n\n      expect(link).toMatchSnapshot();\n    });\n\n    test('for button elements', () => {\n      const link = create(\n        renderWithTheme(\n          <Link as=\"button\" disabled>\n            I look like a link, but really I'm a button\n          </Link>,\n        ),\n      );\n\n      expect(link).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"link.test.js"}