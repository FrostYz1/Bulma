{"version":3,"sources":["../../../../src/text/__tests__/text.test.tsx"],"names":["React","create","sportsbetDark","ThemeProvider","Text","renderWithTheme","component","describe","test","text","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\n\nimport Text from '../Text';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('Text', () => {\n  describe('Elements', () => {\n    test('renders as <p> if no \"as\" prop provided', () => {\n      const text = create(renderWithTheme(<Text>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('renders as an element if \"as\" prop provided', () => {\n      const text = create(renderWithTheme(<Text as=\"span\">Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n  });\n\n  describe('Sizes', () => {\n    test('renders default font size', () => {\n      const text = create(renderWithTheme(<Text>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('10rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={10}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('12rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={12}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('14rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={14}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('16rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={16}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('18rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={18}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('20rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={20}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('24rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={24}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('32rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={32}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('48rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={48}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('56rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={56}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('64rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={64}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    test('72rem size renders properly', () => {\n      const text = create(renderWithTheme(<Text size={72}>Text</Text>));\n      expect(text).toMatchSnapshot();\n    });\n\n    describe('Colors', () => {\n      test('renders default color', () => {\n        const text = create(renderWithTheme(<Text>Text</Text>));\n        expect(text).toMatchSnapshot();\n      });\n\n      test('renders with a color', () => {\n        const text = create(\n          renderWithTheme(<Text color=\"piccolo.100\">Text</Text>),\n        );\n        expect(text).toMatchSnapshot();\n      });\n    });\n\n    describe('Boldness', () => {\n      test('renders default boldness', () => {\n        const text = create(renderWithTheme(<Text>Text</Text>));\n        expect(text).toMatchSnapshot();\n      });\n\n      test('renders with semibold font weight', () => {\n        const text = create(renderWithTheme(<Text isBold>Text</Text>));\n        expect(text).toMatchSnapshot();\n      });\n    });\n  });\n});\n"],"file":"text.test.js"}