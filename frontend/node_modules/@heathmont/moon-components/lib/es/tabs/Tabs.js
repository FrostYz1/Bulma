function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import styled from 'styled-components';
import hideVisually from 'polished/lib/mixins/hideVisually';
import { rem, uniqueId } from '@heathmont/moon-utils';
import { useTheme } from '@heathmont/moon-themes';
import Reel from '../reel/Reel';
import { underlineOffset } from './private';
var TabNav = styled.nav.withConfig({
  displayName: "Tabs__TabNav",
  componentId: "sc-7gvh1d-0"
})({
  position: 'relative',
  width: '100%'
});
var SkipLink = styled.a.withConfig({
  displayName: "Tabs__SkipLink",
  componentId: "sc-7gvh1d-1"
})(function (_ref) {
  var _ref$theme = _ref.theme,
      color = _ref$theme.color,
      space = _ref$theme.space;
  return {
    position: 'absolute',
    zIndex: 1,
    padding: "0 ".concat(rem(space.small)),
    top: '50%',
    left: rem(space.small),
    transform: 'translateY(-50%)',
    color: color.bulma[100],
    backgroundColor: color.gohan[80],
    '&:not(:focus)': _objectSpread({}, hideVisually())
  };
});
/* 1. Include the indicator as part of the item's box-model. */

var TabList = styled(Reel.withComponent('ul')).withConfig({
  displayName: "Tabs__TabList",
  componentId: "sc-7gvh1d-2"
})(function (_ref2) {
  var theme = _ref2.theme;
  return {
    paddingBottom: "".concat(underlineOffset(theme), "px")
    /* [1] */

  };
});
var Tab = styled.li.withConfig({
  displayName: "Tabs__Tab",
  componentId: "sc-7gvh1d-3"
})({});

var Tabs = function Tabs(_ref3) {
  var id = _ref3.id,
      items = _ref3.items,
      dir = _ref3.dir;
  var autoId = id || "nav-skip-".concat(uniqueId()); // We render everything except null or undefined items
  // tab != null filters both

  var nonEmptyTabs = Array.isArray(items) ? items.filter(function (tab) {
    return tab != null;
  }) : [];

  var _useTheme = useTheme(),
      space = _useTheme.space;
  /* eslint-disable react/no-array-index-key */


  return /*#__PURE__*/React.createElement(TabNav, null, /*#__PURE__*/React.createElement(SkipLink, {
    href: "#".concat(autoId)
  }, "Skip to content"), /*#__PURE__*/React.createElement(TabList, {
    dir: dir,
    space: rem(space.medium)
  }, Array.isArray(nonEmptyTabs) && nonEmptyTabs.map(function (tab, index) {
    return /*#__PURE__*/React.createElement(Tab, {
      key: index
    }, tab);
  })), /*#__PURE__*/React.createElement("span", {
    id: autoId
  }));
  /* eslint-enable react/no-array-index-key */
};

export default Tabs;
//# sourceMappingURL=Tabs.js.map