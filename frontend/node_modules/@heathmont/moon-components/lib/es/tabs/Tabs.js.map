{"version":3,"sources":["../../../src/tabs/Tabs.tsx"],"names":["React","styled","hideVisually","rem","uniqueId","useTheme","Reel","underlineOffset","TabNav","nav","position","width","SkipLink","a","theme","color","space","zIndex","padding","small","top","left","transform","bulma","backgroundColor","gohan","TabList","withComponent","paddingBottom","Tab","li","Tabs","id","items","dir","autoId","nonEmptyTabs","Array","isArray","filter","tab","medium","map","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,SAASC,eAAT,QAAgC,WAAhC;AAEA,IAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,GAAc;AACxBC,EAAAA,QAAQ,EAAE,UADc;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAAd,CAAZ;AAKA,IAAMC,QAAQ,GAAGX,MAAM,CAACY,CAAV;AAAA;AAAA;AAAA,GAAY;AAAA,wBAAGC,KAAH;AAAA,MAAYC,KAAZ,cAAYA,KAAZ;AAAA,MAAmBC,KAAnB,cAAmBA,KAAnB;AAAA,SAAkC;AAC1DN,IAAAA,QAAQ,EAAE,UADgD;AAE1DO,IAAAA,MAAM,EAAE,CAFkD;AAG1DC,IAAAA,OAAO,cAAOf,GAAG,CAACa,KAAK,CAACG,KAAP,CAAV,CAHmD;AAI1DC,IAAAA,GAAG,EAAE,KAJqD;AAK1DC,IAAAA,IAAI,EAAElB,GAAG,CAACa,KAAK,CAACG,KAAP,CALiD;AAM1DG,IAAAA,SAAS,EAAE,kBAN+C;AAO1DP,IAAAA,KAAK,EAAEA,KAAK,CAACQ,KAAN,CAAY,GAAZ,CAPmD;AAQ1DC,IAAAA,eAAe,EAAET,KAAK,CAACU,KAAN,CAAY,EAAZ,CARyC;AAS1D,uCACKvB,YAAY,EADjB;AAT0D,GAAlC;AAAA,CAAZ,CAAd;AAcA;;AACA,IAAMwB,OAAO,GAAGzB,MAAM,CAACK,IAAI,CAACqB,aAAL,CAAmB,IAAnB,CAAD,CAAT;AAAA;AAAA;AAAA,GAAoC;AAAA,MAAGb,KAAH,SAAGA,KAAH;AAAA,SAAgB;AAC/Dc,IAAAA,aAAa,YAAKrB,eAAe,CAACO,KAAD,CAApB;AAAgC;;AADkB,GAAhB;AAAA,CAApC,CAAb;AAIA,IAAMe,GAAG,GAAG5B,MAAM,CAAC6B,EAAV;AAAA;AAAA;AAAA,GAAa,EAAb,CAAT;;AAQA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,QAAwB;AAAA,MAArBC,EAAqB,SAArBA,EAAqB;AAAA,MAAjBC,KAAiB,SAAjBA,KAAiB;AAAA,MAAVC,GAAU,SAAVA,GAAU;AACxD,MAAMC,MAAM,GAAGH,EAAE,uBAAgB5B,QAAQ,EAAxB,CAAjB,CADwD,CAExD;AACA;;AACA,MAAMgC,YAAY,GAAGC,KAAK,CAACC,OAAN,CAAcL,KAAd,IACjBA,KAAK,CAACM,MAAN,CAAa,UAACC,GAAD;AAAA,WAASA,GAAG,IAAI,IAAhB;AAAA,GAAb,CADiB,GAEjB,EAFJ;;AAIA,kBAAkBnC,QAAQ,EAA1B;AAAA,MAAQW,KAAR,aAAQA,KAAR;AAEA;;;AACA,sBACE,oBAAC,MAAD,qBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,aAAMmB,MAAN;AAAd,uBADF,eAEE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAED,GAAd;AAAmB,IAAA,KAAK,EAAE/B,GAAG,CAACa,KAAK,CAACyB,MAAP;AAA7B,KACGJ,KAAK,CAACC,OAAN,CAAcF,YAAd,KACIA,YAAY,CAACM,GAAb,CAAiB,UAACF,GAAD,EAAMG,KAAN;AAAA,wBAAgB,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA;AAAV,OAAkBH,GAAlB,CAAhB;AAAA,GAAjB,CAFP,CAFF,eAME;AAAM,IAAA,EAAE,EAAEL;AAAV,IANF,CADF;AAUA;AACD,CAtBD;;AAwBA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport hideVisually from 'polished/lib/mixins/hideVisually';\nimport { rem, uniqueId } from '@heathmont/moon-utils';\nimport { useTheme } from '@heathmont/moon-themes';\n\nimport Reel from '../reel/Reel';\n\nimport { underlineOffset } from './private';\n\nconst TabNav = styled.nav({\n  position: 'relative',\n  width: '100%',\n});\n\nconst SkipLink = styled.a(({ theme: { color, space } }) => ({\n  position: 'absolute',\n  zIndex: 1,\n  padding: `0 ${rem(space.small)}`,\n  top: '50%',\n  left: rem(space.small),\n  transform: 'translateY(-50%)',\n  color: color.bulma[100],\n  backgroundColor: color.gohan[80],\n  '&:not(:focus)': {\n    ...hideVisually(),\n  },\n}));\n\n/* 1. Include the indicator as part of the item's box-model. */\nconst TabList = styled(Reel.withComponent('ul'))(({ theme }) => ({\n  paddingBottom: `${underlineOffset(theme)}px` /* [1] */,\n}));\n\nconst Tab = styled.li({});\n\ntype TabsProps = {\n  id?: string;\n  items: any[];\n  dir?: 'ltr' | 'rtl' | 'auto';\n};\n\nconst Tabs: React.FC<TabsProps> = ({ id, items, dir }) => {\n  const autoId = id || `nav-skip-${uniqueId()}`;\n  // We render everything except null or undefined items\n  // tab != null filters both\n  const nonEmptyTabs = Array.isArray(items)\n    ? items.filter((tab) => tab != null)\n    : [];\n\n  const { space } = useTheme();\n\n  /* eslint-disable react/no-array-index-key */\n  return (\n    <TabNav>\n      <SkipLink href={`#${autoId}`}>Skip to content</SkipLink>\n      <TabList dir={dir} space={rem(space.medium)}>\n        {Array.isArray(nonEmptyTabs)\n          && nonEmptyTabs.map((tab, index) => <Tab key={index}>{tab}</Tab>)}\n      </TabList>\n      <span id={autoId} />\n    </TabNav>\n  );\n  /* eslint-enable react/no-array-index-key */\n};\n\nexport default Tabs;\n"],"file":"Tabs.js"}