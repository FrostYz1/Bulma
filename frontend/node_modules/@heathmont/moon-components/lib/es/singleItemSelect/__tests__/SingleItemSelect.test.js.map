{"version":3,"sources":["../../../../src/singleItemSelect/__tests__/SingleItemSelect.test.tsx"],"names":["React","act","create","sportsbetDark","ThemeProvider","SingleItemSelect","renderWithTheme","component","describe","test","singleItemSelect","label","value","expect","toMatchSnapshot","onChangeMock","jest","fn","beforeAll","input","root","findAllByType","props","onClick","preventDefault","toHaveBeenCalledWith"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { act, create, ReactTestRenderer } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport SingleItemSelect from '../SingleItemSelect';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('SingleItemSelect', () => {\n  test('renders by default', () => {\n    const singleItemSelect = create(\n      renderWithTheme(\n        <SingleItemSelect\n          onChange={() => {}}\n          value=\"\"\n          options={[\n            { label: 'Game 1', value: 1 },\n            { label: 'Game 2', value: 2 },\n            { label: 'Game 3', value: 3 },\n          ]}\n        />,\n      ),\n    );\n\n    expect(singleItemSelect).toMatchSnapshot();\n  });\n\n  test('renders with pre-selected value', () => {\n    const singleItemSelect = create(\n      renderWithTheme(\n        <SingleItemSelect\n          onChange={() => {}}\n          value={2}\n          options={[\n            { label: 'Game 1', value: 1 },\n            { label: 'Game 2', value: 2 },\n            { label: 'Game 3', value: 3 },\n          ]}\n        />,\n      ),\n    );\n\n    expect(singleItemSelect).toMatchSnapshot();\n  });\n\n  describe('when renders with onChange handler', () => {\n    const onChangeMock = jest.fn();\n    let singleItemSelect: ReactTestRenderer;\n\n    beforeAll(() => {\n      singleItemSelect = create(\n        renderWithTheme(\n          <SingleItemSelect\n            onChange={onChangeMock}\n            value={2}\n            options={[\n              { label: 'Game 1', value: 1 },\n              { label: 'Game 2', value: 2 },\n              { label: 'Game 3', value: 3 },\n            ]}\n          />,\n        ),\n      );\n    });\n\n    describe('and then clicking on the first option', () => {\n      beforeAll(() => {\n        const input = singleItemSelect.root.findAllByType('button')[0];\n        act(() => input.props.onClick({ preventDefault: () => {} }));\n      });\n\n      test('calls onChange handler with selected option', () => {\n        expect(onChangeMock).toHaveBeenCalledWith(1);\n      });\n    });\n  });\n});\n"],"file":"SingleItemSelect.test.js"}