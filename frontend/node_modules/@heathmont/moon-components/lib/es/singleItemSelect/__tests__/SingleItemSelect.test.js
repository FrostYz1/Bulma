import React from 'react';
import { act, create } from 'react-test-renderer';
import { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';
import 'jest-styled-components';
import SingleItemSelect from '../SingleItemSelect';

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: sportsbetDark
  }, component);
};

describe('SingleItemSelect', function () {
  test('renders by default', function () {
    var singleItemSelect = create(renderWithTheme( /*#__PURE__*/React.createElement(SingleItemSelect, {
      onChange: function onChange() {},
      value: "",
      options: [{
        label: 'Game 1',
        value: 1
      }, {
        label: 'Game 2',
        value: 2
      }, {
        label: 'Game 3',
        value: 3
      }]
    })));
    expect(singleItemSelect).toMatchSnapshot();
  });
  test('renders with pre-selected value', function () {
    var singleItemSelect = create(renderWithTheme( /*#__PURE__*/React.createElement(SingleItemSelect, {
      onChange: function onChange() {},
      value: 2,
      options: [{
        label: 'Game 1',
        value: 1
      }, {
        label: 'Game 2',
        value: 2
      }, {
        label: 'Game 3',
        value: 3
      }]
    })));
    expect(singleItemSelect).toMatchSnapshot();
  });
  describe('when renders with onChange handler', function () {
    var onChangeMock = jest.fn();
    var singleItemSelect;
    beforeAll(function () {
      singleItemSelect = create(renderWithTheme( /*#__PURE__*/React.createElement(SingleItemSelect, {
        onChange: onChangeMock,
        value: 2,
        options: [{
          label: 'Game 1',
          value: 1
        }, {
          label: 'Game 2',
          value: 2
        }, {
          label: 'Game 3',
          value: 3
        }]
      })));
    });
    describe('and then clicking on the first option', function () {
      beforeAll(function () {
        var input = singleItemSelect.root.findAllByType('button')[0];
        act(function () {
          return input.props.onClick({
            preventDefault: function preventDefault() {}
          });
        });
      });
      test('calls onChange handler with selected option', function () {
        expect(onChangeMock).toHaveBeenCalledWith(1);
      });
    });
  });
});
//# sourceMappingURL=SingleItemSelect.test.js.map