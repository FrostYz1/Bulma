{"version":3,"sources":["../../../../src/button/__tests__/button.test.tsx"],"names":["React","create","sportsbetDark","ThemeProvider","Button","renderWithTheme","component","describe","test","button","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\nimport 'jest-styled-components';\n\nimport Button from '../Button';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('Button', () => {\n  test('renders correctly', () => {\n    const button = create(\n      renderWithTheme(<Button variant=\"primary\">Primary Button</Button>),\n    );\n\n    expect(button).toMatchSnapshot();\n  });\n\n  test('renders as fullWidth', () => {\n    const button = create(\n      renderWithTheme(\n        <Button variant=\"primary\" fullWidth>\n          Full Width Primary Button\n        </Button>,\n      ),\n    );\n\n    expect(button).toMatchSnapshot();\n  });\n\n  test('renders as disabled', () => {\n    const button = create(\n      renderWithTheme(\n        <Button variant=\"primary\" disabled>\n          Disabled Primary Button\n        </Button>,\n      ),\n    );\n\n    expect(button).toMatchSnapshot();\n  });\n\n  test('renders as an anchor tag', () => {\n    const button = create(\n      renderWithTheme(\n        <Button variant=\"primary\" as=\"a\" href=\"#some-anchor\">\n          Primary Button (Anchor)\n        </Button>,\n      ),\n    );\n\n    expect(button).toMatchSnapshot();\n  });\n\n  describe('variants', () => {\n    test('renders as primary', () => {\n      const button = create(\n        renderWithTheme(<Button variant=\"primary\">Primary Button</Button>),\n      );\n\n      expect(button).toMatchSnapshot();\n    });\n\n    test('renders as highlight', () => {\n      const button = create(\n        renderWithTheme(<Button variant=\"highlight\">Secondary Button</Button>),\n      );\n\n      expect(button).toMatchSnapshot();\n    });\n\n    test('renders as secondary', () => {\n      const button = create(\n        renderWithTheme(<Button variant=\"secondary\">Secondary Button</Button>),\n      );\n\n      expect(button).toMatchSnapshot();\n    });\n\n    test('renders as default', () => {\n      const button = create(renderWithTheme(<Button>Default Button</Button>));\n\n      expect(button).toMatchSnapshot();\n    });\n\n    describe('variants MockStates', () => {\n      test('Primary renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"primary\" mockState=\"hover\">\n              Hover Primary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Primary renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"primary\" mockState=\"active\">\n              Active Primary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Highlight renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"highlight\" mockState=\"hover\">\n              Hover Highlight Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Highlight renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"highlight\" mockState=\"active\">\n              Active Highlight Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Secondary renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"secondary\" mockState=\"hover\">\n              Hover Secondary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Secondary renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"secondary\" mockState=\"active\">\n              Active Secondary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Default renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button mockState=\"hover\">Hover Default Button</Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Default renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button mockState=\"active\">Active Default Button</Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n    });\n  });\n\n  describe('variants', () => {\n    describe('variants MockStates', () => {\n      test('Highlight outline renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"highlight\" mockState=\"active\">\n              Active Primary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Secondary renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"secondary\" mockState=\"hover\">\n              Hover Primary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Secondary renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button variant=\"secondary\" mockState=\"active\">\n              Active Primary Button\n            </Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Default renders with hover', () => {\n        const button = create(\n          renderWithTheme(\n            <Button mockState=\"hover\">Hover Default Button</Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n\n      test('Default renders as active', () => {\n        const button = create(\n          renderWithTheme(\n            <Button mockState=\"active\">Active Default Button</Button>,\n          ),\n        );\n\n        expect(button).toMatchSnapshot();\n      });\n    });\n  });\n});\n"],"file":"button.test.js"}