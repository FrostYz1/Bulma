{"version":3,"sources":["../../../src/button/variants.ts"],"names":["buttonActive","buttonHover","buttonVariant","key","color","themedStyles","primary","goten","backgroundColor","piccolo","outline","secondary","bulma","hit","tertiary","border","highlight","whis","opacity","background","buttonShadow","space","boxShadow"],"mappings":"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","sourcesContent":["import { CSSObject } from 'styled-components';\nimport { Theme } from '@heathmont/moon-themes';\n\nimport { buttonActive, buttonHover } from './states';\n\ntype ButtonVariants = keyof ButtonVariantStyles;\n\ntype ButtonVariantStyles = {\n  primary: CSSObject;\n  secondary: CSSObject;\n  tertiary: CSSObject;\n  highlight: CSSObject;\n  default: CSSObject;\n};\n\n/**\n * Styles that extend `buttonBase` to change the button's cosmetic appearance.\n * Accessed via `buttonVariant(key)(theme)`.\n *\n * For usage guidelines, see the README.\n */\nconst buttonVariant = (key: ButtonVariants) => ({ color }: Theme) => {\n  const themedStyles: ButtonVariantStyles = {\n    primary: {\n      color: color.goten[100],\n      backgroundColor: color.piccolo[100],\n      ...buttonHover({\n        backgroundColor: color.piccolo[80],\n      }),\n      ...buttonActive({\n        backgroundColor: color.piccolo[120],\n        outline: 'none',\n      }),\n    },\n    secondary: {\n      color: color.bulma[100],\n      backgroundColor: color.hit[100],\n      ...buttonHover({\n        backgroundColor: color.hit[80],\n      }),\n      ...buttonActive({\n        backgroundColor: color.hit[120],\n        outline: 'none',\n      }),\n    },\n    tertiary: {\n      color: color.bulma[100],\n      backgroundColor: 'transparent',\n      border: `1px solid ${color.bulma[100]}`,\n      ...buttonHover({\n        backgroundColor: color.hit[80],\n      }),\n      ...buttonActive({\n        backgroundColor: color.hit[120],\n        outline: 'none',\n      }),\n    },\n    highlight: {\n      color: color.goten[100],\n      backgroundColor: color.whis[100],\n      ...buttonHover({\n        opacity: 0.9,\n      }),\n      ...buttonActive({\n        opacity: 0.8,\n        outline: 'none',\n      }),\n    },\n    default: {\n      color: color.bulma[100],\n      background: 'none',\n      ...buttonHover({\n        color: color.bulma[100],\n      }),\n      ...buttonActive({\n        color: color.bulma[100],\n        outline: 'none',\n      }),\n    },\n  };\n\n  return themedStyles[key];\n};\n\n/**\n * buttonShadow\n *\n * Removes user-agent `:focus` styles and generates a box-shadow using the\n * color provided.\n */\nexport const buttonShadow = (color: string) => ({\n  space,\n}: Theme): CSSObject => ({\n  outline: 'none',\n  boxShadow: `0 0 ${space.default}px ${color}`,\n});\n\nexport type { ButtonVariants };\nexport { buttonVariant };\n\nexport default { buttonVariant };\n"],"file":"variants.js"}