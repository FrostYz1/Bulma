var _excluded = ["children", "mockState", "progress", "oops", "success", "iconLeft", "iconRight", "size", "fullWidth"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { disabled, rem } from '@heathmont/moon-utils';
import { useTheme } from '@heathmont/moon-themes';
import Loader from '../loader/Loader';
import IconSuccess from '../private/icons/IconSuccess';
import { buttonVariant } from './variants';
import { buttonSize } from './size';
import { buttonMockStateClass, buttonHover, buttonActive } from './states';
import { oopsAnimation } from './oopsAnimation';
import { pulseAnimation } from './pulseAnimation';

/* eslint-enable @typescript-eslint/no-explicit-any */

/**
 * Component
 */
var StyledButton = styled.button.withConfig({
  displayName: "Button__StyledButton",
  componentId: "sc-1xtdszg-0"
})(function (_ref) {
  var _ref$theme = _ref.theme,
      border = _ref$theme.border,
      fontWeight = _ref$theme.fontWeight,
      opacity = _ref$theme.opacity,
      radius = _ref$theme.radius,
      transitionDuration = _ref$theme.transitionDuration,
      fullWidth = _ref.fullWidth;
  return _objectSpread({
    display: 'inline-block',
    width: fullWidth ? '100%' : '',
    minHeight: rem(24),
    fontFamily: 'inherit',
    // Prevents links rendering as system fonts.
    fontWeight: fontWeight.semibold,
    textDecoration: 'none',
    cursor: 'pointer',
    border: border,
    borderColor: 'transparent',
    borderRadius: rem(radius.largest),
    transition: "background-color ".concat(transitionDuration["default"], "s"),
    whiteSpace: 'nowrap'
  }, disabled(opacity.disabled));
}, function (_ref2) {
  var fullWidth = _ref2.fullWidth;
  return fullWidth && {
    position: 'relative'
  };
}, function (_ref3) {
  var variant = _ref3.variant,
      theme = _ref3.theme;
  return variant && buttonVariant(variant)(theme);
}, function (_ref4) {
  var size = _ref4.size,
      variant = _ref4.variant;
  return size && buttonSize(size)(variant);
}, function (_ref5) {
  var oops = _ref5.oops,
      color = _ref5.theme.color;
  return oops && [oopsAnimation, _objectSpread(_objectSpread({
    transform: 'translate3d(0, 0, 0)',
    backfaceVisibility: 'hidden',
    perspective: rem(1000),
    color: color.goten[100],
    backgroundColor: color.chiChi[100]
  }, buttonHover({
    backgroundColor: color.chiChi[100]
  })), buttonActive({
    backgroundColor: color.chiChi[100]
  }))];
}, function (_ref6) {
  var pulse = _ref6.pulse,
      color = _ref6.theme.color;
  return pulse && [{
    boxShadow: "0 0 0 0 ".concat(color.piccolo[100])
  }, pulseAnimation];
}, function (_ref7) {
  var iconLeft = _ref7.iconLeft,
      size = _ref7.size;
  return [iconLeft && size === 'xsmall' && {
    paddingLeft: rem(8)
  }, iconLeft && size === 'small' && {
    paddingLeft: rem(12)
  }, iconLeft && size === 'medium' && {
    paddingLeft: rem(16)
  }, iconLeft && size === 'large' && {
    paddingLeft: rem(16)
  }];
}, function (_ref8) {
  var iconRight = _ref8.iconRight,
      size = _ref8.size;
  return [iconRight && size === 'xsmall' && {
    paddingRight: rem(8)
  }, iconRight && size === 'small' && {
    paddingRight: rem(12)
  }, iconRight && size === 'medium' && {
    paddingRight: rem(16)
  }, iconRight && size === 'large' && {
    paddingRight: rem(16)
  }];
});
var InnerContainer = styled.div.withConfig({
  displayName: "Button__InnerContainer",
  componentId: "sc-1xtdszg-1"
})({
  display: 'grid',
  height: '100%',
  gridAutoFlow: 'column',
  alignItems: 'center',
  justifyContent: 'center',
  gap: rem(8)
});
var IconLeftWrapper = styled.span.withConfig({
  displayName: "Button__IconLeftWrapper",
  componentId: "sc-1xtdszg-2"
})(function (_ref9) {
  var size = _ref9.size,
      fullWidth = _ref9.fullWidth;
  return [size === 'xsmall' && {
    fontSize: rem(16),
    lineHeight: 1
  }, size === 'small' && {
    fontSize: rem(16),
    lineHeight: 1
  }, size === 'medium' && {
    fontSize: rem(20),
    lineHeight: 1
  }, size === 'large' && {
    fontSize: rem(24),
    lineHeight: 1
  }, fullWidth && size === 'xsmall' && {
    position: 'absolute',
    left: rem(8),
    top: rem(8)
  }, fullWidth && size === 'small' && {
    position: 'absolute',
    left: rem(12),
    top: rem(10)
  }, fullWidth && size === 'medium' && {
    position: 'absolute',
    left: rem(16),
    top: rem(12)
  }, fullWidth && size === 'large' && {
    position: 'absolute',
    left: rem(16),
    top: rem(12)
  }];
});
var IconRightWrapper = styled.span.withConfig({
  displayName: "Button__IconRightWrapper",
  componentId: "sc-1xtdszg-3"
})(function (_ref10) {
  var size = _ref10.size,
      fullWidth = _ref10.fullWidth;
  return [size === 'xsmall' && {
    fontSize: rem(16)
  }, size === 'small' && {
    fontSize: rem(16)
  }, size === 'medium' && {
    fontSize: rem(20),
    lineHeight: 1
  }, size === 'large' && {
    fontSize: rem(24),
    lineHeight: 1
  }, fullWidth && size === 'xsmall' && {
    position: 'absolute',
    right: rem(8),
    top: rem(8)
  }, fullWidth && size === 'small' && {
    position: 'absolute',
    right: rem(12),
    top: rem(10)
  }, fullWidth && size === 'medium' && {
    position: 'absolute',
    right: rem(16),
    top: rem(12)
  }, fullWidth && size === 'large' && {
    position: 'absolute',
    right: rem(16),
    top: rem(12)
  }];
});
var Button = forwardRef(function (props, ref) {
  var children = props.children,
      mockState = props.mockState,
      progress = props.progress,
      oops = props.oops,
      success = props.success,
      iconLeft = props.iconLeft,
      iconRight = props.iconRight,
      size = props.size,
      fullWidth = props.fullWidth,
      buttonProps = _objectWithoutProperties(props, _excluded);

  var _useTheme = useTheme(),
      color = _useTheme.color,
      space = _useTheme.space;

  var content = children;

  if (progress) {
    content = /*#__PURE__*/React.createElement("div", {
      style: {
        position: 'relative'
      }
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        visibility: 'hidden'
      }
    }, children), /*#__PURE__*/React.createElement("div", {
      style: {
        position: 'absolute',
        left: "calc(50% - ".concat(rem(space.small), ")"),
        top: 0,
        height: rem(space["default"])
      }
    }, /*#__PURE__*/React.createElement(Loader, {
      color: color.goten[100]
    })));
  }

  if (success) {
    content = /*#__PURE__*/React.createElement("div", {
      style: {
        position: 'relative'
      }
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        visibility: 'hidden'
      }
    }, children), /*#__PURE__*/React.createElement("div", {
      style: {
        position: 'absolute',
        left: "calc(50% - ".concat(rem(space.small), ")"),
        top: 0,
        height: rem(space["default"])
      }
    }, /*#__PURE__*/React.createElement(IconSuccess, null)));
  }

  return /*#__PURE__*/React.createElement(StyledButton, _extends({
    ref: ref,
    oops: oops,
    className: mockState && buttonMockStateClass(mockState),
    size: size,
    iconLeft: iconLeft,
    iconRight: iconRight,
    fullWidth: fullWidth
  }, buttonProps), /*#__PURE__*/React.createElement(InnerContainer, null, iconLeft && /*#__PURE__*/React.createElement(IconLeftWrapper, {
    size: size,
    fullWidth: fullWidth
  }, iconLeft), content, iconRight && /*#__PURE__*/React.createElement(IconRightWrapper, {
    size: size,
    fullWidth: fullWidth
  }, iconRight)));
});
Button.defaultProps = {
  variant: 'default',
  size: 'small'
};
export default Button;
//# sourceMappingURL=Button.js.map