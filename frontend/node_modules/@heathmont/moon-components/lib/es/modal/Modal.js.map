{"version":3,"sources":["../../../src/modal/Modal.tsx"],"names":["React","useEffect","useState","createPortal","styled","ModalOverlay","ModalContent","ModalWrapper","div","Modal","backgroundColor","borderRadius","buttonClose","content","className","clickOutsideClose","disableOverlay","handleClose","glassBackground","isOpen","padding","size","showUnmountAnimation","setShowUnmountAnimation","closeOnEscapeKeyDown","e","charCode","keyCode","closeAnimation","document","body","addEventListener","cleanup","removeEventListener","setTimeout"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAmBA,IAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,sFAAlB;;AAQA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAazB;AAAA,MAZJC,eAYI,QAZJA,eAYI;AAAA,MAXJC,YAWI,QAXJA,YAWI;AAAA,MAVJC,WAUI,QAVJA,WAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,iBAOI,QAPJA,iBAOI;AAAA,MANJC,cAMI,QANJA,cAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,IACI,QADJA,IACI;;AACJ,kBAAwDnB,QAAQ,CAAC,KAAD,CAAhE;AAAA;AAAA,MAAOoB,oBAAP;AAAA,MAA6BC,uBAA7B;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAY;AACvC,QAAI,CAACA,CAAC,CAACC,QAAF,IAAcD,CAAC,CAACE,OAAjB,MAA8B,EAAlC,EAAsC;AACpCC,MAAAA,cAAc;AACf;AACF,GAJD;;AAMA3B,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,SAA/B,EAA0CP,oBAA1C;AACA,WAAO,SAASQ,OAAT,GAAmB;AACxBH,MAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,SAAlC,EAA6CT,oBAA7C;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BL,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAW,IAAAA,UAAU,CAAC,YAAM;AACfX,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAN,MAAAA,WAAW,IAAIA,WAAW,EAA1B;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAND;;AAQA,MAAI,CAACE,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,sBACE,0CACGhB,YAAY,eACX,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEW;AAAzB,kBACE,oBAAC,YAAD;AACE,IAAA,iBAAiB,EAAEC,iBADrB;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,eAAe,EAAEE,eAHnB;AAIE,IAAA,WAAW,EAAEU,cAJf;AAKE,IAAA,oBAAoB,EAAEN;AALxB,IADF,eAQE,oBAAC,YAAD;AACE,IAAA,eAAe,EAAEZ,eADnB;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,WAAW,EAAEe,cALf;AAME,IAAA,eAAe,EAAEV,eANnB;AAOE,IAAA,OAAO,EAAEE,OAPX;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,oBAAoB,EAAEC;AATxB,IARF,CADW,EAqBXO,QAAQ,CAACC,IArBE,CADf,CADF;AA2BD,CApED;;AAsEA,eAAerB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport ModalOverlay from './ModalOverlay';\nimport ModalContent from './ModalContent';\nimport { ColorProps } from '@heathmont/moon-themes';\n\ntype Props = {\n  backgroundColor?: ColorProps;\n  borderRadius?: string | number;\n  buttonClose?: boolean;\n  content?: React.ReactNode;\n  className?: string;\n  clickOutsideClose?: boolean;\n  disableOverlay?: boolean;\n  glassBackground?: boolean;\n  handleClose?: () => void;\n  isOpen?: boolean;\n  padding?: string | number;\n  size?: 'small' | 'medium' | 'large';\n  showAnimation: boolean;\n};\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  inset: 0;\n`;\n\nconst Modal: React.FC<Props> = ({\n  backgroundColor,\n  borderRadius,\n  buttonClose,\n  content,\n  className,\n  clickOutsideClose,\n  disableOverlay,\n  handleClose,\n  glassBackground,\n  isOpen,\n  padding,\n  size,\n}) => {\n  const [showUnmountAnimation, setShowUnmountAnimation] = useState(false);\n\n  const closeOnEscapeKeyDown = (e: any) => {\n    if ((e.charCode || e.keyCode) === 27) {\n      closeAnimation();\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', closeOnEscapeKeyDown);\n    return function cleanup() {\n      document.body.removeEventListener('keydown', closeOnEscapeKeyDown);\n    };\n  }, []);\n\n  const closeAnimation = () => {\n    setShowUnmountAnimation(true);\n    setTimeout(() => {\n      setShowUnmountAnimation(false);\n      handleClose && handleClose();\n    }, 200);\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <>\n      {createPortal(\n        <ModalWrapper className={className}>\n          <ModalOverlay\n            clickOutsideClose={clickOutsideClose}\n            disableOverlay={disableOverlay}\n            glassBackground={glassBackground}\n            handleClose={closeAnimation}\n            showUnmountAnimation={showUnmountAnimation}\n          />\n          <ModalContent\n            backgroundColor={backgroundColor}\n            borderRadius={borderRadius}\n            buttonClose={buttonClose}\n            content={content}\n            handleClose={closeAnimation}\n            glassBackground={glassBackground}\n            padding={padding}\n            size={size}\n            showUnmountAnimation={showUnmountAnimation}\n          />\n        </ModalWrapper>,\n        document.body\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n"],"file":"Modal.js"}