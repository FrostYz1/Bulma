import React from 'react';
/**
 * Types & Settings
 */
declare type TextInputTypes = 'date' | 'datetime-local' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'url' | 'time' | 'url';
declare type TextInputProps = React.InputHTMLAttributes<HTMLInputElement> & {
    label?: string;
    type?: TextInputTypes;
    placeholder?: string;
    error?: boolean | string;
    rounded?: boolean;
    dir?: 'ltr' | 'rtl' | 'auto';
};
/**
 * Component
 *
 * 1. Leaving the placeholder as an empty string by default allows us to float
 *    the label when a user starts typing, even if a placeholder isn't defined.
 */
declare const TextInput: React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    label?: string | undefined;
    type?: "number" | "time" | "text" | "tel" | "url" | "email" | "search" | "date" | "datetime-local" | "password" | undefined;
    placeholder?: string | undefined;
    error?: string | boolean | undefined;
    rounded?: boolean | undefined;
    dir?: "auto" | "ltr" | "rtl" | undefined;
} & React.RefAttributes<HTMLInputElement>>;
export type { TextInputProps };
export default TextInput;
//# sourceMappingURL=TextInput.d.ts.map