"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchInputActive = exports.SearchInput = exports.SearchInputIcon = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

var _IconSearch = _interopRequireDefault(require("../../../private/icons/IconSearch"));

var _settings = require("./settings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var height = _settings.inputConfig.height,
    paddingX = _settings.inputConfig.paddingX,
    transition = _settings.inputConfig.transition;
var searchInputActive = ':focus:not(:placeholder-shown)';
var SearchInputIcon = (0, _styledComponents["default"])(_IconSearch["default"]).withConfig({
  displayName: "Input__SearchInputIcon",
  componentId: "lo7z5g-0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    zIndex: _settings.zIndex.searchIcon,
    color: theme.color.trunks[100],
    position: 'absolute',
    fontSize: (0, _moonUtils.rem)(theme.space["default"]),
    top: '50%',
    left: (0, _moonUtils.rem)(theme.space["default"]),
    transform: 'translateY(-50%)'
  };
});
exports.SearchInputIcon = SearchInputIcon;

var SearchInput = _styledComponents["default"].input.withConfig({
  displayName: "Input__SearchInput",
  componentId: "lo7z5g-1"
})(function (_ref2) {
  var theme = _ref2.theme;
  var fontSize = theme.base.fontSize;
  return _defineProperty({
    fontWeight: theme.fontWeight.normal,
    fontSize: (0, _moonUtils.rem)(fontSize),
    width: '100%',
    lineHeight: (0, _moonUtils.rem)(height, fontSize),
    border: 0,
    position: 'relative',
    paddingTop: 0,
    paddingRight: (0, _moonUtils.rem)(paddingX, fontSize),
    paddingBottom: 0,
    paddingLeft: (0, _moonUtils.rem)(paddingX + theme.space["default"] + theme.space.small, fontSize),
    textOverflow: 'ellipsis',
    overflow: 'hidden',
    borderRadius: (0, _moonUtils.rem)(theme.radius.largest),
    backgroundColor: theme.color.gohan[100],
    color: theme.color.trunks[100],
    zIndex: _settings.zIndex.searchInput,
    transition: "".concat(transition, ", max-width ease"),
    transitionDuration: "".concat(theme.transitionDuration["default"], "s"),
    '&::placeholder': {
      color: 'inherit'
    },
    '&:hover, &:focus': _defineProperty({
      color: theme.color.bulma[100]
    }, "+ ".concat(SearchInputIcon), {
      color: theme.color.piccolo[100]
    })
  }, "&".concat(searchInputActive), {
    zIndex: _settings.zIndex.searchInputActive,
    maxWidth: '100%'
  });
});

exports.SearchInput = SearchInput;
var SearchInputActive = "".concat(SearchInput).concat(searchInputActive);
exports.SearchInputActive = SearchInputActive;
//# sourceMappingURL=Input.js.map