"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResultsLink = exports.ResultsItemText = exports.resultsContent = exports.ResultsGroup = exports.ResultsItem = exports.Results = exports.resultsActive = exports.resultsInactive = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

var _settings = require("./settings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var resultsInactive = function resultsInactive(_ref) {
  var transitionDuration = _ref.transitionDuration;
  return {
    opacity: 0,
    visibility: 'hidden',
    transition: "visibility 0s linear ".concat(transitionDuration["default"], "s, opacity ").concat(transitionDuration["default"], "s")
  };
};

exports.resultsInactive = resultsInactive;

var resultsActive = function resultsActive(_ref2) {
  var transitionDuration = _ref2.transitionDuration;
  return {
    opacity: 1,
    visibility: 'visible',
    transition: "visibility 0s linear 0s, opacity ".concat(transitionDuration["default"], "s")
  };
};
/**
 * Search Results List
 */


exports.resultsActive = resultsActive;

var Results = _styledComponents["default"].ul.withConfig({
  displayName: "Results",
  componentId: "sc-1x2aoep-0"
})(function (_ref3) {
  var theme = _ref3.theme;
  return resultsInactive(theme);
}, function (_ref4) {
  var _ref4$theme = _ref4.theme,
      borderWidth = _ref4$theme.borderWidth,
      boxShadow = _ref4$theme.boxShadow,
      fontWeight = _ref4$theme.fontWeight,
      color = _ref4$theme.color,
      radius = _ref4$theme.radius,
      space = _ref4$theme.space;
  return {
    fontSize: 'inherit',
    fontWeight: fontWeight.normal,
    position: 'absolute',
    margin: 0,
    listStyleType: 'none',
    top: 0,
    left: 0,
    zIndex: _settings.zIndex.searchResults,
    width: '100%',
    padding: 0,
    paddingTop: (0, _moonUtils.em)(_settings.inputConfig.height + space.small),
    paddingBottom: (0, _moonUtils.em)(space.small),
    '&::before': {
      borderRadius: (0, _moonUtils.rem)(radius["default"]),
      borderWidth: borderWidth,
      content: "' '",
      position: 'absolute',
      height: '100%',
      width: '100%',
      backgroundColor: color.gohan[100],
      boxShadow: boxShadow,
      top: "-".concat(borderWidth, "px"),
      left: "-".concat(borderWidth, "px"),
      borderStyle: 'solid',
      borderColor: color.beerus[100],
      zIndex: -1
    }
  };
});
/**
 * Search Results List Item
 */


exports.Results = Results;

var ResultsItem = _styledComponents["default"].li.withConfig({
  displayName: "Results__ResultsItem",
  componentId: "sc-1x2aoep-1"
})(function (_ref5) {
  var color = _ref5.theme.color;
  return {
    margin: 0,
    listStyleType: 'none',
    color: color.trunks[100]
  };
});
/**
 * Results Group
 * Nested list of grouped search results, e.g. sports events or help articles.
 */


exports.ResultsItem = ResultsItem;

var ResultsGroup = _styledComponents["default"].ul.withConfig({
  displayName: "Results__ResultsGroup",
  componentId: "sc-1x2aoep-2"
})({
  margin: 0,
  padding: 0
});
/**
 * resultsContent
 * Internal layout of result list items/links.
 */


exports.ResultsGroup = ResultsGroup;

var resultsContent = function resultsContent(_ref6) {
  var space = _ref6.space;
  return {
    display: 'block',
    padding: "".concat((0, _moonUtils.em)(space.xsmall * 3), " ").concat((0, _moonUtils.em)(space["default"])),
    fontSize: (0, _moonUtils.em)(14),
    lineHeight: 1.2,
    textAlign: 'left',
    wordBreak: 'break-word'
  };
};
/**
 * ResultsItemText
 * Any text inside Results that isn't a link, should be wrapped with this.
 */


exports.resultsContent = resultsContent;

var ResultsItemText = _styledComponents["default"].span.withConfig({
  displayName: "Results__ResultsItemText",
  componentId: "sc-1x2aoep-3"
})(function (_ref7) {
  var theme = _ref7.theme;
  return resultsContent(theme);
});
/**
 * ResultsLink
 * Each result items interactive element wrapper.
 */


exports.ResultsItemText = ResultsItemText;

var ResultsLink = _styledComponents["default"].div.withConfig({
  displayName: "Results__ResultsLink",
  componentId: "sc-1x2aoep-4"
})(function (_ref8) {
  var theme = _ref8.theme;
  return [resultsContent(theme), {
    fontWeight: theme.fontWeight.normal,
    appearance: 'none',
    border: 0,
    backgroundColor: 'transparent',
    color: theme.color.bulma[100],
    textDecoration: 'none',
    cursor: 'pointer',
    '&:hover, &:focus': {
      backgroundColor: theme.color.goku[100]
    }
  }];
});

exports.ResultsLink = ResultsLink;
//# sourceMappingURL=Results.js.map