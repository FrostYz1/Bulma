{"version":3,"sources":["../../src/inlineMixin/inlineMixin.ts"],"names":["inlineMixin","space","justifyContent","display","flexWrap","overflow","alignItems","margin","listItemStyleTypeNone"],"mappings":";;;;;;;AAEA;;;;AAqBA;AACA;AACA;AACA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAClBC,KADkB,EAElBC,cAFkB;AAAA,SAGH;AACfC,IAAAA,OAAO,EAAE,MADM;AAEfC,IAAAA,QAAQ,EAAE,MAFK;AAGfC,IAAAA,QAAQ,EAAE,QAHK;AAIfH,IAAAA,cAAc,EAAEA,cAAc,IAAI,YAJnB;AAKfI,IAAAA,UAAU,EAAE,QALG;AAMfC,IAAAA,MAAM,EACJN,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GACKA,KAAK,GAAG,CAAT,GAAc,CAAC,CADnB,kBAEYA,KAFZ;AAE8B;AATjB;AAUf,aAAS;AACPM,MAAAA,MAAM,EACJN,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GACIA,KAAK,GAAG,CADZ,kBAEYA,KAFZ;AAEyB;;AAJpB,KAVM;;AAgBf;AACA,cAAUO;AAjBK,GAHG;AAAA,CAApB;;eAuBeR,W","sourcesContent":["import { CSSObject } from 'styled-components';\n\nimport listItemStyleTypeNone from '../listItemStyleTypeNone/listItemStyleTypeNone';\n\nexport type JustifyContent =\n  | 'center'\n  | 'start'\n  | 'end'\n  | 'flex-start'\n  | 'flex-end'\n  | 'left'\n  | 'right'\n  | 'normal'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'\n  | 'stretch'\n  | 'safe center'\n  | 'unsafe center'\n  | 'inherit'\n  | 'initial'\n  | 'unset';\n\n/**\n * 1. If we don't know the exact value (i.e. not a `number`), use `calc` and let\n *    the browser calculate spacing.\n */\nconst inlineMixin = (\n  space: any,\n  justifyContent?: JustifyContent,\n): CSSObject => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  overflow: 'hidden',\n  justifyContent: justifyContent || 'flex-start',\n  alignItems: 'center',\n  margin:\n    space && typeof space === 'number'\n      ? (space / 2) * -1\n      : `calc(${space} / 2 * -1)` /* [1] */,\n  '& > *': {\n    margin:\n      space && typeof space === 'number'\n        ? space / 2\n        : `calc(${space} / 2)` /* [1] */,\n  },\n  /* Ensure direct child list-items render without bullets */\n  '& > li': listItemStyleTypeNone,\n});\n\nexport default inlineMixin;\n"],"file":"inlineMixin.js"}