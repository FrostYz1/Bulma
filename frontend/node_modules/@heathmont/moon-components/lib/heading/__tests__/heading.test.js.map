{"version":3,"sources":["../../../src/heading/__tests__/heading.test.tsx"],"names":["renderWithTheme","component","sportsbetDark","describe","test","heading","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\n\nimport Heading from '../Heading';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\ndescribe('Heading', () => {\n  describe('Elements', () => {\n    test('renders as <h3> if no \"as\" prop provided', () => {\n      const heading = create(renderWithTheme(<Heading>Text</Heading>));\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('renders as an element if \"as\" prop provided', () => {\n      const heading = create(\n        renderWithTheme(<Heading as=\"h6\">Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n  });\n\n  describe('Sizes', () => {\n    test('renders default font size', () => {\n      const heading = create(renderWithTheme(<Heading>Heading</Heading>));\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('16rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={16}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('18rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={18}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('20rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={20}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('24rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={24}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('32rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={32}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('48rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={48}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('56rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={56}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('64rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={64}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    test('72rem size renders properly', () => {\n      const heading = create(\n        renderWithTheme(<Heading size={72}>Heading</Heading>),\n      );\n      expect(heading).toMatchSnapshot();\n    });\n\n    describe('Colors', () => {\n      test('renders default color', () => {\n        const heading = create(renderWithTheme(<Heading>Heading</Heading>));\n        expect(heading).toMatchSnapshot();\n      });\n\n      test('renders with a color', () => {\n        const heading = create(\n          renderWithTheme(<Heading color=\"piccolo.100\">Heading</Heading>),\n        );\n        expect(heading).toMatchSnapshot();\n      });\n    });\n\n    describe('Boldness', () => {\n      test('renders default boldness', () => {\n        const heading = create(renderWithTheme(<Heading>Heading</Heading>));\n        expect(heading).toMatchSnapshot();\n      });\n\n      test('renders with regular font weight', () => {\n        const heading = create(\n          renderWithTheme(<Heading isRegular>Heading</Heading>),\n        );\n        expect(heading).toMatchSnapshot();\n      });\n    });\n  });\n});\n"],"file":"heading.test.js"}