"use strict";

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = require("react-test-renderer");

var _moonThemes = require("@heathmont/moon-themes");

require("jest-styled-components");

var _CheckboxMultiselect = _interopRequireDefault(require("../CheckboxMultiselect"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var renderWithTheme = function renderWithTheme(component) {
  return /*#__PURE__*/_react["default"].createElement(_moonThemes.ThemeProvider, {
    theme: _moonThemes.sportsbetDark
  }, component);
};

describe('CheckboxMultiselect', function () {
  test('renders by default', function () {
    var checkboxMultiselect = (0, _reactTestRenderer.create)(renderWithTheme( /*#__PURE__*/_react["default"].createElement(_CheckboxMultiselect["default"], {
      onChange: function onChange() {},
      value: [],
      options: [{
        label: 'Game 1',
        value: 1,
        id: '1'
      }, {
        label: 'Game 2',
        value: 2,
        id: '2'
      }, {
        label: 'Game 3',
        value: 3,
        id: '3'
      }]
    })));
    expect(checkboxMultiselect).toMatchSnapshot();
  });
  test('renders with pre-selected value', function () {
    var checkboxMultiselect = (0, _reactTestRenderer.create)(renderWithTheme( /*#__PURE__*/_react["default"].createElement(_CheckboxMultiselect["default"], {
      onChange: function onChange() {},
      value: [1, 2],
      options: [{
        label: 'Game 1',
        value: 1,
        id: '1'
      }, {
        label: 'Game 2',
        value: 2,
        id: '2'
      }, {
        label: 'Game 3',
        value: 3,
        id: '3'
      }]
    })));
    expect(checkboxMultiselect).toMatchSnapshot();
  });
  describe('when renders with onChange handler', function () {
    var onChangeMock = jest.fn();
    var checkboxMultiselect;
    beforeAll(function () {
      checkboxMultiselect = (0, _reactTestRenderer.create)(renderWithTheme( /*#__PURE__*/_react["default"].createElement(_CheckboxMultiselect["default"], {
        onChange: onChangeMock,
        value: [],
        options: [{
          label: 'Game 1',
          value: 1,
          id: '1'
        }, {
          label: 'Game 2',
          value: 2,
          id: '2'
        }, {
          label: 'Game 3',
          value: 3,
          id: '3'
        }]
      })));
    });
    describe('and then clicking on the first option', function () {
      beforeAll(function () {
        var input = checkboxMultiselect.root.findAllByType('input')[0];
        (0, _reactTestRenderer.act)(function () {
          return input.props.onChange({
            target: {
              checked: true
            }
          });
        });
      });
      test('calls onChange handler with selected option', function () {
        expect(onChangeMock).toHaveBeenCalledWith([1]);
      });
    });
  });
  test('renders with item count', function () {
    var checkboxMultiselect = (0, _reactTestRenderer.create)(renderWithTheme( /*#__PURE__*/_react["default"].createElement(_CheckboxMultiselect["default"], {
      onChange: function onChange() {},
      value: [],
      options: [{
        label: 'Game 1',
        value: 1,
        id: '1',
        count: 1
      }, {
        label: 'Game 2',
        value: 2,
        id: '2',
        count: 5
      }]
    })));
    var countItems = checkboxMultiselect.root.findAll(function (el) {
      return el.props['test-id'] === 'select-count';
    });
    expect(countItems).toBeDefined();
  });
});
//# sourceMappingURL=CheckboxMultiselect.test.js.map