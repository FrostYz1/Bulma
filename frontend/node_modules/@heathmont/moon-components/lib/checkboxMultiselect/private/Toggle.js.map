{"version":3,"sources":["../../../src/checkboxMultiselect/private/Toggle.tsx"],"names":["ToggleWrapper","styled","div","position","Header","paddingLeft","Body","Switch","button","open","theme","background","border","padding","transform","transition","transitionDuration","left","top","cursor","display","alignItems","justifyContent","Toggle","props","header","children","setOpen"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAMA,IAAMA,aAAa,GAAGC,6BAAOC,GAAV;AAAA;AAAA;AAAA,GAAc;AAC/BC,EAAAA,QAAQ,EAAE;AADqB,CAAd,CAAnB;;AAIA,IAAMC,MAAM,GAAGH,6BAAOC,GAAV;AAAA;AAAA;AAAA,GAAc;AACxBC,EAAAA,QAAQ,EAAE,UADc;AAExBE,EAAAA,WAAW,EAAE,oBAAI,EAAJ;AAFW,CAAd,CAAZ;;AAKA,IAAMC,IAAI,GAAGL,6BAAOC,GAAV;AAAA;AAAA;AAAA,GAAc;AACtBG,EAAAA,WAAW,EAAE,oBAAI,EAAJ;AADS,CAAd,CAAV;;AAIA,IAAME,MAAM,GAAGN,6BAAOO,MAAV;AAAA;AAAA;AAAA,GAAoC;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,SAAsB;AACpEC,IAAAA,UAAU,EAAE,MADwD;AAEpEC,IAAAA,MAAM,EAAE,MAF4D;AAGpEC,IAAAA,OAAO,EAAE,oBAAI,CAAJ,CAH2D;AAIpEC,IAAAA,SAAS,oCAA6BL,IAAI,GAAG,OAAH,GAAa,GAA9C,MAJ2D;AAKpEM,IAAAA,UAAU,sBAAeL,KAAK,CAACM,kBAAN,WAAf,WAL0D;AAMpEb,IAAAA,QAAQ,EAAE,UAN0D;AAOpEc,IAAAA,IAAI,EAAE,CAP8D;AAQpEC,IAAAA,GAAG,EAAE,KAR+D;AASpEC,IAAAA,MAAM,EAAE,SAT4D;AAUpEC,IAAAA,OAAO,EAAE,MAV2D;AAWpEC,IAAAA,UAAU,EAAE,QAXwD;AAYpEC,IAAAA,cAAc,EAAE;AAZoD,GAAtB;AAAA,CAApC,CAAZ;;AAeA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,CAACC,KAAD,EAAW;AAC/C,MAAQC,MAAR,GAA6BD,KAA7B,CAAQC,MAAR;AAAA,MAAgBC,QAAhB,GAA6BF,KAA7B,CAAgBE,QAAhB;;AACA,kBAAwB,qBAAS,KAAT,CAAxB;AAAA;AAAA,MAAOjB,IAAP;AAAA,MAAakB,OAAb;;AAEA,sBACE,gCAAC,aAAD,qBACE,gCAAC,MAAD,qBACE,gCAAC,MAAD;AAAQ,IAAA,IAAI,EAAElB,IAAd;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMkB,OAAO,CAAC,CAAClB,IAAF,CAAb;AAAA;AAA7B,kBACE,gCAAC,4BAAD;AAAkB,IAAA,KAAK,EAAC;AAAxB,IADF,CADF,EAIGgB,MAJH,CADF,EAOGhB,IAAI,iBAAI,gCAAC,IAAD,QAAOiB,QAAP,CAPX,CADF;AAWD,CAfD;;eAiBeH,M","sourcesContent":["import { IconChevronRight } from '@heathmont/moon-assets';\nimport { rem } from '@heathmont/moon-utils';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\ntype ToggleProps = {\n  header: JSX.Element;\n};\n\nconst ToggleWrapper = styled.div({\n  position: 'relative',\n});\n\nconst Header = styled.div({\n  position: 'relative',\n  paddingLeft: rem(36),\n});\n\nconst Body = styled.div({\n  paddingLeft: rem(36),\n});\n\nconst Switch = styled.button<{ open: boolean }>(({ open, theme }) => ({\n  background: 'none',\n  border: 'none',\n  padding: rem(2),\n  transform: `translateY(-50%) rotate(${open ? '90deg' : '0'})`,\n  transition: `transform ${theme.transitionDuration.default}s ease`,\n  position: 'absolute',\n  left: 0,\n  top: '50%',\n  cursor: 'pointer',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst Toggle: React.FC<ToggleProps> = (props) => {\n  const { header, children } = props;\n  const [open, setOpen] = useState(false);\n\n  return (\n    <ToggleWrapper>\n      <Header>\n        <Switch open={open} onClick={() => setOpen(!open)}>\n          <IconChevronRight color=\"trunks.100\" />\n        </Switch>\n        {header}\n      </Header>\n      {open && <Body>{children}</Body>}\n    </ToggleWrapper>\n  );\n};\n\nexport default Toggle;\n"],"file":"Toggle.js"}