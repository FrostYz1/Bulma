{"version":3,"sources":["../../../src/cardBalance/__tests__/balance.test.tsx"],"names":["renderWithTheme","component","sportsbetDark","describe","test","balance","currency","value","unit","unitTitle","expect","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAMA;;AACA;;;;AALA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD;AAAA,sBACtB,gCAAC,yBAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,KAAsCD,SAAtC,CADsB;AAAA,CAAxB;;AAOAE,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BC,EAAAA,IAAI,CAAC,mBAAD,EAAsB,YAAM;AAC9B,QAAMC,OAAO,GAAG,+BACdL,eAAe,eACb,gCAAC,uBAAD;AACE,MAAA,IAAI,EAAE;AACJM,QAAAA,QAAQ,EAAE,SADN;AAEJC,QAAAA,KAAK,EAAE,SAFH;AAGJC,QAAAA,IAAI,EAAE,MAHF;AAIJC,QAAAA,SAAS,EAAE;AAJP;AADR,MADa,CADD,CAAhB;AAaAC,IAAAA,MAAM,CAACL,OAAD,CAAN,CAAgBM,eAAhB;AACD,GAfG,CAAJ;AAiBAP,EAAAA,IAAI,CAAC,gDAAD,EAAmD,YAAM;AAC3D,QAAMC,OAAO,GAAG,+BACdL,eAAe,eACb,gCAAC,uBAAD;AACE,MAAA,IAAI,EAAE;AACJM,QAAAA,QAAQ,EAAE,SADN;AAEJC,QAAAA,KAAK,EAAE,SAFH;AAGJC,QAAAA,IAAI,EAAE;AAHF;AADR,MADa,CADD,CAAhB;AAYAE,IAAAA,MAAM,CAACL,OAAD,CAAN,CAAgBM,eAAhB;AACD,GAdG,CAAJ;AAgBAP,EAAAA,IAAI,CAAC,gCAAD,EAAmC,YAAM;AAC3C,QAAMC,OAAO,GAAG,+BACdL,eAAe,eACb,gCAAC,uBAAD;AACE,MAAA,KAAK,eAAE,gCAAC,iBAAD,iBADT;AAEE,MAAA,IAAI,EAAE;AACJM,QAAAA,QAAQ,EAAE,SADN;AAEJC,QAAAA,KAAK,EAAE,SAFH;AAGJC,QAAAA,IAAI,EAAE,MAHF;AAIJC,QAAAA,SAAS,EAAE;AAJP;AAFR,MADa,CADD,CAAhB;AAcAC,IAAAA,MAAM,CAACL,OAAD,CAAN,CAAgBM,eAAhB;AACD,GAhBG,CAAJ;AAiBD,CAnDO,CAAR","sourcesContent":["import React from 'react';\nimport { create } from 'react-test-renderer';\nimport 'jest-styled-components';\nimport { sportsbetDark, ThemeProvider } from '@heathmont/moon-themes';\n\nconst renderWithTheme = (component: JSX.Element) => (\n  <ThemeProvider theme={sportsbetDark}>{component}</ThemeProvider>\n);\n\nimport Badge from '../../badge/Badge';\nimport CardBalance from '../CardBalance';\n\ndescribe('CardBalance', () => {\n  test('renders correctly', () => {\n    const balance = create(\n      renderWithTheme(\n        <CardBalance\n          from={{\n            currency: 'Bitcoin',\n            value: '1526.56',\n            unit: 'mBTC',\n            unitTitle: 'Millibitcoin',\n          }}\n        />,\n      ),\n    );\n\n    expect(balance).toMatchSnapshot();\n  });\n\n  test('renders with currency if no unitTitle provided', () => {\n    const balance = create(\n      renderWithTheme(\n        <CardBalance\n          from={{\n            currency: 'Bitcoin',\n            value: '1526.56',\n            unit: 'mBTC',\n          }}\n        />,\n      ),\n    );\n\n    expect(balance).toMatchSnapshot();\n  });\n\n  test('renders correctly with a badge', () => {\n    const balance = create(\n      renderWithTheme(\n        <CardBalance\n          badge={<Badge>Active</Badge>}\n          from={{\n            currency: 'Bitcoin',\n            value: '1526.56',\n            unit: 'mBTC',\n            unitTitle: 'Millibitcoin',\n          }}\n        />,\n      ),\n    );\n\n    expect(balance).toMatchSnapshot();\n  });\n});\n"],"file":"balance.test.js"}