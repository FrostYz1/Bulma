{"version":3,"sources":["../../src/card/Card.ts"],"names":["backgroundSvg","backgroundIcon","React","isValidElement","backgroundImage","cloneElement","color","Card","styled","div","active","flex","template","theme","border","radius","space","display","minHeight","medium","position","borderRadius","borderColor","piccolo","flexDirection","flexWrap","justifyContent","alignItems","front","backgroundColor","gohan","backgroundRepeat","backgroundBlendMode","backgroundSize","cardGradientSizes","backgroundPosition","outline","goku","beerus","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,cAAD;AAAA,SACpBA,cAAc,IACXC,kBAAMC,cAAN,CAAqBF,cAArB,CADH,IAC2C;AACzC;AACAG,IAAAA,eAAe,EAAE,0BACfF,kBAAMG,YAAN,CAAmBJ,cAAnB,EAA8D;AAC5D;AACR;AACA;AACA;AACA;AACQK,MAAAA,KAAK,EAAE;AANqD,KAA9D,CADe;AAFwB,GAFvB;AAAA,CAAtB;;AAuBA;AACA;AACA;AACA,IAAMC,IAAI,GAAGC,6BAAOC,GAAV;AAAA;AAAA;AAAA,GACR;AAAA,MACEC,MADF,QACEA,MADF;AAAA,MAEET,cAFF,QAEEA,cAFF;AAAA,MAGEU,IAHF,QAGEA,IAHF;AAAA,MAIEC,QAJF,QAIEA,QAJF;AAAA,wBAKEC,KALF;AAAA,MAMIC,MANJ,cAMIA,MANJ;AAAA,MAMYR,KANZ,cAMYA,KANZ;AAAA,MAMmBS,MANnB,cAMmBA,MANnB;AAAA,MAM2BC,KAN3B,cAM2BA,KAN3B;AAAA,SAQM;AAEFC,IAAAA,OAAO,EAAE,OAFP;AAGFC,IAAAA,SAAS,EAAE,oBAAI,GAAJ;AAHT,KAIC,yBAAQ,oBAAIF,KAAK,WAAT,CAAR,EAA4B,oBAAIA,KAAK,CAACG,MAAV,CAA5B,CAJD;AAKFC,IAAAA,QAAQ,EAAE,UALR;AAMFC,IAAAA,YAAY,EAAE,oBAAIN,MAAM,WAAV,CANZ;AAOFD,IAAAA,MAAM,EAANA,MAPE;AAQFQ,IAAAA,WAAW,EAAE;AARX,MAUJZ,MAAM,IAAI;AACRY,IAAAA,WAAW,EAAEhB,KAAK,CAACiB,OAAN,CAAc,GAAd;AADL,GAVN,EAaJZ,IAAI,IAAI;AACNM,IAAAA,OAAO,EAAE,MADH;AAENO,IAAAA,aAAa,EAAE,QAFT;AAGNC,IAAAA,QAAQ,EAAE,MAHJ;AAINC,IAAAA,cAAc,EAAE,eAJV;AAKNC,IAAAA,UAAU,EAAE;AALN,GAbJ,EAoBJf,QAAQ,IACH;AACDgB,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,eAAe,EAAEvB,KAAK,CAACwB,KAAN,CAAY,GAAZ;AAAnB,KADK,EAEL7B,cAAc;AACZ8B,MAAAA,gBAAgB,EAAE,WADN;AAEZC,MAAAA,mBAAmB,EAAE;AAFT,OAGThC,aAAa,CAACC,cAAD,CAHJ;AAIZgC,MAAAA,cAAc,sBAAeC,wBAAf,CAJF;AAKZC,MAAAA,kBAAkB,yBAAkB,oBAAInB,KAAK,WAAT,CAAlB;AALN,MAFT,CADN;AAWDoB,IAAAA,OAAO,EAAE;AACPP,MAAAA,eAAe,EAAEvB,KAAK,CAAC+B,IAAN,CAAW,GAAX,CADV;AAEPf,MAAAA,WAAW,EAAEhB,KAAK,CAACgC,MAAN,CAAa,GAAb;AAFN;AAXR,IAeD1B,QAfC,CArBD,CARN;AAAA,CADQ,CAAV;;AAiDAL,IAAI,CAACgC,YAAL,GAAoB;AAClB3B,EAAAA,QAAQ,EAAE;AADQ,CAApB;eAIeL,I","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport padding from 'polished/lib/shorthands/padding';\nimport { inlineSvg, rem } from '@heathmont/moon-utils';\n\nimport { cardGradientSizes } from './utils';\n\n// type CardBackgroundIcon = InlineSVGProps | false | undefined;\n\nconst backgroundSvg = (backgroundIcon: any) =>\n  backgroundIcon\n  && React.isValidElement(backgroundIcon) && {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    backgroundImage: inlineSvg(\n      React.cloneElement(backgroundIcon as React.ReactElement<any>, {\n        /**\n         * By setting the icon to white with `0.05` opacity, we can use\n         * background-blend-mode to exclude it from the background, whatever\n         * the color may be.\n         */\n        color: 'rgba(255, 255, 255, 0.05)',\n      }),\n    ),\n  };\n\nexport type CardProps = {\n  backgroundIcon?: any;\n  template: 'front' | 'outline';\n  flex?: boolean;\n  active?: boolean;\n};\n\n/**\n * Component\n */\nconst Card = styled.div<CardProps>(\n  ({\n    active,\n    backgroundIcon,\n    flex,\n    template,\n    theme: {\n      border, color, radius, space,\n    },\n  }) => [\n    {\n      display: 'block',\n      minHeight: rem(168),\n      ...padding(rem(space.default), rem(space.medium)),\n      position: 'relative',\n      borderRadius: rem(radius.default),\n      border,\n      borderColor: 'transparent',\n    },\n    active && {\n      borderColor: color.piccolo[100],\n    },\n    flex && {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      alignItems: 'alignContent',\n    },\n    template\n      && {\n        front: [\n          { backgroundColor: color.gohan[100] },\n          backgroundIcon && {\n            backgroundRepeat: 'no-repeat',\n            backgroundBlendMode: 'exclusion',\n            ...backgroundSvg(backgroundIcon),\n            backgroundSize: `auto 50%, ${cardGradientSizes}`,\n            backgroundPosition: `center right ${rem(space.default)}`,\n          },\n        ],\n        outline: {\n          backgroundColor: color.goku[100],\n          borderColor: color.beerus[100],\n        },\n      }[template],\n  ],\n);\n\nCard.defaultProps = {\n  template: 'front',\n};\n\nexport default Card;\n"],"file":"Card.js"}