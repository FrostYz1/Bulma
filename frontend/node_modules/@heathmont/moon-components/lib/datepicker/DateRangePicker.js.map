{"version":3,"sources":["../../src/datepicker/DateRangePicker.tsx"],"names":["Wrapper","styled","div","position","DateRangePicker","isOpenByDefault","startDate","endDate","range","onDateChange","config","translations","React","useState","isOpen","setIsOpen","placeholder","setPlaceholder","defaultProps","apply","reset","lastMonth","lastWeek","last24hours","yesterday","today","tomorrow","thisWeek","nextWeek","thisMonth","nextMonth","format","monthLabelFormat","yearLabelFormat","weekStartsOn","withHoursAndMinutes","onlyFuture","without24AndToday","locale","enGB"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,6BAAOC,GAAV;AAAA;AAAA;AAAA,GAAc;AACzBC,EAAAA,QAAQ,EAAE;AADe,CAAd,CAAb;;AAIA,IAAMC,eAA+C,GAAG,SAAlDA,eAAkD,OAQlD;AAAA,MAPJC,eAOI,QAPJA,eAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,YACI,QADJA,YACI;;AACJ;AACA,wBAA4BC,kBAAMC,QAAN,CAAeR,eAAf,CAA5B;AAAA;AAAA,MAAOS,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAsCH,kBAAMC,QAAN,CACpC,oCAAe;AACbP,IAAAA,SAAS,EAATA,SADa;AACFC,IAAAA,OAAO,EAAPA,OADE;AACOC,IAAAA,KAAK,EAALA,KADP;AACcE,IAAAA,MAAM,EAANA,MADd;AACsBC,IAAAA,YAAY,EAAZA;AADtB,GAAf,CADoC,CAAtC;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AAKA,sBACE,gCAAC,OAAD,qBACE,gCAAC,QAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAMF,SAAS,CAAC,IAAD,CAAf;AAAA;AAApC,KACGC,WADH,CADF,EAIGF,MAAM,iBACL,gCAAC,yBAAD;AACE,IAAA,SAAS,EAAER,SADb;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,MAAM,EAAEE,MAJV;AAKE,IAAA,YAAY,EAAED,YALhB;AAME,IAAA,YAAY,EAAEE,YANhB,CAOE;AAPF;AAQE,IAAA,SAAS,EAAEI,SARb;AASE,IAAA,cAAc,EAAEE;AATlB,IALJ,CADF;AAoBD,CApCD;;AAsCAb,eAAe,CAACc,YAAhB,GAA+B;AAC7BV,EAAAA,KAAK,EAAE,EADsB;AAE7BH,EAAAA,eAAe,EAAE,KAFY;AAG7BM,EAAAA,YAAY,EAAE;AACZK,IAAAA,WAAW,EAAE,cADD;AAEZG,IAAAA,KAAK,EAAE,OAFK;AAGZC,IAAAA,KAAK,EAAE,OAHK;AAIZC,IAAAA,SAAS,EAAE,YAJC;AAKZC,IAAAA,QAAQ,EAAE,WALE;AAMZC,IAAAA,WAAW,EAAE,eAND;AAOZC,IAAAA,SAAS,EAAE,WAPC;AAQZC,IAAAA,KAAK,EAAE,OARK;AASZC,IAAAA,QAAQ,EAAE,UATE;AAUZC,IAAAA,QAAQ,EAAE,WAVE;AAWZC,IAAAA,QAAQ,EAAE,WAXE;AAYZC,IAAAA,SAAS,EAAE,YAZC;AAaZC,IAAAA,SAAS,EAAE;AAbC,GAHe;AAkB7BpB,EAAAA,MAAM,EAAE;AACNqB,IAAAA,MAAM,EAAE,oBADF;AAENC,IAAAA,gBAAgB,EAAE,MAFZ;AAGNC,IAAAA,eAAe,EAAE,MAHX;AAINC,IAAAA,YAAY,EAAE,CAJR;AAKNC,IAAAA,mBAAmB,EAAE,IALf;AAMNC,IAAAA,UAAU,EAAE,KANN;AAONC,IAAAA,iBAAiB,EAAE,KAPb;AAQNC,IAAAA,MAAM,EAAEC;AARF;AAlBqB,CAA/B;eA8BenC,e","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { enGB } from 'date-fns/locale';\n\nimport { Button } from '..';\n\nimport RangeCalendar, { DateRangePickerProps } from './RangeCalendar';\nimport { getPlaceholder } from './private/helpers/getPlaceholder';\n\nconst Wrapper = styled.div({\n  position: 'relative',\n});\n\nconst DateRangePicker: React.FC<DateRangePickerProps> = ({\n  isOpenByDefault,\n  startDate,\n  endDate,\n  range,\n  onDateChange,\n  config,\n  translations,\n}) => {\n  // const [ref, hasClickedOutside] = useClickOutside();\n  const [isOpen, setIsOpen] = React.useState(isOpenByDefault);\n  const [placeholder, setPlaceholder] = React.useState(\n    getPlaceholder({\n      startDate, endDate, range, config, translations,\n    }),\n  );\n  return (\n    <Wrapper>\n      <Button variant=\"tertiary\" onClick={() => setIsOpen(true)}>\n        {placeholder}\n      </Button>\n      {isOpen && (\n        <RangeCalendar\n          startDate={startDate}\n          endDate={endDate}\n          range={range}\n          config={config}\n          onDateChange={onDateChange}\n          translations={translations}\n          // hasClickedOutside={hasClickedOutside}\n          setIsOpen={setIsOpen}\n          setPlaceholder={setPlaceholder}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nDateRangePicker.defaultProps = {\n  range: '',\n  isOpenByDefault: false,\n  translations: {\n    placeholder: 'Select Dates',\n    apply: 'Apply',\n    reset: 'Reset',\n    lastMonth: 'Last month',\n    lastWeek: 'Last week',\n    last24hours: 'Last 24 hours',\n    yesterday: 'Yesterday',\n    today: 'Today',\n    tomorrow: 'Tomorrow',\n    thisWeek: 'This week',\n    nextWeek: 'Next week',\n    thisMonth: 'This month',\n    nextMonth: 'Next month',\n  },\n  config: {\n    format: \"yyyy-MM-dd'T'HH:mm\",\n    monthLabelFormat: 'MMMM',\n    yearLabelFormat: 'yyyy',\n    weekStartsOn: 1,\n    withHoursAndMinutes: true,\n    onlyFuture: false,\n    without24AndToday: false,\n    locale: enGB,\n  },\n};\n\nexport default DateRangePicker;\n"],"file":"DateRangePicker.js"}