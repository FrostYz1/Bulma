{"version":3,"sources":["../../../../src/datepicker/private/helpers/getDatesFromRange.ts"],"names":["getDatesFromRange","range","fallbackStartDate","fallbackEndDate","config","now","Date","startDate","undefined","endDate","lastMonth","lastWeek","yesterday","offset","getTimezoneOffset","tomorrow","nextWeek","nextMonth"],"mappings":"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","sourcesContent":["import startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport subMonths from 'date-fns/subMonths';\nimport subWeeks from 'date-fns/subWeeks';\nimport addMonths from 'date-fns/addMonths';\nimport addWeeks from 'date-fns/addWeeks';\nimport subDays from 'date-fns/subDays';\nimport addDays from 'date-fns/addDays';\nimport startOfDay from 'date-fns/startOfDay';\nimport endOfDay from 'date-fns/endOfDay';\nimport subHours from 'date-fns/subHours';\nimport addMinutes from 'date-fns/addMinutes';\n\nimport { Config } from '../../RangeCalendar';\n\nexport type DatesRange =\n  | ''\n  | 'reset'\n  | 'lastMonth'\n  | 'lastWeek'\n  | 'last24hours'\n  | 'yesterday'\n  | 'today'\n  | 'tomorrow'\n  | 'thisWeek'\n  | 'nextWeek'\n  | 'thisMonth'\n  | 'nextMonth';\n\nexport const getDatesFromRange = ({\n  range,\n  fallbackStartDate,\n  fallbackEndDate,\n  config,\n}: {\n  range?: DatesRange;\n  fallbackStartDate?: Date;\n  fallbackEndDate?: Date;\n  config?: Config;\n}): { startDate?: Date; endDate?: Date } => {\n  const now = new Date();\n\n  if (range === 'reset') {\n    return {\n      startDate: undefined,\n      endDate: undefined,\n    };\n  }\n  if (range === 'lastMonth') {\n    const lastMonth = subMonths(now, 1);\n    return {\n      startDate: startOfMonth(lastMonth),\n      endDate: endOfMonth(lastMonth),\n    };\n  }\n  if (range === 'lastWeek') {\n    const lastWeek = subWeeks(now, 1);\n    return {\n      startDate: startOfWeek(lastWeek, config),\n      endDate: endOfWeek(lastWeek, config),\n    };\n  }\n  if (range === 'yesterday') {\n    const yesterday = subDays(now, 1);\n    return {\n      startDate: startOfDay(yesterday),\n      endDate: endOfDay(yesterday),\n    };\n  }\n  if (range === 'last24hours') {\n    const offset = now.getTimezoneOffset();\n    return {\n      startDate: addMinutes(subHours(now, 24), offset),\n      endDate: addMinutes(now, offset),\n    };\n  }\n  if (range === 'today') {\n    return {\n      startDate: startOfDay(now),\n      endDate: endOfDay(now),\n    };\n  }\n  if (range === 'tomorrow') {\n    const tomorrow = addDays(now, 1);\n    return {\n      startDate: startOfDay(tomorrow),\n      endDate: endOfDay(tomorrow),\n    };\n  }\n  if (range === 'thisWeek') {\n    return {\n      startDate: startOfWeek(now, config),\n      endDate: endOfWeek(now, config),\n    };\n  }\n  if (range === 'nextWeek') {\n    const nextWeek = addWeeks(now, 1);\n    return {\n      startDate: startOfWeek(nextWeek, config),\n      endDate: endOfWeek(nextWeek, config),\n    };\n  }\n  if (range === 'thisMonth') {\n    return {\n      startDate: startOfMonth(now),\n      endDate: endOfMonth(now),\n    };\n  }\n  if (range === 'nextMonth') {\n    const nextMonth = addMonths(now, 1);\n    return {\n      startDate: startOfMonth(nextMonth),\n      endDate: endOfMonth(nextMonth),\n    };\n  }\n  return {\n    startDate: fallbackStartDate,\n    endDate: fallbackEndDate,\n  };\n};\n"],"file":"getDatesFromRange.js"}