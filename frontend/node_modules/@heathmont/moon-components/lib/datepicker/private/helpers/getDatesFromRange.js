"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDatesFromRange = void 0;

var _startOfMonth = _interopRequireDefault(require("date-fns/startOfMonth"));

var _endOfMonth = _interopRequireDefault(require("date-fns/endOfMonth"));

var _startOfWeek = _interopRequireDefault(require("date-fns/startOfWeek"));

var _endOfWeek = _interopRequireDefault(require("date-fns/endOfWeek"));

var _subMonths = _interopRequireDefault(require("date-fns/subMonths"));

var _subWeeks = _interopRequireDefault(require("date-fns/subWeeks"));

var _addMonths = _interopRequireDefault(require("date-fns/addMonths"));

var _addWeeks = _interopRequireDefault(require("date-fns/addWeeks"));

var _subDays = _interopRequireDefault(require("date-fns/subDays"));

var _addDays = _interopRequireDefault(require("date-fns/addDays"));

var _startOfDay = _interopRequireDefault(require("date-fns/startOfDay"));

var _endOfDay = _interopRequireDefault(require("date-fns/endOfDay"));

var _subHours = _interopRequireDefault(require("date-fns/subHours"));

var _addMinutes = _interopRequireDefault(require("date-fns/addMinutes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var getDatesFromRange = function getDatesFromRange(_ref) {
  var range = _ref.range,
      fallbackStartDate = _ref.fallbackStartDate,
      fallbackEndDate = _ref.fallbackEndDate,
      config = _ref.config;
  var now = new Date();

  if (range === 'reset') {
    return {
      startDate: undefined,
      endDate: undefined
    };
  }

  if (range === 'lastMonth') {
    var lastMonth = (0, _subMonths["default"])(now, 1);
    return {
      startDate: (0, _startOfMonth["default"])(lastMonth),
      endDate: (0, _endOfMonth["default"])(lastMonth)
    };
  }

  if (range === 'lastWeek') {
    var lastWeek = (0, _subWeeks["default"])(now, 1);
    return {
      startDate: (0, _startOfWeek["default"])(lastWeek, config),
      endDate: (0, _endOfWeek["default"])(lastWeek, config)
    };
  }

  if (range === 'yesterday') {
    var yesterday = (0, _subDays["default"])(now, 1);
    return {
      startDate: (0, _startOfDay["default"])(yesterday),
      endDate: (0, _endOfDay["default"])(yesterday)
    };
  }

  if (range === 'last24hours') {
    var offset = now.getTimezoneOffset();
    return {
      startDate: (0, _addMinutes["default"])((0, _subHours["default"])(now, 24), offset),
      endDate: (0, _addMinutes["default"])(now, offset)
    };
  }

  if (range === 'today') {
    return {
      startDate: (0, _startOfDay["default"])(now),
      endDate: (0, _endOfDay["default"])(now)
    };
  }

  if (range === 'tomorrow') {
    var tomorrow = (0, _addDays["default"])(now, 1);
    return {
      startDate: (0, _startOfDay["default"])(tomorrow),
      endDate: (0, _endOfDay["default"])(tomorrow)
    };
  }

  if (range === 'thisWeek') {
    return {
      startDate: (0, _startOfWeek["default"])(now, config),
      endDate: (0, _endOfWeek["default"])(now, config)
    };
  }

  if (range === 'nextWeek') {
    var nextWeek = (0, _addWeeks["default"])(now, 1);
    return {
      startDate: (0, _startOfWeek["default"])(nextWeek, config),
      endDate: (0, _endOfWeek["default"])(nextWeek, config)
    };
  }

  if (range === 'thisMonth') {
    return {
      startDate: (0, _startOfMonth["default"])(now),
      endDate: (0, _endOfMonth["default"])(now)
    };
  }

  if (range === 'nextMonth') {
    var nextMonth = (0, _addMonths["default"])(now, 1);
    return {
      startDate: (0, _startOfMonth["default"])(nextMonth),
      endDate: (0, _endOfMonth["default"])(nextMonth)
    };
  }

  return {
    startDate: fallbackStartDate,
    endDate: fallbackEndDate
  };
};

exports.getDatesFromRange = getDatesFromRange;
//# sourceMappingURL=getDatesFromRange.js.map