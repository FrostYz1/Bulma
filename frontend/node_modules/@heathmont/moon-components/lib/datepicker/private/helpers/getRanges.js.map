{"version":3,"sources":["../../../../src/datepicker/private/helpers/getRanges.ts"],"names":["future","past","getRanges","ranges","onlyFuture","without24AndToday"],"mappings":";;;;;;AAEA,IAAMA,MAAM,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,CAAf;AACA,IAAMC,IAAI,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,WAA1B,EAAuC,UAAvC,EAAmD,WAAnD,CAAb;;AAQO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAIJ;AAAA,MAHnBC,MAGmB,QAHnBA,MAGmB;AAAA,6BAFnBC,UAEmB;AAAA,MAFnBA,UAEmB,gCAFN,KAEM;AAAA,mCADnBC,iBACmB;AAAA,MADnBA,iBACmB,sCADC,KACD;;AACnB,MAAIF,MAAJ,EAAY;AACV,WAAOA,MAAP;AACD;;AACD,MAAIC,UAAJ,EAAgB;AACd,WAAOJ,MAAP;AACD;;AACD,MAAI,CAACK,iBAAL,EAAwB;AACtB,qBAAWJ,IAAX,GAAiB,aAAjB,EAAgC,OAAhC;AACD;;AACD,SAAOA,IAAP;AACD,CAfM","sourcesContent":["import { DatesRange } from './getDatesFromRange';\n\nconst future = ['tomorrow', 'nextWeek', 'nextMonth'];\nconst past = ['lastMonth', 'lastWeek', 'yesterday', 'thisWeek', 'thisMonth'];\n\ninterface GetRangesArgs {\n  ranges?: DatesRange[];\n  onlyFuture?: boolean;\n  without24AndToday?: boolean;\n}\n\nexport const getRanges = ({\n  ranges,\n  onlyFuture = false,\n  without24AndToday = false,\n}: GetRangesArgs) => {\n  if (ranges) {\n    return ranges;\n  }\n  if (onlyFuture) {\n    return future;\n  }\n  if (!without24AndToday) {\n    return [...past, 'last24hours', 'today'];\n  }\n  return past;\n};\n"],"file":"getRanges.js"}