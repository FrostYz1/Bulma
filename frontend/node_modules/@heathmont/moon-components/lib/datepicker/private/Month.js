"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Month = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _rem = _interopRequireDefault(require("polished/lib/helpers/rem"));

var _isSameDay = _interopRequireDefault(require("date-fns/isSameDay"));

var _isWithinInterval = _interopRequireDefault(require("date-fns/isWithinInterval"));

var _compareAsc = _interopRequireDefault(require("date-fns/compareAsc"));

var _getMonth = _interopRequireDefault(require("date-fns/getMonth"));

var _isDate = _interopRequireDefault(require("date-fns/isDate"));

var _Day = require("./Day");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var DayName = _styledComponents["default"].div.withConfig({
  displayName: "Month__DayName",
  componentId: "sc-1tptf0l-0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    height: (0, _rem["default"])(32),
    color: theme.color.bulma[100],
    fontWeight: 'bold',
    textTransform: 'uppercase',
    textAlign: 'center',
    userSelect: 'none'
  };
});

var MonthYearLabel = _styledComponents["default"].div.withConfig({
  displayName: "Month__MonthYearLabel",
  componentId: "sc-1tptf0l-1"
})(function (_ref2) {
  var theme = _ref2.theme;
  return {
    fontSize: (0, _rem["default"])(14),
    lineHeight: (0, _rem["default"])(20),
    color: theme.color.bulma[100],
    marginBottom: (0, _rem["default"])(20),
    width: '100%',
    textAlign: 'center',
    userSelect: 'none'
  };
});

var isInRangePreview = function isInRangePreview(_ref3) {
  var startDate = _ref3.startDate,
      hoveredDate = _ref3.hoveredDate,
      day = _ref3.day;

  if (!startDate) {
    return false;
  }

  if (!hoveredDate) {
    return false;
  }

  var isHoveredAfter = (0, _compareAsc["default"])(hoveredDate, startDate) > 0;

  if (isHoveredAfter) {
    return (0, _isWithinInterval["default"])(day, {
      start: startDate,
      end: hoveredDate
    });
  }

  return (0, _isWithinInterval["default"])(day, {
    start: hoveredDate,
    end: startDate
  });
};

var Days = _styledComponents["default"].div.withConfig({
  displayName: "Month__Days",
  componentId: "sc-1tptf0l-2"
})({
  display: 'grid',
  gridTemplateColumns: 'repeat(7, 1fr)'
});

var Month = function Month(_ref4) {
  var monthLabel = _ref4.monthLabel,
      year = _ref4.year,
      weekDayLabels = _ref4.weekDayLabels,
      monthDays = _ref4.monthDays,
      onDayClick = _ref4.onDayClick,
      onMouseEnter = _ref4.onMouseEnter,
      cursorDate = _ref4.cursorDate,
      startDate = _ref4.startDate,
      endDate = _ref4.endDate,
      hoveredDate = _ref4.hoveredDate;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(MonthYearLabel, null, monthLabel, "\xA0\xA0", year), /*#__PURE__*/_react["default"].createElement(Days, null, weekDayLabels.map(function (dayLabel, weekIndex) {
    return (
      /*#__PURE__*/
      // eslint-disable-next-line react/no-array-index-key
      _react["default"].createElement(DayName, {
        key: "".concat(dayLabel, "-").concat(weekIndex)
      }, dayLabel)
    );
  }), monthDays.map(function (day) {
    return /*#__PURE__*/_react["default"].createElement(_Day.Day, {
      key: day.getTime(),
      onDayClick: onDayClick,
      onMouseEnter: onMouseEnter,
      date: day,
      isToday: (0, _isSameDay["default"])(day, new Date()),
      isSameMonth: (0, _getMonth["default"])(day) === (0, _getMonth["default"])(cursorDate),
      isStartEdge: Boolean(startDate && (0, _isSameDay["default"])(startDate, day)),
      isEndEdge: Boolean(endDate && (0, _isSameDay["default"])(endDate, day)),
      isInRange: Boolean(startDate && (0, _isDate["default"])(startDate) && endDate && (0, _isDate["default"])(endDate) && (0, _isWithinInterval["default"])(day, {
        start: startDate,
        end: endDate
      })),
      isInRangePreview: isInRangePreview({
        startDate: startDate,
        hoveredDate: hoveredDate,
        day: day
      })
    });
  })));
};

exports.Month = Month;
//# sourceMappingURL=Month.js.map