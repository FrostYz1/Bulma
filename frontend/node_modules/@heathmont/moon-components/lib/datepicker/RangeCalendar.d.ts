import React from 'react';
import type { DatesRange } from './private/helpers/getDatesFromRange';
export declare type DatepickerState = {
    startDate?: Date;
    endDate?: Date;
    range?: DatesRange;
    hoveredDate?: Date;
    cursorDate: Date;
};
export declare type WeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6 | undefined;
export interface Translations {
    placeholder: any;
    apply: any;
    reset: any;
    lastMonth: any;
    lastWeek: any;
    last24hours: any;
    yesterday: any;
    today: any;
    tomorrow: any;
    thisWeek: any;
    nextWeek: any;
    thisMonth: any;
    nextMonth: any;
}
export interface Config {
    format?: string;
    monthLabelFormat?: string;
    yearLabelFormat?: string;
    weekStartsOn?: WeekStartsOn;
    withHoursAndMinutes?: boolean;
    onlyFuture?: boolean;
    without24AndToday?: boolean;
    locale?: any;
    ranges?: DatesRange[];
}
export interface DateRangePickerProps {
    isOpenByDefault?: boolean;
    format?: string;
    startDate?: Date;
    endDate?: Date;
    range?: DatesRange;
    hasClickedOutside?: boolean;
    setIsOpen?: any;
    setPlaceholder?: any;
    onDateChange: ({ startDate, endDate, range, }: {
        startDate?: Date;
        endDate?: Date;
        range?: DatesRange;
    }) => any;
    config?: Config;
    translations?: Translations;
}
declare const RangeCalendar: React.FC<DateRangePickerProps>;
export default RangeCalendar;
//# sourceMappingURL=RangeCalendar.d.ts.map