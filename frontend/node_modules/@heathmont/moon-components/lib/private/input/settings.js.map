{"version":3,"sources":["../../../src/private/input/settings.ts"],"names":["inputBorderWidth","borderWidth","inputAnimationSpeed","transitionDuration","inputFontSize","inputLineHeight","inputSpacingX","theme","space","inputSpacingY","inputIconSize","inputIconPosition","inputIconOffset","inputColors","key","color","themedColor","label","trunks","text","bulma","icon","placeholder","borderDefault","beerus","borderHover","goku","background","gohan","disabled","inputBorder"],"mappings":";;;;;;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,SAA4BA,WAA5B;AAAA,CAAzB;;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAAGC,kBAAH,SAAGA,kBAAH;AAAA,mBACvBA,kBAAkB,WADK;AAAA,CAA5B;;;AAGA,IAAMC,aAAa,GAAG,EAAtB;;AACA,IAAMC,eAAe,GAAGD,aAAa,GAAG,GAAxC;;;AAEA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SACpBA,KAAK,CAACC,KAAN,cAAsBR,gBAAgB,CAACO,KAAD,CADlB;AAAA,CAAtB,C,CACiD;;;;;AACjD,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACF,KAAD;AAAA,SAAkB,KAAKP,gBAAgB,CAACO,KAAD,CAAvC;AAAA,CAAtB,C,CAAsE;;;;AAEtE,IAAMG,aAAa,GAAG,EAAtB,C,CAA0B;;;;AAC1B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD;AAAA,SAAkBD,aAAa,CAACC,KAAD,CAA/B;AAAA,CAA1B;;;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD;AAAA,SACtBG,aAAa,GAAGJ,aAAa,CAACC,KAAD,CAA7B,GAAuCI,iBAAiB,CAACJ,KAAD,CADlC;AAAA,CAAxB;;;;AAiBA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAA4B,iBAAsB;AAAA,QAAnBC,KAAmB,SAAnBA,KAAmB;AACpE,QAAMC,WAAwB,GAAG;AAC/BC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAa,GAAb,CADwB;AAE/BC,MAAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAY,GAAZ,CAFyB;AAG/BC,MAAAA,IAAI,EAAEN,KAAK,CAACG,MAAN,CAAa,GAAb,CAHyB;AAI/BI,MAAAA,WAAW,EAAEP,KAAK,CAACG,MAAN,CAAa,GAAb,CAJkB;AAK/BK,MAAAA,aAAa,EAAER,KAAK,CAACS,MAAN,CAAa,GAAb,CALgB;AAM/BC,MAAAA,WAAW,EAAEV,KAAK,CAACW,IAAN,CAAW,EAAX,CANkB;AAO/BC,MAAAA,UAAU,EAAEZ,KAAK,CAACa,KAAN,CAAY,GAAZ,CAPmB;AAQ/BC,MAAAA,QAAQ,EAAEd,KAAK,CAACW,IAAN,CAAW,EAAX;AARqB,KAAjC;AAWA,WAAOV,WAAW,CAACF,GAAD,CAAlB;AACD,GAbmB;AAAA,CAApB;;;;AAeA,IAAMgB,WAAW,GAAG,SAAdA,WAAc,CAACvB,KAAD;AAAA,mBACfP,gBAAgB,CAACO,KAAD,CADD,sBACoBM,WAAW,CAAC,eAAD,CAAX,CAA6BN,KAA7B,CADpB;AAAA,CAApB","sourcesContent":["import { Theme } from '@heathmont/moon-themes';\n\nconst inputBorderWidth = ({ borderWidth }: Theme) => borderWidth;\nconst inputAnimationSpeed = ({ transitionDuration }: Theme) =>\n  `${transitionDuration.default}s`;\n\nconst inputFontSize = 16;\nconst inputLineHeight = inputFontSize * 1.5;\n\nconst inputSpacingX = (theme: Theme) =>\n  theme.space.default - inputBorderWidth(theme); // px\nconst inputSpacingY = (theme: Theme) => 10 - inputBorderWidth(theme); // px\n\nconst inputIconSize = 20; // px\nconst inputIconPosition = (theme: Theme) => inputSpacingX(theme);\nconst inputIconOffset = (theme: Theme) =>\n  inputIconSize + inputSpacingX(theme) + inputIconPosition(theme);\n\ntype ColorValue = string | undefined;\n\ntype InputColors = {\n  label: ColorValue;\n  text: ColorValue;\n  icon: ColorValue;\n  placeholder: ColorValue;\n  borderDefault: ColorValue;\n  borderHover: ColorValue;\n  background: ColorValue;\n  disabled: ColorValue;\n  [key: string]: ColorValue;\n};\n\nconst inputColors = (key: keyof InputColors) => ({ color }: Theme) => {\n  const themedColor: InputColors = {\n    label: color.trunks[100],\n    text: color.bulma[100],\n    icon: color.trunks[100],\n    placeholder: color.trunks[100],\n    borderDefault: color.beerus[100],\n    borderHover: color.goku[40],\n    background: color.gohan[100],\n    disabled: color.goku[80],\n  };\n\n  return themedColor[key];\n};\n\nconst inputBorder = (theme: Theme) =>\n  `${inputBorderWidth(theme)}px solid ${inputColors('borderDefault')(theme)}`;\n\nexport {\n  inputAnimationSpeed,\n  inputBorder,\n  inputBorderWidth,\n  inputColors,\n  inputFontSize,\n  inputLineHeight,\n  inputIconSize,\n  inputSpacingX,\n  inputSpacingY,\n  inputIconOffset,\n  inputIconPosition,\n};\n"],"file":"settings.js"}