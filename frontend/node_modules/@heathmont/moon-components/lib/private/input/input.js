"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

var _settings = require("./settings");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Input = _styledComponents["default"].input.withConfig({
  displayName: "input__Input",
  componentId: "x9ri56-0"
})(function (_ref) {
  var theme = _ref.theme;
  return [{
    width: '100%',
    maxWidth: '100%',
    padding: "".concat((0, _moonUtils.rem)((0, _settings.inputSpacingY)(theme)), " ").concat((0, _moonUtils.rem)((0, _settings.inputSpacingX)(theme))),
    appearance: 'none',
    font: 'inherit',
    fontSize: (0, _moonUtils.rem)(_settings.inputFontSize),
    lineHeight: (0, _moonUtils.rem)(_settings.inputLineHeight),
    color: (0, _settings.inputColors)('text')(theme),
    backgroundColor: (0, _settings.inputColors)('background')(theme),
    border: (0, _settings.inputBorder)(theme),
    borderRadius: (0, _moonUtils.rem)(theme.radius.small),
    transition: "border-color ".concat((0, _settings.inputAnimationSpeed)(theme), " ease"),
    WebkitAppearance: 'none',
    '&::placeholder': {
      color: (0, _settings.inputColors)('placeholder')(theme),
      opacity: 1
    },
    '&:hover:not(:focus):not([disabled])': {
      borderColor: (0, _settings.inputColors)('borderHover')(theme)
    },
    // date inputs will be marked as invalid by default
    '&:not(:placeholder-shown):not([type="date"]):invalid': {
      borderColor: theme.color.chiChi[100]
    },
    '&:invalid, :-moz-ui-invalid': {
      boxShadow: 'none' // Firefox Override

    },
    '&:disabled': {
      opacity: 0.5,
      cursor: 'not-allowed'
    }
  }, function (_ref2) {
    var withIcon = _ref2.withIcon;
    return withIcon && {
      paddingRight: (0, _moonUtils.rem)((0, _settings.inputIconOffset)(theme)),
      backgroundPosition: "right ".concat((0, _moonUtils.rem)((0, _settings.inputIconPosition)(theme)), " center"),
      backgroundRepeat: 'no-repeat',
      backgroundSize: (0, _moonUtils.rem)(_settings.inputIconSize)
    };
  }, function (_ref3) {
    var error = _ref3.error;
    return error && {
      borderColor: theme.color.chiChi[100]
    };
  }, function (_ref4) {
    var rounded = _ref4.rounded;
    return rounded && {
      borderRadius: (0, _moonUtils.rem)(theme.radius.largest)
    };
  }];
});

exports.Input = Input;
//# sourceMappingURL=input.js.map