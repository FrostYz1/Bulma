function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M26 18.86C26 24.4602 21.5228 29 16 29C10.4772 29 6 24.4602 6 18.86C6 11.1798 14.9216 3 16 3C17.0784 3 26 11.1798 26 18.86Z",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M22 19C22 22.3137 19.3137 25 16 25",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round"
  }));
};

var LogoDrop = styled(Svg).withConfig({
  displayName: "LogoDrop",
  componentId: "gjphpx-0"
})(function (_ref) {
  var color = _ref.color,
      height = _ref.height,
      width = _ref.width,
      fontSize = _ref.fontSize,
      theme = _ref.theme;
  return _objectSpread(_objectSpread({}, color && {
    color: themed('color', color)(theme)
  }), {}, {
    height: height,
    width: width,
    fontSize: fontSize
  });
});
LogoDrop.defaultProps = {};
export default LogoDrop;
//# sourceMappingURL=LogoDrop.js.map