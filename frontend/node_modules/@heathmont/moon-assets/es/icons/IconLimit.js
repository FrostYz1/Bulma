function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M7.3 4c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.3-3.3 3.3C5.5 10.6 4 9.2 4 7.3S5.5 4 7.3 4zm0-2C4.4 2 2 4.4 2 7.3s2.4 5.3 5.3 5.3 5.3-2.4 5.3-5.3S10.3 2 7.3 2zM24.7 21.3c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.4-3.3 3.4-1.8 0-3.3-1.5-3.3-3.3 0-1.8 1.4-3.4 3.3-3.4zm0-2c-2.9 0-5.3 2.4-5.3 5.3s2.4 5.3 5.3 5.3 5.3-2.4 5.3-5.3-2.4-5.3-5.3-5.3zM3.3 29.7c-.3 0-.5-.1-.7-.3-.4-.4-.4-1 0-1.4L28 2.6c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4L4 29.4c-.2.2-.4.3-.7.3z",
    fill: "currentColor"
  }));
};

var IconLimit = styled(Svg).withConfig({
  displayName: "IconLimit",
  componentId: "sc-19qk5jr-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconLimit;
//# sourceMappingURL=IconLimit.js.map