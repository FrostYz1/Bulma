function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 18 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("g", {
    clipPath: "url(#icon-sb-shield_svg__clip0)",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M16.998 2.497a.307.307 0 00-.224-.282L8.647.01a.303.303 0 00-.155 0L.365 2.215a.308.308 0 00-.225.282C-.094 7.342.613 11.17 2.3 14.2c1.37 2.462 3.377 4.349 6.135 5.767a.297.297 0 00.274 0c2.767-1.433 4.775-3.313 6.14-5.75 1.692-3.026 2.395-6.859 2.15-11.72z",
    fill: "currentColor"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M8.711 5.192a3.868 3.868 0 013.87 3.869 3.868 3.868 0 01-3.87 3.869 3.868 3.868 0 110-7.738zm-.014.735a3.161 3.161 0 013.166 3.159 3.161 3.161 0 01-3.166 3.158 3.161 3.161 0 01-3.166-3.158 3.161 3.161 0 013.166-3.159z",
    fill: "#fff"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M7.422 4.455a2.579 2.579 0 110 5.16 2.579 2.579 0 010-5.16z",
    fill: "#fff"
  })), /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("clipPath", {
    id: "icon-sb-shield_svg__clip0"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "#fff",
    d: "M0 0h17.143v20H0z"
  }))));
};

var IconSbShield = styled(Svg).withConfig({
  displayName: "IconSbShield",
  componentId: "sc-1hpf75l-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconSbShield;
//# sourceMappingURL=IconSbShield.js.map