function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10 2a1 1 0 011 1v1h10V3a1 1 0 112 0v1h2a5 5 0 015 5v16a5 5 0 01-5 5H7a5 5 0 01-5-5V9a5 5 0 015-5h2V3a1 1 0 011-1zM9 6H7a3 3 0 00-3 3v2h24V9a3 3 0 00-3-3h-2v1a1 1 0 11-2 0V6H11v1a1 1 0 11-2 0V6zm19 7H4v12a3 3 0 003 3h18a3 3 0 003-3V13z",
    fill: "currentColor"
  }));
};

var IconCalendarEmpty = styled(Svg).withConfig({
  displayName: "IconCalendarEmpty",
  componentId: "c02r0-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconCalendarEmpty;
//# sourceMappingURL=IconCalendarEmpty.js.map