function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 37 44",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M21.42 27.552c8.577 0 14.849-3.712 14.849-13.568 0-7.936-4.544-13.952-15.36-13.952H4.845v21.504H.557v6.016h4.288v3.2H.557v5.504h4.288V44h10.368v-7.744H29.1v-5.504H15.213v-3.2h6.208zM15.086 9.504h4.48c3.648 0 5.632 2.048 5.632 5.248 0 3.328-1.856 5.504-5.632 5.504h-4.48V9.504z",
    fill: "currentColor"
  }));
};

var IconCurrencyRub = styled(Svg).withConfig({
  displayName: "IconCurrencyRub",
  componentId: "sc-1dwpl3y-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconCurrencyRub;
//# sourceMappingURL=IconCurrencyRub.js.map