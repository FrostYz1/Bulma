function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M24.1 10.9c-.3 0-.5-.1-.7-.3l-6-6c-.8-.8-2-.8-2.8 0l-6 6c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4l6-6c1.5-1.5 4.1-1.5 5.6 0l6 6c.4.4.4 1 0 1.4-.2.2-.4.3-.7.3zM16 30c-1 0-2-.4-2.8-1.2l-6-6c-.4-.4-.4-1 0-1.4.4-.4 1-.4 1.4 0l6 6c.8.8 2 .8 2.8 0l6-6c.4-.4 1-.4 1.4 0 .4.4.4 1 0 1.4l-6 6C18 29.6 17 30 16 30z",
    fill: "currentColor"
  }));
};

var IconDouble = styled(Svg).withConfig({
  displayName: "IconDouble",
  componentId: "j68o6y-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconDouble;
//# sourceMappingURL=IconDouble.js.map