function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 18 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M14.291 2.78L0 0l7.52 20L18 6.507 14.291 2.78zm-.23 1.224L16.247 6.2l-5.98 1.144 3.794-3.34zM8.97 7.115L2.667 1.592l10.3 2.002L8.97 7.115zm-.45.977L7.493 17.07 1.953 2.335 8.52 8.092zm.952.477l6.62-1.267-7.594 9.778.974-8.511z",
    fill: "currentColor"
  }));
};

var IconCurrencyTrx = styled(Svg).withConfig({
  displayName: "IconCurrencyTrx",
  componentId: "j24fy1-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconCurrencyTrx;
//# sourceMappingURL=IconCurrencyTrx.js.map