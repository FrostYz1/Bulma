function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M21.5 4C22.9 4 24 5.1 24 6.5v19.1c0 1.4-1.1 2.5-2.5 2.5h-11C9.1 28 8 26.9 8 25.5v-19C8 5.1 9.1 4 10.5 4h11zm0-2h-11C8 2 6 4 6 6.5v19.1C6 28 8 30 10.5 30h11c2.4 0 4.5-2 4.5-4.5v-19C26 4 24 2 21.5 2z",
    fill: "currentColor"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M20.3 25.4h-8.6c-.6 0-1-.4-1-1s.4-1 1-1h8.6c.6 0 1 .4 1 1s-.4 1-1 1z",
    fill: "currentColor"
  }));
};

var IconMobile = styled(Svg).withConfig({
  displayName: "IconMobile",
  componentId: "cm05u6-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconMobile;
//# sourceMappingURL=IconMobile.js.map