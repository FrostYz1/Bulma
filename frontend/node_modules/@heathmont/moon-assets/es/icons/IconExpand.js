function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M2 11a1 1 0 102 0V5.41L14.586 16 4 26.59V21a1 1 0 10-2 0v8a1 1 0 001 1h8a1 1 0 100-2H5.419L16 17.415 26.581 28H21a1 1 0 100 2h8a1 1 0 001-1v-8a1 1 0 10-2 0v5.59L17.414 16 28 5.41V11a1 1 0 102 0V3a1 1 0 00-1-1h-8a1 1 0 100 2h5.581L16 14.585 5.419 4H11a1 1 0 100-2H3a1 1 0 00-1 1v8z",
    fill: "currentColor"
  }));
};

var IconExpand = styled(Svg).withConfig({
  displayName: "IconExpand",
  componentId: "sc-11n9b41-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconExpand;
//# sourceMappingURL=IconExpand.js.map