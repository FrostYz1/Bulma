function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M18.061 11.613l-7.941 3.222c-.759.297-1.67-.05-1.973-.793L4.86 6.26c-.303-.744.051-1.636.81-1.933l7.941-3.222c.759-.297 1.67.05 1.973.793L18.87 9.68c.354.744-.05 1.586-.809 1.933z",
    stroke: "currentColor",
    strokeMiterlimit: 10,
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M7.684 7.38a.801.801 0 00.805-.796c0-.44-.36-.797-.805-.797a.801.801 0 00-.806.797c0 .44.36.797.806.797zM12.995 5.25a.801.801 0 00.806-.797c0-.44-.361-.797-.806-.797a.801.801 0 00-.806.797c0 .44.361.796.806.796zM11.684 8.598a.801.801 0 00.806-.797c0-.44-.36-.797-.806-.797a.801.801 0 00-.805.797c0 .44.36.797.806.797zM9.832 12.335a.801.801 0 00.806-.797c0-.44-.361-.797-.806-.797a.801.801 0 00-.806.797c0 .44.361.797.806.797zM15.143 10.03a.801.801 0 00.806-.796c0-.44-.36-.797-.806-.797a.801.801 0 00-.806.797c0 .44.361.797.806.797z",
    fill: "currentColor"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M4.698 11.713l-3.445 3.403M7.075 16.323l-2.541 2.521M5.71 14.34L1 19.03",
    stroke: "currentColor",
    strokeWidth: 1.4,
    strokeMiterlimit: 10,
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
};

var IconCasino = styled(Svg).withConfig({
  displayName: "IconCasino",
  componentId: "x529m3-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconCasino;
//# sourceMappingURL=IconCasino.js.map