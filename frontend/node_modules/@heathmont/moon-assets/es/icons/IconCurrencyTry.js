function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(props) {
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 37 44",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/React.createElement("path", {
    d: "M28.712 25.632c-2.176 7.36-4.928 10.24-9.92 10.24h-1.856V27.04l11.584-5.504-2.176-4.736-9.408 4.48v-3.712l11.584-5.504-2.176-4.736-9.408 4.48V.032H6.12v16.96l-6.08 2.88 2.176 4.672 3.904-1.856v3.776l-6.08 2.88 2.176 4.672L6.12 32.16V44h13.056c8.576 0 14.528-3.968 17.6-15.616l-8.064-2.752z",
    fill: "currentColor"
  }));
};

var IconCurrencyTry = styled(Svg).withConfig({
  displayName: "IconCurrencyTry",
  componentId: "q06yg5-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: themed('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: themed('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: themed('color', circleColor)(theme)
    }
  }];
});
export default IconCurrencyTry;
//# sourceMappingURL=IconCurrencyTry.js.map