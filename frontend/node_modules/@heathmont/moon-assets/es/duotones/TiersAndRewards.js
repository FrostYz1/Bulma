var _excluded = ["secondaryColor"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { useTheme } from '@heathmont/moon-themes';
import { themed } from '@heathmont/moon-utils';

var Svg = function Svg(_ref) {
  var secondaryColor = _ref.secondaryColor,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 174 174",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, rest), /*#__PURE__*/React.createElement("path", {
    opacity: 0.1,
    d: "M111.915 117.009C111.901 116.025 111.642 115.06 111.162 114.201C127.095 99.181 134.285 79.413 136.568 56.9972H72.6533C74.936 79.413 82.0351 99.181 97.9681 114.201C97.4083 115.172 97.1506 116.288 97.2279 117.406C97.3051 118.524 97.7138 119.594 98.4018 120.478H87.8103V131.321H121.251V120.478H110.728C111.483 119.478 111.899 118.262 111.915 117.009Z",
    fill: "currentColor"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M90.9148 102.787C108.788 87.4707 116.595 66.7897 118.946 43.1413H55.0312C57.3139 66.7897 65.1891 87.4707 83.0396 102.787",
    stroke: secondaryColor,
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M78.1545 114.292C78.1545 110.092 95.8224 110.092 95.8224 114.292",
    stroke: secondaryColor,
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M67.1521 126.801H106.665",
    stroke: secondaryColor,
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M50.6256 91.7163C51.5034 92.5941 52.694 93.0872 53.9354 93.0872C55.1769 93.0872 56.3675 92.5941 57.2453 91.7163C58.1231 90.8384 58.6163 89.6478 58.6163 88.4064C58.6163 87.1649 58.1231 85.9743 57.2453 85.0965C57.2453 85.0965 27.4793 69.6885 28.1413 55.5587",
    stroke: secondaryColor,
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M35.0122 62.4297C38.8069 62.4297 41.883 59.3535 41.883 55.5589C41.883 51.7642 38.8069 48.688 35.0122 48.688C31.2175 48.688 28.1414 51.7642 28.1414 55.5589C28.1414 59.3535 31.2175 62.4297 35.0122 62.4297Z",
    stroke: "currentColor",
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M123.397 91.7163C122.519 92.5941 121.329 93.0872 120.087 93.0872C118.846 93.0872 117.655 92.5941 116.777 91.7163C115.9 90.8384 115.406 89.6478 115.406 88.4064C115.406 87.1649 115.9 85.9743 116.777 85.0965C116.777 85.0965 146.452 69.6885 145.859 55.5587",
    stroke: secondaryColor,
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M138.988 62.4297C142.782 62.4297 145.859 59.3535 145.859 55.5589C145.859 51.7642 142.782 48.688 138.988 48.688C135.193 48.688 132.117 51.7642 132.117 55.5589C132.117 59.3535 135.193 62.4297 138.988 62.4297Z",
    stroke: "currentColor",
    strokeWidth: 2.28267,
    strokeMiterlimit: 10,
    strokeLinecap: "round"
  }));
};

var Component = styled(Svg).withConfig({
  displayName: "TiersAndRewards__Component",
  componentId: "sc-1gi4awe-0"
})(function (_ref2) {
  var color = _ref2.color,
      height = _ref2.height,
      width = _ref2.width,
      fontSize = _ref2.fontSize,
      verticalAlign = _ref2.verticalAlign,
      theme = _ref2.theme;
  return _objectSpread(_objectSpread({}, color && {
    color: themed('color', color)(theme)
  }), {}, {
    height: height,
    width: width,
    fontSize: fontSize,
    verticalAlign: verticalAlign
  });
});

var TiersAndRewards = function TiersAndRewards(props) {
  var theme = useTheme();
  return /*#__PURE__*/React.createElement(Component, _extends({
    secondaryColor: theme.color.bulma[100]
  }, props));
};

TiersAndRewards.defaultProps = {
  verticalAlign: 'middle'
};
export default TiersAndRewards;
//# sourceMappingURL=TiersAndRewards.js.map