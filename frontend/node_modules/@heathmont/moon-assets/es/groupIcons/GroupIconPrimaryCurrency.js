var _excluded = ["name"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { IconBitcoin, IconAustralianDollar, IconBrazilianReal, IconCanadianDollar, IconCardano, IconChilieanPeso, IconChineseYuan, IconDanishKrone, IconDogecoin, IconEthereum, IconEuro, IconGbPoundSterling, IconHongKongDollar, IconIcelandicKrona, IconIndianRupee, IconJapaneseYen, IconLitecoin, IconNewTaiwanDollar, IconNewZealandDollar, IconPolandZloty, IconRipple, IconRussianRuble, IconSingaporeDollar, IconSoc, IconSouthKoreanWon, IconSwedishKrona, IconSwissFranc, IconThaiBaht, IconTron, IconTurkishLira, IconUsaDollar } from '../currencies';
var currencyIcons = {
  ADA: IconCardano,
  BRL: IconBrazilianReal,
  BTC: IconBitcoin,
  CAD: IconCanadianDollar,
  CNY: IconChineseYuan,
  DOGE: IconDogecoin,
  ETH: IconEthereum,
  EUR: IconEuro,
  HKD: IconHongKongDollar,
  INR: IconIndianRupee,
  JPY: IconJapaneseYen,
  KRW: IconSouthKoreanWon,
  LTC: IconLitecoin,
  RUB: IconRussianRuble,
  SOC: IconSoc,
  THB: IconThaiBaht,
  TRX: IconTron,
  TRY: IconTurkishLira,
  USD: IconUsaDollar,
  XRP: IconRipple,
  CHF: IconSwissFranc,
  SEK: IconSwedishKrona,
  SGD: IconSingaporeDollar,
  PLN: IconPolandZloty,
  NZD: IconNewZealandDollar,
  TWD: IconNewTaiwanDollar,
  ISK: IconIcelandicKrona,
  GBP: IconGbPoundSterling,
  DKK: IconDanishKrone,
  CLP: IconChilieanPeso,
  AUD: IconAustralianDollar
};

var GroupIconPrimaryCurrency = function GroupIconPrimaryCurrency(_ref) {
  var name = _ref.name,
      props = _objectWithoutProperties(_ref, _excluded);

  return React.createElement(currencyIcons[name], _objectSpread({}, props));
};

export default GroupIconPrimaryCurrency;
//# sourceMappingURL=GroupIconPrimaryCurrency.js.map