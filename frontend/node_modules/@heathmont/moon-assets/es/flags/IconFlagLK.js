var _excluded = ["fontSize"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
var Flag = styled.span.withConfig({
  displayName: "IconFlagLK__Flag",
  componentId: "fy305g-0"
})(function (_ref) {
  var fontSize = _ref.fontSize;
  return {
    fontSize: fontSize
  };
}); // Sri Lanka

var IconFlagLK = function IconFlagLK(_ref2) {
  var fontSize = _ref2.fontSize,
      props = _objectWithoutProperties(_ref2, _excluded);

  return (
    /*#__PURE__*/
    // eslint-disable-next-line
    React.createElement(Flag, _extends({
      role: "img",
      "aria-label": "flag-lk",
      fontSize: fontSize
    }, props), "\uD83C\uDDF1\uD83C\uDDF0")
  );
};

export default IconFlagLK;
//# sourceMappingURL=IconFlagLK.js.map