"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Svg = function Svg(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 32 32",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/_react["default"].createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M27.336 19.79c.242-.96.37-1.964.37-2.997 0-5.223-3.279-9.678-7.889-11.421a4.45 4.45 0 00-8.634 0c-4.61 1.743-7.89 6.198-7.89 11.421 0 1.033.129 2.037.37 2.996a4.448 4.448 0 005.165 7.228A12.154 12.154 0 0015.5 29c2.46 0 4.754-.73 6.671-1.983a4.448 4.448 0 005.165-7.228zM13.052 6.447a2.448 2.448 0 114.896 0 2.448 2.448 0 01-4.896 0zM11.187 7.54a10.209 10.209 0 00-5.894 9.254c0 .726.076 1.434.22 2.116a4.448 4.448 0 014.747 6.645A10.155 10.155 0 0015.5 27c1.917 0 3.709-.528 5.24-1.446a4.448 4.448 0 014.747-6.645 10.209 10.209 0 00-5.674-11.37 4.45 4.45 0 01-8.627 0zM6.448 20.81a2.448 2.448 0 100 4.897 2.448 2.448 0 000-4.897zm15.655 2.449a2.448 2.448 0 114.897 0 2.448 2.448 0 01-4.896 0z",
    fill: "currentColor"
  }));
};

var IconShare = (0, _styledComponents["default"])(Svg).withConfig({
  displayName: "IconShare",
  componentId: "sc-11mssr4-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: (0, _moonUtils.themed)('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: (0, _moonUtils.themed)('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: (0, _moonUtils.themed)('color', circleColor)(theme)
    }
  }];
});
var _default = IconShare;
exports["default"] = _default;
//# sourceMappingURL=IconShare.js.map