"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _moonUtils = require("@heathmont/moon-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Svg = function Svg(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    width: "1em",
    height: "1em",
    viewBox: "0 0 18 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), /*#__PURE__*/_react["default"].createElement("path", {
    d: "M3.168 16.948h0l.004.003c1.798 1.707 4.09 2.549 6.834 2.549 1.408 0 2.76-.206 4.052-.62 2.415-.774 3.442-3.274 3.442-5.605v-.149a4.198 4.198 0 00-4.198-4.198h-2.356a1.843 1.843 0 000 3.685h2.535v.32c0 1.226-.594 2.297-1.595 2.58a6.887 6.887 0 01-1.88.252c-1.636 0-2.913-.54-3.88-1.6-.963-1.073-1.456-2.432-1.456-4.115 0-1.772.504-3.14 1.472-4.155.991-1.04 2.225-1.56 3.738-1.56 1.357 0 2.538.34 3.559 1.011.76.5 1.845.59 2.618-.074.816-.703.957-2.046-.003-2.769a9.22 9.22 0 00-2.19-1.221A10.441 10.441 0 009.907.5c-2.814 0-5.116.886-6.851 2.69h0l-.002.001C1.343 4.987.5 7.288.5 10.05c0 2.845.877 5.163 2.668 6.898z",
    stroke: "currentColor"
  }));
};

var IconGoogleAuth = (0, _styledComponents["default"])(Svg).withConfig({
  displayName: "IconGoogleAuth",
  componentId: "sc-1hfnf7y-0"
})(function (_ref) {
  var backgroundColor = _ref.backgroundColor,
      circleColor = _ref.circleColor,
      color = _ref.color,
      theme = _ref.theme;
  return [backgroundColor && {
    backgroundColor: (0, _moonUtils.themed)('color', backgroundColor)(theme),
    padding: backgroundColor ? '0.25em' : 0,
    overflow: 'visible',
    borderRadius: '50%'
  }, color && {
    color: (0, _moonUtils.themed)('color', color)(theme)
  }, circleColor && {
    circle: {
      fill: (0, _moonUtils.themed)('color', circleColor)(theme)
    }
  }];
});
var _default = IconGoogleAuth;
exports["default"] = _default;
//# sourceMappingURL=IconGoogleAuth.js.map