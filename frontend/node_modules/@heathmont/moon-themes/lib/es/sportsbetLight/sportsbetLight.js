function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import sportsbetDark from '../sportsbetDark/sportsbetDark';
var lightColors = {
  piccolo: {
    120: '#02C054',
    100: '#0CCF61',
    80: '#18DC6D'
  },
  hit: {
    120: '#D6D8DB',
    100: '#DFE0E2',
    80: '#E7E8E9'
  },
  beerus: {
    100: '#E6E6E6'
  },
  goku: {
    100: '#FFFFFF',
    80: '#F1F2F3',
    40: '#E0E3E6',
    10: '#CED4D9'
  },
  gohan: {
    100: '#F7F7F7',
    80: '#F0F0F0',
    40: '#E0E0E0',
    10: '#D1D1D1'
  },
  goten: {
    100: '#FFFFFF'
  },
  bulma: {
    100: '#1A212A'
  },
  trunks: {
    100: '#607680'
  }
};

var sportsbetLight = _objectSpread(_objectSpread({}, sportsbetDark), {}, {
  color: _objectSpread(_objectSpread({}, sportsbetDark.color), {}, {
    text: lightColors.bulma[100],
    background: lightColors.goku[100]
  }, lightColors),
  colorScheme: 'light'
});

export default sportsbetLight;
//# sourceMappingURL=sportsbetLight.js.map