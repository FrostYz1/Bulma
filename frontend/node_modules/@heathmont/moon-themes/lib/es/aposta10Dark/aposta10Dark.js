function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import sharedTokens from '../sharedTokens/sharedTokens';
import avertaStd from '../sharedTokens/avertaStd';
import supportColors from '../supportColors/supportColors';
var color = {
  piccolo: {
    120: '#2E9468',
    100: '#39A275',
    80: '#46AF81'
  },
  hit: {
    120: '#565e6c',
    100: '#636b79',
    80: '#6f7785'
  },
  goten: {
    100: '#FFFFFF'
  },
  goku: {
    100: '#070A0D',
    80: '#11161D',
    40: '#262F3B',
    10: '#3D4957'
  },
  gohan: {
    100: '#272C35',
    80: '#323843',
    40: '#4A515E',
    10: '#636B79'
  },
  beerus: {
    100: '#4E535A'
  },
  bulma: {
    100: '#FFFFFF'
  },
  trunks: {
    100: '#C8D0D5'
  }
};

var aposta10Dark = _objectSpread(_objectSpread({}, sharedTokens), {}, {
  brand: 'Aposta10',
  fontFace: avertaStd.fontFace,
  fontFamily: avertaStd.fontStack,
  fontSize: {
    body: 14
  },
  color: _objectSpread(_objectSpread({
    text: color.bulma[100],
    background: color.goku[100]
  }, supportColors), color),
  colorScheme: 'dark'
});

export default aposta10Dark;
//# sourceMappingURL=aposta10Dark.js.map