{"version":3,"sources":["../../../src/sharedTokens/sharedTokens.ts"],"names":["borderStyle","borderWidth","space","transitionDuration","sharedTokens","base","fontSize","lineHeight","border","boxShadow","breakpoint","small","medium","large","xlarge","fontFace","undefined","fontFamily","body","fontWeight","normal","semibold","maxWidth","opacity","disabled","radius","largest","xsmall","slow","transition","zIndex","carouselControl","dialog","toggle"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,IAAMA,WAAW,GAAG,OAApB;AACA,IAAMC,WAAW,GAAG,CAApB;AAEA,IAAMC,KAAK,GAAG,EAAd;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;AAyUA,IAAMC,YAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAE;AACJH,IAAAA,KAAK,EAALA,KADI;AAEJI,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR,GAD0B;AAMhCP,EAAAA,WAAW,EAAXA,WANgC;AAOhCC,EAAAA,WAAW,EAAXA,WAPgC;AAQhCO,EAAAA,MAAM,YAAKP,WAAL,gBAAsBD,WAAtB,CAR0B;AAShCS,EAAAA,SAAS,EACP,6EAV8B;AAWhCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,GADG;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,KAAK,EAAE,IAHG;AAIVC,IAAAA,MAAM,EAAE;AAJE,GAXoB;AAiBhCC,EAAAA,QAAQ,EAAEC,SAjBsB;AAkBhCC,EAAAA,UAAU,EACR,qHAnB8B;AAoBhCX,EAAAA,QAAQ,EAAE;AACRY,IAAAA,IAAI,EAAE;AADE,GApBsB;AAuBhCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,GADE;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAvBoB;AA2BhCC,EAAAA,QAAQ,EAAE;AACR,eAAS,IADD;AAERT,IAAAA,KAAK,EAAE;AAFC,GA3BsB;AA+BhCU,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GA/BuB;AAkChCC,EAAAA,MAAM,EAAE;AACNd,IAAAA,KAAK,EAAET,KAAK,GAAG,IADT;AAEN,eAASA,KAAK,GAAG,GAFX;AAGNwB,IAAAA,OAAO,EAAE;AAHH,GAlCwB;AAuChCxB,EAAAA,KAAK,EAAE;AACLyB,IAAAA,MAAM,EAAEzB,KAAK,GAAG,IADX;AAELS,IAAAA,KAAK,EAAET,KAAK,GAAG,GAFV;AAGL,eAASA,KAHJ;AAILU,IAAAA,MAAM,EAAEV,KAAK,GAAG,GAJX;AAKLW,IAAAA,KAAK,EAAEX,KAAK,GAAG,CALV;AAMLY,IAAAA,MAAM,EAAEZ,KAAK,GAAG;AANX,GAvCyB;AA+ChCC,EAAAA,kBAAkB,EAAE;AAClByB,IAAAA,IAAI,EAAEzB,kBAAkB,GAAG,CADT;AAElB,eAASA;AAFS,GA/CY;AAmDhC0B,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,YAAKzB,kBAAkB,GAAG,CAA1B,kBADM;AAEV,yBAAYA,kBAAZ;AAFU,GAnDoB;AAuDhC2B,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,CADX;AAENC,IAAAA,MAAM,EAAE,KAFF;AAGNC,IAAAA,MAAM,EAAE;AAHF;AAvDwB,CAAlC;AA8DA,eAAe7B,YAAf","sourcesContent":["import type { ColorShared, ColorValue } from '../supportColors/supportColors';\n\n/**\n * Shared Theme Base\n *\n * `shared` is not a theme itself, more a core set of values used as a\n * foundational layer for each theme.\n *\n * As colors change per brand, we're only interested in typing the shared color\n * palettes here.\n */\n\n// type OmitBrand = Omit<Theme, 'brand'>;\n// type OmitColorScheme = Omit<OmitBrand, 'colorScheme'>;\n\n// type Shared = Omit<OmitColorScheme, 'color'>;\n\nconst borderStyle = 'solid';\nconst borderWidth = 1;\n\nconst space = 16;\n\nconst transitionDuration = 0.2;\n\nexport type ZIndex = {\n  carouselControl: number;\n  dialog: number;\n  toggle: number;\n};\n\nexport type TransitionDuration = {\n  slow: number;\n  default: number;\n};\n\nexport type Transition = {\n  slow: string;\n  default: string;\n};\n\nexport type SpaceProps = keyof Space;\n\n/**\n * @TODO Revisit to allow for 4px intervals, proposed:\n * xxsmall:  base.space * 0.25,\n * xsmall:   base.space * 0.5,\n * small:    base.space * 0.75,\n * default:  base.space,\n * medium:   base.space * 1.25,\n * large:    base.space * 1.5,\n * xlarge:   base.space * 2,\n * xxlarge:  base.space * 2.25\n * xxxlarge: base.space * 2.5,\n */\nexport type Space = {\n  xsmall: number /* px */;\n  small: number /* px */;\n  default: number /* px */;\n  medium: number /* px */;\n  large: number /* px */;\n  xlarge: number /* px */;\n};\n\nexport type Radius = {\n  small: number;\n  default: number;\n  largest: number;\n};\n\nexport type Opacity = {\n  disabled: number;\n};\n\nexport type MaxWidth = {\n  default: number /* px */;\n  large: number /* px */;\n};\n\nexport type FontFamily = string;\n\nexport type FontSize = {\n  body: number;\n};\n\nexport type FontWeight = {\n  normal: number;\n  semibold: number;\n};\n\nexport type Breakpoint = {\n  small: number /* in `px` */;\n  medium: number /* in `px` */;\n  large: number /* in `px` */;\n  xlarge: number /* in `px` */;\n};\n\nexport type BoxShadow = string;\n\nexport type BorderWidth = number;\n\nexport type BorderStyle = string;\n\nexport type Border = string;\n\ntype InteractiveColor = {\n  120?: ColorValue;\n  100?: ColorValue;\n  80?: ColorValue;\n};\n\ntype BackgroundColor = {\n  100?: ColorValue;\n  80?: ColorValue;\n  40?: ColorValue;\n  10?: ColorValue;\n};\n\n// For text & borders\ntype SingletonColor = {\n  100?: ColorValue;\n};\n\nexport type ColorPalette = {\n  120?: ColorValue;\n  100?: ColorValue;\n  80?: ColorValue;\n  60?: ColorValue;\n  40?: ColorValue;\n  20?: ColorValue;\n  10?: ColorValue;\n};\n\n\nexport type Color = ColorBase & ColorThemed & ColorShared;\n\nexport type ColorNames =\n  | 'piccolo.120'\n  | 'piccolo.100'\n  | 'piccolo.80'\n  | 'hit.120'\n  | 'hit.100'\n  | 'hit.80'\n  | 'goku.100'\n  | 'goku.80'\n  | 'goku.40'\n  | 'goku.10'\n  | 'gohan.100'\n  | 'gohan.80'\n  | 'gohan.40'\n  | 'gohan.10'\n  | 'beerus.100'\n  | 'goten.100'\n  | 'bulma.100'\n  | 'trunks.100'\n  | 'krillin.100'\n  | 'krillin.10'\n  | 'chiChi.100'\n  | 'chiChi.10'\n  | 'roshi.100'\n  | 'roshi.10'\n  | 'dodoria.100'\n  | 'dodoria.10'\n  | 'cell.100'\n  | 'cell.10'\n  | 'raditz.100'\n  | 'raditz.10'\n  | 'whis.100'\n  | 'whis.10'\n  | 'frieza.100'\n  | 'frieza.10'\n  | 'nappa.100'\n  | 'nappa.10'\n  | 'popo.100';\n\n/**\n * Color Props\n *\n * Access colors via dot notation where supported.\n *\n * Usage: `key.variant`\n * e.g. `piccolo.100`\n *\n * TODO: Type dot notation.\n */\n export type ColorProps = ColorNames | string;\n\nexport type ColorBase = {\n  text: ColorValue;\n  background: ColorValue;\n};\n\n/* Color Themed\n  ============================================ */\n\nexport type ColorPiccolo = {\n  /**\n   * Picollo (Primary)\n   *\n   * Usage: primary button colors.\n   */\n  piccolo: InteractiveColor;\n};\n\nexport type ColorHit = {\n  /**\n   * Hit (Secondary)\n   *\n   * Usage: secondary button colors.\n   */\n  hit: InteractiveColor;\n};\n\nexport type ColorGoku = {\n  /**\n   * Goku\n   *\n   * Usage: main background colors.\n   */\n  goku: BackgroundColor;\n};\n\nexport type ColorGohan = {\n  /**\n   * Gohan\n   *\n   * Usage: secondary background colors.\n   */\n  gohan: BackgroundColor;\n};\n\nexport type ColorBeerus = {\n  /**\n   * Beerus\n   *\n   * Usage: border colors.\n   */\n  beerus: SingletonColor;\n};\n\nexport type ColorGoten = {\n  /**\n   * Goten\n   *\n   * Usage: button text, promotion card text & some cases body or headline text.\n   */\n  goten: SingletonColor;\n};\n\nexport type ColorBulma = {\n  /**\n   * Bulma\n   *\n   * Usage: main body text.\n   */\n  bulma: SingletonColor;\n};\n\nexport type ColorTrunks = {\n  /**\n   * Trunks\n   *\n   * Usage: secondary body text.\n   */\n  trunks: SingletonColor;\n};\n\nexport type ColorThemed = ColorPiccolo &\n  ColorHit &\n  ColorGoku &\n  ColorGohan &\n  ColorBeerus &\n  ColorGoten &\n  ColorBulma &\n  ColorTrunks;\n\n/* Various Shared Palettes */\n\nexport interface Base {\n  /**\n   * ⚠️ Immutable\n   *\n   * Base FontSize and Base Space are immutable theme settings, in other words\n   * the remain the same in **all** themes and *must not* be changed under any\n   * circumstances.\n   *\n   * These settings are crucial for calculating values such as `rem` without\n   * having to over-use theme hooks/context calls.\n   *\n   * If you need to adjust the body font-size, consider using the theme-specific\n   * setting `fontSize.body`.\n   *\n   * If you need to adjust the space, make use of the `space` theme config.\n   */\n  readonly space: 16;\n  readonly fontSize: 16;\n  /**\n   * ✅ Customisable\n   *\n   * Although the base.fontSize cannot be modified, the line-height can be\n   * adjusted to suit your font-face use-case.\n   */\n  readonly lineHeight: number;\n}\n\nexport type Brand =\n  | 'Sportsbet.io'\n  | 'Betadda'\n  | 'Bitcasino.io'\n  | 'Comms'\n  | 'Slots.io'\n  | 'LuckySlots'\n  | 'BombayClub'\n  | 'Livecasino.io'\n  | 'Hub88'\n  | 'Aposta10'\n  | 'BTCXE'\n  | 'MissionsTool'\n  | 'Moneyball'\n  | 'MoonDesign'\n  | 'ShangriLa.io'\n  | 'Empire.io'\n  | 'Tajcasino';\n\nexport type ColorScheme = 'light' | 'dark';\n\nexport interface SharedTheme {\n  base: Base;\n  border: Border;\n  borderWidth: BorderWidth;\n  borderStyle: BorderStyle;\n  boxShadow: BoxShadow;\n  breakpoint: Breakpoint;\n  fontFace?: any;\n  fontFamily: FontFamily;\n  fontSize: FontSize;\n  fontWeight: FontWeight;\n  maxWidth: MaxWidth;\n  opacity: Opacity;\n  radius: Radius;\n  space: Space;\n  transitionDuration: TransitionDuration;\n  transition: Transition;\n  zIndex: ZIndex;\n}\n\nexport type Theme = SharedTheme & {\n  brand: Brand;\n  colorScheme: ColorScheme;\n  color: Color;\n};\n\nconst sharedTokens: SharedTheme = {\n  base: {\n    space,\n    fontSize: 16,\n    lineHeight: 20,\n  },\n  borderStyle,\n  borderWidth,\n  border: `${borderWidth}px ${borderStyle}`,\n  boxShadow:\n    '0px 1.2px 3.6px rgba(0, 0, 0, 0.108), 0px 6.4px 14.4px rgba(0, 0, 0, 0.132)',\n  breakpoint: {\n    small: 500,\n    medium: 800,\n    large: 1080,\n    xlarge: 1200,\n  },\n  fontFace: undefined,\n  fontFamily:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif',\n  fontSize: {\n    body: 14,\n  },\n  fontWeight: {\n    normal: 400,\n    semibold: 500,\n  },\n  maxWidth: {\n    default: 1024,\n    large: 1440,\n  },\n  opacity: {\n    disabled: 0.35,\n  },\n  radius: {\n    small: space * 0.25,\n    default: space * 0.5,\n    largest: 100,\n  },\n  space: {\n    xsmall: space * 0.25,\n    small: space * 0.5,\n    default: space,\n    medium: space * 1.5,\n    large: space * 2,\n    xlarge: space * 2.5,\n  },\n  transitionDuration: {\n    slow: transitionDuration * 2,\n    default: transitionDuration,\n  },\n  transition: {\n    slow: `${transitionDuration * 2}s ease-in-out`,\n    default: `${transitionDuration}s ease-in-out`,\n  },\n  zIndex: {\n    carouselControl: 5,\n    dialog: 10000,\n    toggle: 1,\n  },\n};\n\nexport default sharedTokens;\n"],"file":"sharedTokens.js"}