function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import avertaStd from '../sharedTokens/avertaStd';
import sharedTokens from '../sharedTokens/sharedTokens';
import supportColors from '../supportColors/supportColors';
var boxShadow = '0px 2.4px 7.2px rgba(0, 0, 0, 0.18), 0px 12.8px 28.8px rgba(0, 0, 0, 0.22)';
var color = {
  hit: {
    120: '#572385',
    100: '#642E94',
    80: '#7139A2'
  },
  goku: {
    100: '#24033F',
    80: '#320854',
    40: '#4C1A75',
    10: '#65348D'
  },
  gohan: {
    100: '#3E0D68',
    80: '#4B1679',
    40: '#642E94',
    10: '#7E48AD'
  },
  beerus: {
    100: '#521B81'
  },
  bulma: {
    100: '#FFFFFF'
  },
  trunks: {
    100: '#A18EB4'
  }
};

var bitcasinoDark = _objectSpread(_objectSpread({}, sharedTokens), {}, {
  brand: 'Bitcasino.io',
  fontFace: avertaStd.fontFace,
  fontFamily: avertaStd.fontStack,
  fontSize: {
    body: 14
  },
  fontWeight: avertaStd.fontWeight,
  boxShadow: boxShadow,
  radius: {
    small: 4,
    "default": 8,
    largest: 8
  },
  color: _objectSpread(_objectSpread({}, supportColors), {}, {
    text: color.bulma[100],
    background: color.goku[100],
    piccolo: {
      120: '#F54100',
      100: '#FF4F0F',
      80: '#FA642E'
    },
    goten: {
      100: '#FFFFFF'
    }
  }, color),
  colorScheme: 'dark'
});

export default bitcasinoDark;
//# sourceMappingURL=bitcasinoDark.js.map