"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _betaddaDark = _interopRequireDefault(require("../betaddaDark/betaddaDark"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var lightColors = {
  piccolo: {
    120: '#E68A2E',
    100: '#FF9933',
    80: '#FFA347'
  },
  hit: {
    120: '#19930E',
    100: '#1CA30F',
    80: '#33AC27'
  },
  beerus: {
    100: '#E4E6E9'
  },
  goku: {
    100: '#FFFFFF',
    80: '#F1F2F3',
    40: '#E0E3E6',
    10: '#CED4D9'
  },
  gohan: {
    100: '#F2F3F7',
    80: '#E8E9ED',
    40: '#DFE0E3',
    10: '#D5D6D9'
  },
  goten: {
    100: '#FFFFFF'
  },
  bulma: {
    100: '#1A212A'
  },
  trunks: {
    100: '#63717B'
  }
};

var betaddaLight = _objectSpread(_objectSpread({}, _betaddaDark["default"]), {}, {
  color: _objectSpread(_objectSpread({}, _betaddaDark["default"].color), {}, {
    text: lightColors.bulma[100],
    background: lightColors.goku[100]
  }, lightColors),
  colorScheme: 'light'
});

var _default = betaddaLight;
exports["default"] = _default;
//# sourceMappingURL=betaddaLight.js.map